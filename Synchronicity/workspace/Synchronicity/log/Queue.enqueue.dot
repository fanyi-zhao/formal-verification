digraph G {
   node [shape=record];
B0[label="{Block 0|69.36:enter_1778: \n}"];
B1[label="{Block 1|70.7:boolean mustWakeDequeuers; \n}"];
B2[label="{Block 2|70.7:mustWakeDequeuers = false; \n}"];
B3[label="{Block 3|71.7:Lock tmp7; \n}"];
B4[label="{Block 4|71.7:tmp7 := this.enqLock; \n}"];
B5[label="{Block 5|71.20:acquire(tmp7); \n}"];
B6[label="{Block 6|72.11:while (true)   \n}"];
B7[label="{Block 7|72.11:goto loopHead_434,loopExit_434 \n}"];
B8[label="{Block 8|72.11:loopHead_434: \n}"];
B9[label="{Block 9|72.18:boolean tmp8; \n}"];
B10[label="{Block 10|72.18:tmp8 = true; \n}"];
B11[label="{Block 11|72.11:if (!tmp8) \{ \n}"];
B12[label="{Block 12|72.11:goto t_1701,f_1701 \n}"];
B13[label="{Block 13|72.11:t_1701: \n}"];
B14[label="{Block 14|72.11:goto loopExit_434 \n}"];
B15[label="{Block 15|72.11:goto end_1701 \n}"];
B16[label="{Block 16|72.11:f_1701: \n}"];
B17[label="{Block 17|72.11:goto end_1701 \n}"];
B18[label="{Block 18|72.11:end_1701: \n}"];
B19[label="{Block 19|75.13:boolean tmp9; \n}"];
B20[label="{Block 20|75.13:int tmp10; \n}"];
B21[label="{Block 21|75.13:tmp10 := this.size; \n}"];
B22[label="{Block 22|75.13:tmp9 = tmp10 \> 0; \n}"];
B23[label="{Block 23|75.13:if (tmp9 /* == this.size \> 0 */) \{ \n}"];
B24[label="{Block 24|75.13:goto t_1702,f_1702 \n}"];
B25[label="{Block 25|75.32:t_1702: \n}"];
B26[label="{Block 26|76.15:goto loopExit_434 \n}"];
B27[label="{Block 27|75.32:goto end_1702 \n}"];
B28[label="{Block 28|75.27:f_1702: \n}"];
B29[label="{Block 29|75.13:goto end_1702 \n}"];
B30[label="{Block 30|75.13:end_1702: \n}"];
B31[label="{Block 31|78.13:Lock mutex; \n}"];
B32[label="{Block 32|78.13:mutex := this.enqLock; \n}"];
B33[label="{Block 33|79.13:release(mutex); \n}"];
B34[label="{Block 34|79.13:yield; \n}"];
B35[label="{Block 35|79.13:acquire(mutex); \n}"];
B36[label="{Block 36|72.11:loopExit_434: \n}"];
B37[label="{Block 37|72.11:while (true)   \n}"];
B38[label="{Block 38|81.11:Node e; \n}"];
B39[label="{Block 39|81.11:e = new Node(); \n}"];
B40[label="{Block 40|81.11:Lock tmp11; \n}"];
B41[label="{Block 41|81.11:tmp11 := this.enqLock; \n}"];
B42[label="{Block 42|81.11:inlined e.init(value,Node.null,tmp11); \n}"];
B43[label="{Block 43|81.11:int value$167; \n}"];
B44[label="{Block 44|81.11:Node next$167; \n}"];
B45[label="{Block 45|81.11:Lock owner$167; \n}"];
B46[label="{Block 46|81.11:Node this$167; \n}"];
B47[label="{Block 47|81.11:value$167 = value; \n}"];
B48[label="{Block 48|81.11:next$167 = Node.null; \n}"];
B49[label="{Block 49|81.11:owner$167 = tmp11; \n}"];
B50[label="{Block 50|81.11:this$167 = e; \n}"];
B51[label="{Block 51|11.5:assume this$167.value == 0; \n}"];
B52[label="{Block 52|11.5:assume this$167.next == Node.null; \n}"];
B53[label="{Block 53|11.5:assume this$167.owner == Lock.null; \n}"];
B54[label="{Block 54|12.7:this$167.value := value$167; \n}"];
B55[label="{Block 55|13.7:this$167.next := next$167; \n}"];
B56[label="{Block 56|14.7:this$167.owner := owner$167; \n}"];
B57[label="{Block 57|11.44:goto exit$167 \n}"];
B58[label="{Block 58|81.11:exit$167: \n}"];
B59[label="{Block 59|81.11:inlined return; \n}"];
B60[label="{Block 60|82.11:Lock l; \n}"];
B61[label="{Block 61|82.11:l := this.enqLock; \n}"];
B62[label="{Block 62|83.11:boolean tmp12; \n}"];
B63[label="{Block 63|83.11:tmp12 = holds(l, tid); \n}"];
B64[label="{Block 64|83.11:assert tmp12 /* == holds(l, tid) */; \n}"];
B65[label="{Block 65|84.11:Node tmp13; \n}"];
B66[label="{Block 66|84.11:tmp13 := this.tail; \n}"];
B67[label="{Block 67|84.11:tmp13.next := e; \n}"];
B68[label="{Block 68|85.11:this.tail := e; \n}"];
B69[label="{Block 69|86.11:boolean tmp14; \n}"];
B70[label="{Block 70|86.11:int tmp15; \n}"];
B71[label="{Block 71|86.11:inlined tmp15 = this.getAndDecSize(); \n}"];
B72[label="{Block 72|86.11:Queue this$168; \n}"];
B73[label="{Block 73|86.11:this$168 = this; \n}"];
B74[label="{Block 74|54.20:acquire(this$168); \n}"];
B75[label="{Block 75|55.9:int s$168; \n}"];
B76[label="{Block 76|55.9:s$168 := this$168.size; \n}"];
B77[label="{Block 77|56.9:int tmp5$168; \n}"];
B78[label="{Block 78|56.9:tmp5$168 = s$168 - 1; \n}"];
B79[label="{Block 79|56.9:this$168.size := tmp5$168; \n}"];
B80[label="{Block 80|58.7:release(this$168); \n}"];
B81[label="{Block 81|57.9:tmp15 = s$168; \n}"];
B82[label="{Block 82|57.9:goto exit$168 \n}"];
B83[label="{Block 83|58.7:release(this$168); \n}"];
B84[label="{Block 84|53.25:tmp15 = -1; \n}"];
B85[label="{Block 85|53.25:goto exit$168 \n}"];
B86[label="{Block 86|86.11:exit$168: \n}"];
B87[label="{Block 87|86.11:inlined return; \n}"];
B88[label="{Block 88|86.11:int tmp16; \n}"];
B89[label="{Block 89|86.11:tmp16 := this.capacity; \n}"];
B90[label="{Block 90|86.11:tmp14 = tmp15 == tmp16; \n}"];
B91[label="{Block 91|86.11:if (tmp14) \{ \n}"];
B92[label="{Block 92|86.11:goto t_1703,f_1703 \n}"];
B93[label="{Block 93|86.54:t_1703: \n}"];
B94[label="{Block 94|87.13:mustWakeDequeuers = true; \n}"];
B95[label="{Block 95|86.54:goto end_1703 \n}"];
B96[label="{Block 96|86.36:f_1703: \n}"];
B97[label="{Block 97|86.11:goto end_1703 \n}"];
B98[label="{Block 98|86.11:end_1703: \n}"];
B99[label="{Block 99|89.7:release(tmp7); \n}"];
B100[label="{Block 100|90.7:yield; \n}"];
B101[label="{Block 101|91.7:if (mustWakeDequeuers /* == mustWakeDequeuers */) \{ \n}"];
B102[label="{Block 102|91.7:goto t_1704,f_1704 \n}"];
B103[label="{Block 103|91.30:t_1704: \n}"];
B104[label="{Block 104|92.9:Lock tmp17; \n}"];
B105[label="{Block 105|92.9:tmp17 := this.deqLock; \n}"];
B106[label="{Block 106|92.22:acquire(tmp17); \n}"];
B107[label="{Block 107|94.9:release(tmp17); \n}"];
B108[label="{Block 108|91.30:goto end_1704 \n}"];
B109[label="{Block 109|91.11:f_1704: \n}"];
B110[label="{Block 110|91.7:goto end_1704 \n}"];
B111[label="{Block 111|91.7:end_1704: \n}"];
B112[label="{Block 112|69.36:// return; \n}"];
B113[label="{Block 113|69.36:exit_1778: \n}"];
B0 -> B1;
B1 -> B2;
B2 -> B3;
B3 -> B4;
B4 -> B5;
B5 -> B6;
B6 -> B7;
B7 -> B8;
B7 -> B36;
B8 -> B9;
B9 -> B10;
B10 -> B11;
B11 -> B12;
B12 -> B16;
B12 -> B13;
B13 -> B14;
B14 -> B36;
B15 -> B18;
B16 -> B17;
B17 -> B18;
B18 -> B19;
B19 -> B20;
B20 -> B21;
B21 -> B22;
B22 -> B23;
B23 -> B24;
B24 -> B28;
B24 -> B25;
B25 -> B26;
B26 -> B36;
B27 -> B30;
B28 -> B29;
B29 -> B30;
B30 -> B31;
B31 -> B32;
B32 -> B33;
B33 -> B34;
B34 -> B35;
B35 -> B36;
B36 -> B37;
B37 -> B38;
B38 -> B39;
B39 -> B40;
B40 -> B41;
B41 -> B42;
B42 -> B43;
B43 -> B44;
B44 -> B45;
B45 -> B46;
B46 -> B47;
B47 -> B48;
B48 -> B49;
B49 -> B50;
B50 -> B51;
B51 -> B52;
B52 -> B53;
B53 -> B54;
B54 -> B55;
B55 -> B56;
B56 -> B57;
B57 -> B58;
B58 -> B59;
B59 -> B60;
B60 -> B61;
B61 -> B62;
B62 -> B63;
B63 -> B64;
B64 -> B65;
B65 -> B66;
B66 -> B67;
B67 -> B68;
B68 -> B69;
B69 -> B70;
B70 -> B71;
B71 -> B72;
B72 -> B73;
B73 -> B74;
B74 -> B75;
B75 -> B76;
B76 -> B77;
B77 -> B78;
B78 -> B79;
B79 -> B80;
B80 -> B81;
B81 -> B82;
B82 -> B86;
B83 -> B84;
B84 -> B85;
B85 -> B86;
B86 -> B87;
B87 -> B88;
B88 -> B89;
B89 -> B90;
B90 -> B91;
B91 -> B92;
B92 -> B96;
B92 -> B93;
B93 -> B94;
B94 -> B95;
B95 -> B98;
B96 -> B97;
B97 -> B98;
B98 -> B99;
B99 -> B100;
B100 -> B101;
B101 -> B102;
B102 -> B109;
B102 -> B103;
B103 -> B104;
B104 -> B105;
B105 -> B106;
B106 -> B107;
B107 -> B108;
B108 -> B111;
B109 -> B110;
B110 -> B111;
B111 -> B112;
B112 -> B113;
}

                                                                                                    
 /*                                                                                                 
                                                                                                    
 /home/artifact/Synchronicity/workspace/Synchronicity/tests/stable-wr-rd.sink:                      
                                                                                                    
 AST:                                                                                               
                                                                                                    
                                                                                                    
                                                                                                    
    class Example {                                                                                 
       boolean flag N                                                                               
                                                                                                    
       int y !this.flag                                                                             
       ? isRead ? B : E                                                                             
       : isRead ? L : E                                                                             
                                                                                                    
    }                                                                                               
    class Example2 {                                                                                
       boolean flag N                                                                               
                                                                                                    
       int y !this.flag                                                                             
       ? isRead ? B : E                                                                             
       : isRead ? R : E                                                                             
                                                                                                    
    }                                                                                               
                                                                                                    
                                                                                                    
                                                                                                    
 Explicit:                                                                                          
                                                                                                    
                                                                                                    
                                                                                                    
    class Example {                                                                                 
       boolean flag N                                                                               
                                                                                                    
       int y !this.flag                                                                             
       ? isRead ? B : E                                                                             
       : isRead ? L : E                                                                             
                                                                                                    
       Tid _lock isLocal(this, tid)                                                                 
       ? isRead                                                                                     
         ? B                                                                                        
         : newValue == tid || newValue == Tid.null ? B : E                                          
       : isRead                                                                                     
         ? this._lock == tid ? R : E                                                                
         : this._lock == Tid.null && newValue == tid                                                
           ? R                                                                                      
           : this._lock == tid && newValue == Tid.null ? L : E !                                    
        yields_as this._lock == tid == (newValue == tid);                                           
                                                                                                    
                                                                                                    
    }                                                                                               
    class Example2 {                                                                                
       boolean flag N                                                                               
                                                                                                    
       int y !this.flag                                                                             
       ? isRead ? B : E                                                                             
       : isRead ? R : E                                                                             
                                                                                                    
       Tid _lock isLocal(this, tid)                                                                 
       ? isRead                                                                                     
         ? B                                                                                        
         : newValue == tid || newValue == Tid.null ? B : E                                          
       : isRead                                                                                     
         ? this._lock == tid ? R : E                                                                
         : this._lock == Tid.null && newValue == tid                                                
           ? R                                                                                      
           : this._lock == tid && newValue == Tid.null ? L : E !                                    
        yields_as this._lock == tid == (newValue == tid);                                           
                                                                                                    
                                                                                                    
    }                                                                                               
                                                                                                    
                                                                                                    
                                                                                                    
 Inlined:                                                                                           
                                                                                                    
                                                                                                    
                                                                                                    
    class Example {                                                                                 
       boolean flag N                                                                               
                                                                                                    
       int y !this.flag                                                                             
       ? isRead ? B : E                                                                             
       : isRead ? L : E                                                                             
                                                                                                    
       Tid _lock isLocal(this, tid)                                                                 
       ? isRead                                                                                     
         ? B                                                                                        
         : newValue == tid || newValue == Tid.null ? B : E                                          
       : isRead                                                                                     
         ? this._lock == tid ? R : E                                                                
         : this._lock == Tid.null && newValue == tid                                                
           ? R                                                                                      
           : this._lock == tid && newValue == Tid.null ? L : E !                                    
        yields_as this._lock == tid == (newValue == tid);                                           
                                                                                                    
                                                                                                    
    }                                                                                               
    class Example2 {                                                                                
       boolean flag N                                                                               
                                                                                                    
       int y !this.flag                                                                             
       ? isRead ? B : E                                                                             
       : isRead ? R : E                                                                             
                                                                                                    
       Tid _lock isLocal(this, tid)                                                                 
       ? isRead                                                                                     
         ? B                                                                                        
         : newValue == tid || newValue == Tid.null ? B : E                                          
       : isRead                                                                                     
         ? this._lock == tid ? R : E                                                                
         : this._lock == Tid.null && newValue == tid                                                
           ? R                                                                                      
           : this._lock == tid && newValue == Tid.null ? L : E !                                    
        yields_as this._lock == tid == (newValue == tid);                                           
                                                                                                    
                                                                                                    
    }                                                                                               
                                                                                                    
                                                                                                    
                                                                                                    
 Prepared:                                                                                          
                                                                                                    
                                                                                                    
                                                                                                    
    class Example {                                                                                 
       boolean flag N                                                                               
                                                                                                    
       int y !this.flag                                                                             
       ? isRead ? B : E                                                                             
       : isRead ? L : E                                                                             
                                                                                                    
       Tid _lock isLocal(this, tid)                                                                 
       ? isRead                                                                                     
         ? B                                                                                        
         : newValue == tid || newValue == Tid.null ? B : E                                          
       : isRead                                                                                     
         ? this._lock == tid ? R : E                                                                
         : this._lock == Tid.null && newValue == tid                                                
           ? R                                                                                      
           : this._lock == tid && newValue == Tid.null ? L : E !                                    
        yields_as this._lock == tid == (newValue == tid);                                           
                                                                                                    
                                                                                                    
    }                                                                                               
    class Example2 {                                                                                
       boolean flag N                                                                               
                                                                                                    
       int y !this.flag                                                                             
       ? isRead ? B : E                                                                             
       : isRead ? R : E                                                                             
                                                                                                    
       Tid _lock isLocal(this, tid)                                                                 
       ? isRead                                                                                     
         ? B                                                                                        
         : newValue == tid || newValue == Tid.null ? B : E                                          
       : isRead                                                                                     
         ? this._lock == tid ? R : E                                                                
         : this._lock == Tid.null && newValue == tid                                                
           ? R                                                                                      
           : this._lock == tid && newValue == Tid.null ? L : E !                                    
        yields_as this._lock == tid == (newValue == tid);                                           
                                                                                                    
                                                                                                    
    }                                                                                               
                                                                                                    
                                                                                                    
 */                                                                                                 
                                                                                                    
//// Background                                                                                     
                                                                                                    
                                                                                                    
 /*                                                                                                 
 * Tid                                                                                              
 */                                                                                                 
 type Tid = int;  // make int so you can iterate over Tids                                          
 const unique Tid.null: Tid;                                                                        
 axiom Tid.null == -1;                                                                              
                                                                                                    
 function {:inline} ValidTid(tid : Tid): bool {                                                     
  tid != Tid.null && tid >= 0                                                                       
 }                                                                                                  
                                                                                                    
 type{:datatype} State;                                                                             
 function{:constructor} NULL(): State;                                                              
 function{:constructor} FRESH(): State;                                                             
 function{:constructor} LOCAL(t: Tid): State;                                                       
 function{:constructor} SHARED(): State;                                                            
                                                                                                    
 function {:inline} isNull(state: State) : bool {                                                   
  state == NULL()                                                                                   
 }                                                                                                  
                                                                                                    
 function {:inline} isFresh(state: State) : bool {                                                  
  state == FRESH()                                                                                  
 }                                                                                                  
                                                                                                    
 function {:inline} isShared(state: State) : bool {                                                 
  state == SHARED()                                                                                 
 }                                                                                                  
                                                                                                    
 function {:inline} isLocal(state: State, t: Tid) : bool {                                          
  state == LOCAL(t)                                                                                 
 }                                                                                                  
                                                                                                    
 function {:inline} isLocalAssignable(state: State, t: Tid) : bool {                                
  state == LOCAL(t) || state == SHARED() || state == NULL()                                         
 }                                                                                                  
                                                                                                    
 function {:inline} isSharedAssignable(state: State) : bool {                                       
  state == SHARED() || state == NULL()                                                              
 }                                                                                                  
                                                                                                    
 function {:inline} isAccessible(state: State, t: Tid) : bool {                                     
  state == LOCAL(t) || state == SHARED()                                                            
 }                                                                                                  
                                                                                                    
 function {:inline} isAllocated(state: State) : bool {                                              
  !isFresh(state) && !isNull(state)                                                                 
 }                                                                                                  
                                                                                                    
                                                                                                    
 function MOD(x:int, y:int): int;                                                                   
                                                                                                    
                                                                                                    
 /*                                                                                                 
 * For triggers                                                                                     
 */                                                                                                 
 function {:inline false} _trigger(i: int): bool {  true  }                                         
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 type Phase;                                                                                        
 const unique PreCommit : Phase;                                                                    
 const unique PostCommit : Phase;                                                                   
 const unique PhaseError : Phase;                                                                   
                                                                                                    
 function {:inline} transition(p: Phase, m: Mover): Phase {                                         
  if (m == _B) then                                                                                 
   p                                                                                                
  else if (m == _R) then                                                                            
   if (p == PreCommit) then                                                                         
    PreCommit                                                                                       
   else                                                                                             
    PhaseError                                                                                      
  else if (m == _L) then                                                                            
   if (p == PostCommit) then                                                                        
    PostCommit                                                                                      
   else if (p == PreCommit) then                                                                    
    PostCommit                                                                                      
   else                                                                                             
    PhaseError                                                                                      
  else if (m == _N) then                                                                            
   if (p == PreCommit) then                                                                         
    PostCommit                                                                                      
   else                                                                                             
    PhaseError                                                                                      
  else                                                                                              
   PhaseError // m == E or m == I                                                                   
 }                                                                                                  
                                                                                                    
                                                                                                    
 type Mover;                                                                                        
 const unique _B : Mover;                                                                           
 const unique _R : Mover;                                                                           
 const unique _L : Mover;                                                                           
 const unique _N : Mover;                                                                           
 const unique _E : Mover;                                                                           
                                                                                                    
 axiom (forall m : Mover :: m == _B || m == _R || m == _L || m == _N || m == _E);                   
                                                                                                    
 function {:inline} leq(m1: Mover, m2: Mover) : bool {                                              
  if (m1 == _B) then                                                                                
   true                                                                                             
  else if (m1 == _R) then                                                                           
   m2 == _R || m2 == _N || m2 == _E                                                                 
  else if (m1 == _L) then                                                                           
   m2 == _L || m2 == _N || m2 == _E                                                                 
  else if (m1 == _N) then                                                                           
   m2 == _N || m2 == _E                                                                             
  else if (m1 == _E) then                                                                           
   m2 == _E                                                                                         
  else                                                                                              
   false // should never happen...                                                                  
 }                                                                                                  
                                                                                                    
 function {:inline} lt(m1: Mover, m2: Mover) : bool { m1 != m2 && leq(m1, m2) }                     
                                                                                                    
 function {:inline} isError(m : Mover) : bool {                                                     
  m == _E                                                                                           
 }                                                                                                  
                                                                                                    
 function {:inline} eqOrError(m : Mover, n : Mover) : bool {                                        
  m == n || m == _E                                                                                 
 }                                                                                                  
                                                                                                    
 type{:datatype} MoverPath;                                                                         
 function{:constructor} moverPath(m:Mover, p:int):MoverPath;                                        
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
//// axioms                                                                                         
                                                                                                    
                                                                                                    
//// classes                                                                                        
                                                                                                    
                                                                                                    
/*** Class Decl Example ***/                                                                        
                                                                                                    
type Example;                                                                                       
const unique Example.null: Example;                                                                 
var Example._state: [Example]State;                                                                 
                                                                                                    
                                                                                                    
/////                                                                                               
                                                                                                    
var Example.flag: [Example]bool;                                                                    
                                                                                                    
function {:inline} ReadEval.Example.flag(tid: Tid,this : Example,Example._state: [Example]State,Example.flag: [Example]bool,Example.y: [Example]int,Example._lock: [Example]Tid,Example2._state: [Example2]State,Example2.flag: [Example2]bool,Example2.y: [Example2]int,Example2._lock: [Example2]Tid) returns (MoverPath) {
 (var isRead := true;                                                                               
 (var newValue := false;                                                                            
 moverPath(_N, 0)                                                                                   
 )                                                                                                  
 )                                                                                                  
}                                                                                                   
                                                                                                    
function {:inline} WriteEval.Example.flag(tid: Tid,this : Example,newValue: bool,Example._state: [Example]State,Example.flag: [Example]bool,Example.y: [Example]int,Example._lock: [Example]Tid,Example2._state: [Example2]State,Example2.flag: [Example2]bool,Example2.y: [Example2]int,Example2._lock: [Example2]Tid) returns (MoverPath) {
 (var isRead := false;                                                                              
 moverPath(_N, 0)                                                                                   
 )                                                                                                  
}                                                                                                   
                                                                                                    
/////                                                                                               
                                                                                                    
/////                                                                                               
                                                                                                    
var Example.y: [Example]int;                                                                        
                                                                                                    
function {:inline} ReadEval.Example.y(tid: Tid,this : Example,Example._state: [Example]State,Example.flag: [Example]bool,Example.y: [Example]int,Example._lock: [Example]Tid,Example2._state: [Example2]State,Example2.flag: [Example2]bool,Example2.y: [Example2]int,Example2._lock: [Example2]Tid) returns (MoverPath) {
 (var isRead := true;                                                                               
 (var newValue := 0;                                                                                
 if (!(Example.flag[this])) then                                                                    
  if (isRead) then                                                                                  
   moverPath(_B, 3)                                                                                 
  else                                                                                              
   moverPath(_E, 1)                                                                                 
 else                                                                                               
  if (isRead) then                                                                                  
   moverPath(_L, 2)                                                                                 
  else                                                                                              
   moverPath(_E, 0)                                                                                 
 )                                                                                                  
 )                                                                                                  
}                                                                                                   
                                                                                                    
function {:inline} WriteEval.Example.y(tid: Tid,this : Example,newValue: int,Example._state: [Example]State,Example.flag: [Example]bool,Example.y: [Example]int,Example._lock: [Example]Tid,Example2._state: [Example2]State,Example2.flag: [Example2]bool,Example2.y: [Example2]int,Example2._lock: [Example2]Tid) returns (MoverPath) {
 (var isRead := false;                                                                              
 if (!(Example.flag[this])) then                                                                    
  if (isRead) then                                                                                  
   moverPath(_B, 3)                                                                                 
  else                                                                                              
   moverPath(_E, 1)                                                                                 
 else                                                                                               
  if (isRead) then                                                                                  
   moverPath(_L, 2)                                                                                 
  else                                                                                              
   moverPath(_E, 0)                                                                                 
 )                                                                                                  
}                                                                                                   
                                                                                                    
/////                                                                                               
                                                                                                    
/////                                                                                               
                                                                                                    
var Example._lock: [Example]Tid;                                                                    
                                                                                                    
function {:inline} ReadEval.Example._lock(tid: Tid,this : Example,Example._state: [Example]State,Example.flag: [Example]bool,Example.y: [Example]int,Example._lock: [Example]Tid,Example2._state: [Example2]State,Example2.flag: [Example2]bool,Example2.y: [Example2]int,Example2._lock: [Example2]Tid) returns (MoverPath) {
 (var isRead := true;                                                                               
 (var newValue := Tid.null;                                                                         
 if (isLocal(Example._state[this], tid)) then                                                       
  if (isRead) then                                                                                  
   moverPath(_B, 3)                                                                                 
  else                                                                                              
   if (((newValue==tid)||(newValue==Tid.null))) then                                                
    moverPath(_B, 5)                                                                                
   else                                                                                             
    moverPath(_E, 1)                                                                                
 else                                                                                               
  if (isRead) then                                                                                  
   if ((Example._lock[this]==tid)) then                                                             
    moverPath(_R, 6)                                                                                
   else                                                                                             
    moverPath(_E, 2)                                                                                
  else                                                                                              
   if (((Example._lock[this]==Tid.null)&&(newValue==tid))) then                                     
    moverPath(_R, 4)                                                                                
   else                                                                                             
    if (((Example._lock[this]==tid)&&(newValue==Tid.null))) then                                    
     moverPath(_L, 8)                                                                               
    else                                                                                            
     moverPath(_E, 0)                                                                               
 )                                                                                                  
 )                                                                                                  
}                                                                                                   
                                                                                                    
function {:inline} WriteEval.Example._lock(tid: Tid,this : Example,newValue: Tid,Example._state: [Example]State,Example.flag: [Example]bool,Example.y: [Example]int,Example._lock: [Example]Tid,Example2._state: [Example2]State,Example2.flag: [Example2]bool,Example2.y: [Example2]int,Example2._lock: [Example2]Tid) returns (MoverPath) {
 (var isRead := false;                                                                              
 if (isLocal(Example._state[this], tid)) then                                                       
  if (isRead) then                                                                                  
   moverPath(_B, 3)                                                                                 
  else                                                                                              
   if (((newValue==tid)||(newValue==Tid.null))) then                                                
    moverPath(_B, 5)                                                                                
   else                                                                                             
    moverPath(_E, 1)                                                                                
 else                                                                                               
  if (isRead) then                                                                                  
   if ((Example._lock[this]==tid)) then                                                             
    moverPath(_R, 6)                                                                                
   else                                                                                             
    moverPath(_E, 2)                                                                                
  else                                                                                              
   if (((Example._lock[this]==Tid.null)&&(newValue==tid))) then                                     
    moverPath(_R, 4)                                                                                
   else                                                                                             
    if (((Example._lock[this]==tid)&&(newValue==Tid.null))) then                                    
     moverPath(_L, 8)                                                                               
    else                                                                                            
     moverPath(_E, 0)                                                                               
 )                                                                                                  
}                                                                                                   
                                                                                                    
/////                                                                                               
                                                                                                    
                                                                                                    
/////                                                                                               
                                                                                                    
/////                                                                                               
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
/*** Class Decl Example2 ***/                                                                       
                                                                                                    
type Example2;                                                                                      
const unique Example2.null: Example2;                                                               
var Example2._state: [Example2]State;                                                               
                                                                                                    
                                                                                                    
/////                                                                                               
                                                                                                    
var Example2.flag: [Example2]bool;                                                                  
                                                                                                    
function {:inline} ReadEval.Example2.flag(tid: Tid,this : Example2,Example._state: [Example]State,Example.flag: [Example]bool,Example.y: [Example]int,Example._lock: [Example]Tid,Example2._state: [Example2]State,Example2.flag: [Example2]bool,Example2.y: [Example2]int,Example2._lock: [Example2]Tid) returns (MoverPath) {
 (var isRead := true;                                                                               
 (var newValue := false;                                                                            
 moverPath(_N, 0)                                                                                   
 )                                                                                                  
 )                                                                                                  
}                                                                                                   
                                                                                                    
function {:inline} WriteEval.Example2.flag(tid: Tid,this : Example2,newValue: bool,Example._state: [Example]State,Example.flag: [Example]bool,Example.y: [Example]int,Example._lock: [Example]Tid,Example2._state: [Example2]State,Example2.flag: [Example2]bool,Example2.y: [Example2]int,Example2._lock: [Example2]Tid) returns (MoverPath) {
 (var isRead := false;                                                                              
 moverPath(_N, 0)                                                                                   
 )                                                                                                  
}                                                                                                   
                                                                                                    
/////                                                                                               
                                                                                                    
/////                                                                                               
                                                                                                    
var Example2.y: [Example2]int;                                                                      
                                                                                                    
function {:inline} ReadEval.Example2.y(tid: Tid,this : Example2,Example._state: [Example]State,Example.flag: [Example]bool,Example.y: [Example]int,Example._lock: [Example]Tid,Example2._state: [Example2]State,Example2.flag: [Example2]bool,Example2.y: [Example2]int,Example2._lock: [Example2]Tid) returns (MoverPath) {
 (var isRead := true;                                                                               
 (var newValue := 0;                                                                                
 if (!(Example2.flag[this])) then                                                                   
  if (isRead) then                                                                                  
   moverPath(_B, 3)                                                                                 
  else                                                                                              
   moverPath(_E, 1)                                                                                 
 else                                                                                               
  if (isRead) then                                                                                  
   moverPath(_R, 2)                                                                                 
  else                                                                                              
   moverPath(_E, 0)                                                                                 
 )                                                                                                  
 )                                                                                                  
}                                                                                                   
                                                                                                    
function {:inline} WriteEval.Example2.y(tid: Tid,this : Example2,newValue: int,Example._state: [Example]State,Example.flag: [Example]bool,Example.y: [Example]int,Example._lock: [Example]Tid,Example2._state: [Example2]State,Example2.flag: [Example2]bool,Example2.y: [Example2]int,Example2._lock: [Example2]Tid) returns (MoverPath) {
 (var isRead := false;                                                                              
 if (!(Example2.flag[this])) then                                                                   
  if (isRead) then                                                                                  
   moverPath(_B, 3)                                                                                 
  else                                                                                              
   moverPath(_E, 1)                                                                                 
 else                                                                                               
  if (isRead) then                                                                                  
   moverPath(_R, 2)                                                                                 
  else                                                                                              
   moverPath(_E, 0)                                                                                 
 )                                                                                                  
}                                                                                                   
                                                                                                    
/////                                                                                               
                                                                                                    
/////                                                                                               
                                                                                                    
var Example2._lock: [Example2]Tid;                                                                  
                                                                                                    
function {:inline} ReadEval.Example2._lock(tid: Tid,this : Example2,Example._state: [Example]State,Example.flag: [Example]bool,Example.y: [Example]int,Example._lock: [Example]Tid,Example2._state: [Example2]State,Example2.flag: [Example2]bool,Example2.y: [Example2]int,Example2._lock: [Example2]Tid) returns (MoverPath) {
 (var isRead := true;                                                                               
 (var newValue := Tid.null;                                                                         
 if (isLocal(Example2._state[this], tid)) then                                                      
  if (isRead) then                                                                                  
   moverPath(_B, 3)                                                                                 
  else                                                                                              
   if (((newValue==tid)||(newValue==Tid.null))) then                                                
    moverPath(_B, 5)                                                                                
   else                                                                                             
    moverPath(_E, 1)                                                                                
 else                                                                                               
  if (isRead) then                                                                                  
   if ((Example2._lock[this]==tid)) then                                                            
    moverPath(_R, 6)                                                                                
   else                                                                                             
    moverPath(_E, 2)                                                                                
  else                                                                                              
   if (((Example2._lock[this]==Tid.null)&&(newValue==tid))) then                                    
    moverPath(_R, 4)                                                                                
   else                                                                                             
    if (((Example2._lock[this]==tid)&&(newValue==Tid.null))) then                                   
     moverPath(_L, 8)                                                                               
    else                                                                                            
     moverPath(_E, 0)                                                                               
 )                                                                                                  
 )                                                                                                  
}                                                                                                   
                                                                                                    
function {:inline} WriteEval.Example2._lock(tid: Tid,this : Example2,newValue: Tid,Example._state: [Example]State,Example.flag: [Example]bool,Example.y: [Example]int,Example._lock: [Example]Tid,Example2._state: [Example2]State,Example2.flag: [Example2]bool,Example2.y: [Example2]int,Example2._lock: [Example2]Tid) returns (MoverPath) {
 (var isRead := false;                                                                              
 if (isLocal(Example2._state[this], tid)) then                                                      
  if (isRead) then                                                                                  
   moverPath(_B, 3)                                                                                 
  else                                                                                              
   if (((newValue==tid)||(newValue==Tid.null))) then                                                
    moverPath(_B, 5)                                                                                
   else                                                                                             
    moverPath(_E, 1)                                                                                
 else                                                                                               
  if (isRead) then                                                                                  
   if ((Example2._lock[this]==tid)) then                                                            
    moverPath(_R, 6)                                                                                
   else                                                                                             
    moverPath(_E, 2)                                                                                
  else                                                                                              
   if (((Example2._lock[this]==Tid.null)&&(newValue==tid))) then                                    
    moverPath(_R, 4)                                                                                
   else                                                                                             
    if (((Example2._lock[this]==tid)&&(newValue==Tid.null))) then                                   
     moverPath(_L, 8)                                                                               
    else                                                                                            
     moverPath(_E, 0)                                                                               
 )                                                                                                  
}                                                                                                   
                                                                                                    
/////                                                                                               
                                                                                                    
                                                                                                    
/////                                                                                               
                                                                                                    
/////                                                                                               
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
//// Globals                                                                                        
                                                                                                    
                                                                                                    
//// State Invariant                                                                                
                                                                                                    
 function {:inline} StateInvariant(Example._state: [Example]State,Example.flag: [Example]bool,Example.y: [Example]int,Example._lock: [Example]Tid,Example2._state: [Example2]State,Example2.flag: [Example2]bool,Example2.y: [Example2]int,Example2._lock: [Example2]Tid) returns (bool) {
  true &&                                                                                           
  (forall _i: Example  :: _i == Example.null <==> isNull(Example._state[_i])) &&                    
  (forall _i: Example2  :: _i == Example2.null <==> isNull(Example2._state[_i])) &&                 
  _trigger(0) &&                                                                                    
  _trigger(1) &&                                                                                    
  _trigger(2) &&                                                                                    
  _trigger(3)                                                                                       
 }                                                                                                  
//// Spec Checks                                                                                    
                                                                                                    
                                                                                                    
 procedure _CheckWriteWrite.RightMover.Example.flag(t: Tid, u: Tid, v: bool, w: bool, x: Example)   
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[x], u);                                                       
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && x_pre == x;
 assume $recorded.state_pre == 1;                                                                   
 _writeByT := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
 assume !isError(_writeByT_Mover);                                                                  
 assume leq(_writeByT_Mover,_R);                                                                    
                                                                                                    
 Example.flag[x] := v;                                                                              
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && x_post == x;
 assume $recorded.state_post == 1;                                                                  
 // Do we need to share writeByT.value if it is local?                                              
 _writeByU := WriteEval.Example.flag(u: Tid,x: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 assert isError(_writeByU_Mover);                                                                          // (5.2): Example.flag failed Write-Write Right-Mover Check
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure _CheckWriteRead.RightMover.Example.flag(t: Tid, u: Tid, v: bool, w: bool, x: Example)    
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[x], u);                                                       
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _readByU : MoverPath;                                                                          
 var _readByU_Mover : Mover;                                                                        
 var _readByU_Path : int;                                                                           
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && x_pre == x;
 assume $recorded.state_pre == 1;                                                                   
 _writeByT := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
 assume !isError(_writeByT_Mover);                                                                  
 assume leq(_writeByT_Mover,_R);                                                                    
                                                                                                    
 Example.flag[x] := v;                                                                              
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && x_post == x;
 assume $recorded.state_post == 1;                                                                  
 // Do we need to share writeByT.value if it is local?                                              
 _readByU := ReadEval.Example.flag(u: Tid,x: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByU_Mover := m#moverPath(_readByU);                                                           
 _readByU_Path := p#moverPath(_readByU);                                                            
 assert _readByU_Mover == _E;                                                                              // (5.2): Example.flag failed Write-Read Right-Mover Check
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure _CheckWriteWrite.LeftMover.Example.flag(t: Tid, u: Tid, v: bool, w: bool, x: Example)    
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[x], u);                                                       
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var havocValue : bool;                                                                             
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 assume w == Example.flag[x];                                                                       
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && x_pre == x;
 assume $recorded.state_pre == 1;  // H                                                             
 _writeByT := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
 assume !isError(_writeByT_Mover);                                                                  
 assume leq(_writeByT_Mover,_L);                                                                    
                                                                                                    
                                                                                                    
 Example.flag[x] := havocValue;                                                                     
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && x_post == x;
 assume $recorded.state_post == 1;   // H[p.f = _]                                                  
 // Do we need to share writeByT.value if it is local?                                              
 _writeByU := WriteEval.Example.flag(u: Tid,x: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 assert isError(_writeByU_Mover);                                                                          // (5.2): Example.flag failed Write-Write Left-Mover Check
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure _CheckWriteRead.LeftMover.Example.flag(t: Tid, u: Tid, v: bool, w: bool, x: Example)     
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[x], u);                                                       
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _readByU : MoverPath;                                                                          
 var _readByU_Mover : Mover;                                                                        
 var _readByU_Path : int;                                                                           
 var havocValue : bool;                                                                             
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 assume w == Example.flag[x];                                                                       
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && x_pre == x;
 assume $recorded.state_pre == 1;  // H                                                             
 _readByU := ReadEval.Example.flag(u: Tid,x: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByU_Mover := m#moverPath(_readByU);                                                           
 _readByU_Path := p#moverPath(_readByU);                                                            
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && x_post == x;
 assume $recorded.state_post == 1; // H                                                             
 _writeByT := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
 assume !isError(_writeByT_Mover);                                                                  
 assume leq(_writeByT_Mover,_L);                                                                    
                                                                                                    
 assert _readByU_Mover == _E;                                                                              // (5.2): Example.flag failed Write-Read Left-Mover Check
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure _CheckRead.RightMover.Example.flag(t: Tid, u: Tid, v: bool, w: bool, x: Example)         
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[x], u);                                                       
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var _readByT : MoverPath;                                                                          
 var _readByT_Mover : Mover;                                                                        
 var _readByT_Path : int;                                                                           
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && x_pre == x;
 assume $recorded.state_pre == 1;  // H                                                             
 _readByT := ReadEval.Example.flag(t: Tid,x: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByT_Mover := m#moverPath(_readByT);                                                           
 _readByT_Path := p#moverPath(_readByT);                                                            
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && x_post == x;
 assume $recorded.state_post == 1;  // H                                                            
 _writeByU := WriteEval.Example.flag(u: Tid,x: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 assume leq(_readByT_Mover,_R);                                                                     
                                                                                                    
 assert isError(_writeByU_Mover);                                                                          // (5.2): Example.flag failed Read-Write Right-Mover Check
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure _CheckRead.LeftMover.Example.flag(t: Tid, u: Tid, v: bool, w: bool, x: Example)          
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[x], u);                                                       
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var _readByT : MoverPath;                                                                          
 var _readByT_Mover : Mover;                                                                        
 var _readByT_Path : int;                                                                           
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var havocValue : bool;                                                                             
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
 assume w == Example.flag[x];                                                                       
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && x_pre == x;
 assume $recorded.state_pre == 1;  // H                                                             
 _readByT := ReadEval.Example.flag(t: Tid,x: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByT_Mover := m#moverPath(_readByT);                                                           
 _readByT_Path := p#moverPath(_readByT);                                                            
 Example.flag[x] := havocValue;                                                                     
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && x_post == x;
 assume $recorded.state_post == 1; // H[p.f := _]                                                   
 _writeByU := WriteEval.Example.flag(u: Tid,x: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 assume leq(_readByT_Mover,_L);                                                                     
                                                                                                    
 assert isError(_writeByU_Mover);                                                                          // (5.2): Example.flag failed Read-Write Left-Mover Check
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure _CheckWriteWrite.RightMover.Example.y(t: Tid, u: Tid, v: int, w: int, x: Example)        
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[x], u);                                                       
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && x_pre == x;
 assume $recorded.state_pre == 1;                                                                   
 _writeByT := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
 assume !isError(_writeByT_Mover);                                                                  
 assume leq(_writeByT_Mover,_R);                                                                    
                                                                                                    
 Example.y[x] := v;                                                                                 
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && x_post == x;
 assume $recorded.state_post == 1;                                                                  
 // Do we need to share writeByT.value if it is local?                                              
 _writeByU := WriteEval.Example.y(u: Tid,x: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 assert isError(_writeByU_Mover);                                                                          // (6.2): Example.y failed Write-Write Right-Mover Check
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure _CheckWriteRead.RightMover.Example.y(t: Tid, u: Tid, v: int, w: int, x: Example)         
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[x], u);                                                       
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _readByU : MoverPath;                                                                          
 var _readByU_Mover : Mover;                                                                        
 var _readByU_Path : int;                                                                           
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && x_pre == x;
 assume $recorded.state_pre == 1;                                                                   
 _writeByT := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
 assume !isError(_writeByT_Mover);                                                                  
 assume leq(_writeByT_Mover,_R);                                                                    
                                                                                                    
 Example.y[x] := v;                                                                                 
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && x_post == x;
 assume $recorded.state_post == 1;                                                                  
 // Do we need to share writeByT.value if it is local?                                              
 _readByU := ReadEval.Example.y(u: Tid,x: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByU_Mover := m#moverPath(_readByU);                                                           
 _readByU_Path := p#moverPath(_readByU);                                                            
 assert _readByU_Mover == _E;                                                                              // (6.2): Example.y failed Write-Read Right-Mover Check
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure _CheckWriteWrite.LeftMover.Example.y(t: Tid, u: Tid, v: int, w: int, x: Example)         
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[x], u);                                                       
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var havocValue : int;                                                                              
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 assume w == Example.y[x];                                                                          
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && x_pre == x;
 assume $recorded.state_pre == 1;  // H                                                             
 _writeByT := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
 assume !isError(_writeByT_Mover);                                                                  
 assume leq(_writeByT_Mover,_L);                                                                    
                                                                                                    
                                                                                                    
 Example.y[x] := havocValue;                                                                        
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && x_post == x;
 assume $recorded.state_post == 1;   // H[p.f = _]                                                  
 // Do we need to share writeByT.value if it is local?                                              
 _writeByU := WriteEval.Example.y(u: Tid,x: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 assert isError(_writeByU_Mover);                                                                          // (6.2): Example.y failed Write-Write Left-Mover Check
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure _CheckWriteRead.LeftMover.Example.y(t: Tid, u: Tid, v: int, w: int, x: Example)          
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[x], u);                                                       
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _readByU : MoverPath;                                                                          
 var _readByU_Mover : Mover;                                                                        
 var _readByU_Path : int;                                                                           
 var havocValue : int;                                                                              
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 assume w == Example.y[x];                                                                          
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && x_pre == x;
 assume $recorded.state_pre == 1;  // H                                                             
 _readByU := ReadEval.Example.y(u: Tid,x: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByU_Mover := m#moverPath(_readByU);                                                           
 _readByU_Path := p#moverPath(_readByU);                                                            
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && x_post == x;
 assume $recorded.state_post == 1; // H                                                             
 _writeByT := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
 assume !isError(_writeByT_Mover);                                                                  
 assume leq(_writeByT_Mover,_L);                                                                    
                                                                                                    
 assert _readByU_Mover == _E;                                                                              // (6.2): Example.y failed Write-Read Left-Mover Check
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure _CheckRead.RightMover.Example.y(t: Tid, u: Tid, v: int, w: int, x: Example)              
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[x], u);                                                       
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var _readByT : MoverPath;                                                                          
 var _readByT_Mover : Mover;                                                                        
 var _readByT_Path : int;                                                                           
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && x_pre == x;
 assume $recorded.state_pre == 1;  // H                                                             
 _readByT := ReadEval.Example.y(t: Tid,x: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByT_Mover := m#moverPath(_readByT);                                                           
 _readByT_Path := p#moverPath(_readByT);                                                            
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && x_post == x;
 assume $recorded.state_post == 1;  // H                                                            
 _writeByU := WriteEval.Example.y(u: Tid,x: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 assume leq(_readByT_Mover,_R);                                                                     
                                                                                                    
 assert isError(_writeByU_Mover);                                                                          // (6.2): Example.y failed Read-Write Right-Mover Check
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure _CheckRead.LeftMover.Example.y(t: Tid, u: Tid, v: int, w: int, x: Example)               
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[x], u);                                                       
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var _readByT : MoverPath;                                                                          
 var _readByT_Mover : Mover;                                                                        
 var _readByT_Path : int;                                                                           
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var havocValue : int;                                                                              
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
 assume w == Example.y[x];                                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && x_pre == x;
 assume $recorded.state_pre == 1;  // H                                                             
 _readByT := ReadEval.Example.y(t: Tid,x: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByT_Mover := m#moverPath(_readByT);                                                           
 _readByT_Path := p#moverPath(_readByT);                                                            
 Example.y[x] := havocValue;                                                                        
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && x_post == x;
 assume $recorded.state_post == 1; // H[p.f := _]                                                   
 _writeByU := WriteEval.Example.y(u: Tid,x: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 assume leq(_readByT_Mover,_L);                                                                     
                                                                                                    
 assert isError(_writeByU_Mover);                                                                          // (6.2): Example.y failed Read-Write Left-Mover Check
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure _CheckWriteWrite.RightMover.Example2.flag(t: Tid, u: Tid, v: bool, w: bool, x: Example2) 
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[x], u);                                                      
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && x_pre == x;
 assume $recorded.state_pre == 1;                                                                   
 _writeByT := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
 assume !isError(_writeByT_Mover);                                                                  
 assume leq(_writeByT_Mover,_R);                                                                    
                                                                                                    
 Example2.flag[x] := v;                                                                             
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && x_post == x;
 assume $recorded.state_post == 1;                                                                  
 // Do we need to share writeByT.value if it is local?                                              
 _writeByU := WriteEval.Example2.flag(u: Tid,x: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 assert isError(_writeByU_Mover);                                                                          // (13.2): Example2.flag failed Write-Write Right-Mover Check
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure _CheckWriteRead.RightMover.Example2.flag(t: Tid, u: Tid, v: bool, w: bool, x: Example2)  
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[x], u);                                                      
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _readByU : MoverPath;                                                                          
 var _readByU_Mover : Mover;                                                                        
 var _readByU_Path : int;                                                                           
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && x_pre == x;
 assume $recorded.state_pre == 1;                                                                   
 _writeByT := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
 assume !isError(_writeByT_Mover);                                                                  
 assume leq(_writeByT_Mover,_R);                                                                    
                                                                                                    
 Example2.flag[x] := v;                                                                             
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && x_post == x;
 assume $recorded.state_post == 1;                                                                  
 // Do we need to share writeByT.value if it is local?                                              
 _readByU := ReadEval.Example2.flag(u: Tid,x: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByU_Mover := m#moverPath(_readByU);                                                           
 _readByU_Path := p#moverPath(_readByU);                                                            
 assert _readByU_Mover == _E;                                                                              // (13.2): Example2.flag failed Write-Read Right-Mover Check
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure _CheckWriteWrite.LeftMover.Example2.flag(t: Tid, u: Tid, v: bool, w: bool, x: Example2)  
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[x], u);                                                      
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var havocValue : bool;                                                                             
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 assume w == Example2.flag[x];                                                                      
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && x_pre == x;
 assume $recorded.state_pre == 1;  // H                                                             
 _writeByT := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
 assume !isError(_writeByT_Mover);                                                                  
 assume leq(_writeByT_Mover,_L);                                                                    
                                                                                                    
                                                                                                    
 Example2.flag[x] := havocValue;                                                                    
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && x_post == x;
 assume $recorded.state_post == 1;   // H[p.f = _]                                                  
 // Do we need to share writeByT.value if it is local?                                              
 _writeByU := WriteEval.Example2.flag(u: Tid,x: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 assert isError(_writeByU_Mover);                                                                          // (13.2): Example2.flag failed Write-Write Left-Mover Check
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure _CheckWriteRead.LeftMover.Example2.flag(t: Tid, u: Tid, v: bool, w: bool, x: Example2)   
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[x], u);                                                      
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _readByU : MoverPath;                                                                          
 var _readByU_Mover : Mover;                                                                        
 var _readByU_Path : int;                                                                           
 var havocValue : bool;                                                                             
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 assume w == Example2.flag[x];                                                                      
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && x_pre == x;
 assume $recorded.state_pre == 1;  // H                                                             
 _readByU := ReadEval.Example2.flag(u: Tid,x: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByU_Mover := m#moverPath(_readByU);                                                           
 _readByU_Path := p#moverPath(_readByU);                                                            
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && x_post == x;
 assume $recorded.state_post == 1; // H                                                             
 _writeByT := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
 assume !isError(_writeByT_Mover);                                                                  
 assume leq(_writeByT_Mover,_L);                                                                    
                                                                                                    
 assert _readByU_Mover == _E;                                                                              // (13.2): Example2.flag failed Write-Read Left-Mover Check
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure _CheckRead.RightMover.Example2.flag(t: Tid, u: Tid, v: bool, w: bool, x: Example2)       
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[x], u);                                                      
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var _readByT : MoverPath;                                                                          
 var _readByT_Mover : Mover;                                                                        
 var _readByT_Path : int;                                                                           
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && x_pre == x;
 assume $recorded.state_pre == 1;  // H                                                             
 _readByT := ReadEval.Example2.flag(t: Tid,x: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByT_Mover := m#moverPath(_readByT);                                                           
 _readByT_Path := p#moverPath(_readByT);                                                            
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && x_post == x;
 assume $recorded.state_post == 1;  // H                                                            
 _writeByU := WriteEval.Example2.flag(u: Tid,x: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 assume leq(_readByT_Mover,_R);                                                                     
                                                                                                    
 assert isError(_writeByU_Mover);                                                                          // (13.2): Example2.flag failed Read-Write Right-Mover Check
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure _CheckRead.LeftMover.Example2.flag(t: Tid, u: Tid, v: bool, w: bool, x: Example2)        
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[x], u);                                                      
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var _readByT : MoverPath;                                                                          
 var _readByT_Mover : Mover;                                                                        
 var _readByT_Path : int;                                                                           
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var havocValue : bool;                                                                             
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
 assume w == Example2.flag[x];                                                                      
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && x_pre == x;
 assume $recorded.state_pre == 1;  // H                                                             
 _readByT := ReadEval.Example2.flag(t: Tid,x: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByT_Mover := m#moverPath(_readByT);                                                           
 _readByT_Path := p#moverPath(_readByT);                                                            
 Example2.flag[x] := havocValue;                                                                    
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && x_post == x;
 assume $recorded.state_post == 1; // H[p.f := _]                                                   
 _writeByU := WriteEval.Example2.flag(u: Tid,x: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 assume leq(_readByT_Mover,_L);                                                                     
                                                                                                    
 assert isError(_writeByU_Mover);                                                                          // (13.2): Example2.flag failed Read-Write Left-Mover Check
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure _CheckWriteWrite.RightMover.Example2.y(t: Tid, u: Tid, v: int, w: int, x: Example2)      
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[x], u);                                                      
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && x_pre == x;
 assume $recorded.state_pre == 1;                                                                   
 _writeByT := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
 assume !isError(_writeByT_Mover);                                                                  
 assume leq(_writeByT_Mover,_R);                                                                    
                                                                                                    
 Example2.y[x] := v;                                                                                
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && x_post == x;
 assume $recorded.state_post == 1;                                                                  
 // Do we need to share writeByT.value if it is local?                                              
 _writeByU := WriteEval.Example2.y(u: Tid,x: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 assert isError(_writeByU_Mover);                                                                          // (14.2): Example2.y failed Write-Write Right-Mover Check
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure _CheckWriteRead.RightMover.Example2.y(t: Tid, u: Tid, v: int, w: int, x: Example2)       
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[x], u);                                                      
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _readByU : MoverPath;                                                                          
 var _readByU_Mover : Mover;                                                                        
 var _readByU_Path : int;                                                                           
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && x_pre == x;
 assume $recorded.state_pre == 1;                                                                   
 _writeByT := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
 assume !isError(_writeByT_Mover);                                                                  
 assume leq(_writeByT_Mover,_R);                                                                    
                                                                                                    
 Example2.y[x] := v;                                                                                
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && x_post == x;
 assume $recorded.state_post == 1;                                                                  
 // Do we need to share writeByT.value if it is local?                                              
 _readByU := ReadEval.Example2.y(u: Tid,x: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByU_Mover := m#moverPath(_readByU);                                                           
 _readByU_Path := p#moverPath(_readByU);                                                            
 assert _readByU_Mover == _E;                                                                              // (14.2): Example2.y failed Write-Read Right-Mover Check
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure _CheckWriteWrite.LeftMover.Example2.y(t: Tid, u: Tid, v: int, w: int, x: Example2)       
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[x], u);                                                      
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var havocValue : int;                                                                              
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 assume w == Example2.y[x];                                                                         
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && x_pre == x;
 assume $recorded.state_pre == 1;  // H                                                             
 _writeByT := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
 assume !isError(_writeByT_Mover);                                                                  
 assume leq(_writeByT_Mover,_L);                                                                    
                                                                                                    
                                                                                                    
 Example2.y[x] := havocValue;                                                                       
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && x_post == x;
 assume $recorded.state_post == 1;   // H[p.f = _]                                                  
 // Do we need to share writeByT.value if it is local?                                              
 _writeByU := WriteEval.Example2.y(u: Tid,x: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 assert isError(_writeByU_Mover);                                                                          // (14.2): Example2.y failed Write-Write Left-Mover Check
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure _CheckWriteRead.LeftMover.Example2.y(t: Tid, u: Tid, v: int, w: int, x: Example2)        
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[x], u);                                                      
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _readByU : MoverPath;                                                                          
 var _readByU_Mover : Mover;                                                                        
 var _readByU_Path : int;                                                                           
 var havocValue : int;                                                                              
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 assume w == Example2.y[x];                                                                         
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && x_pre == x;
 assume $recorded.state_pre == 1;  // H                                                             
 _readByU := ReadEval.Example2.y(u: Tid,x: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByU_Mover := m#moverPath(_readByU);                                                           
 _readByU_Path := p#moverPath(_readByU);                                                            
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && x_post == x;
 assume $recorded.state_post == 1; // H                                                             
 _writeByT := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
 assume !isError(_writeByT_Mover);                                                                  
 assume leq(_writeByT_Mover,_L);                                                                    
                                                                                                    
 assert _readByU_Mover == _E;                                                                              // (14.2): Example2.y failed Write-Read Left-Mover Check
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure _CheckRead.RightMover.Example2.y(t: Tid, u: Tid, v: int, w: int, x: Example2)            
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[x], u);                                                      
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var _readByT : MoverPath;                                                                          
 var _readByT_Mover : Mover;                                                                        
 var _readByT_Path : int;                                                                           
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && x_pre == x;
 assume $recorded.state_pre == 1;  // H                                                             
 _readByT := ReadEval.Example2.y(t: Tid,x: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByT_Mover := m#moverPath(_readByT);                                                           
 _readByT_Path := p#moverPath(_readByT);                                                            
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && x_post == x;
 assume $recorded.state_post == 1;  // H                                                            
 _writeByU := WriteEval.Example2.y(u: Tid,x: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 assume leq(_readByT_Mover,_R);                                                                     
                                                                                                    
 assert isError(_writeByU_Mover);                                                                          // (14.2): Example2.y failed Read-Write Right-Mover Check
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure _CheckRead.LeftMover.Example2.y(t: Tid, u: Tid, v: int, w: int, x: Example2)             
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[x], u);                                                      
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var _readByT : MoverPath;                                                                          
 var _readByT_Mover : Mover;                                                                        
 var _readByT_Path : int;                                                                           
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var havocValue : int;                                                                              
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
 assume w == Example2.y[x];                                                                         
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && x_pre == x;
 assume $recorded.state_pre == 1;  // H                                                             
 _readByT := ReadEval.Example2.y(t: Tid,x: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByT_Mover := m#moverPath(_readByT);                                                           
 _readByT_Path := p#moverPath(_readByT);                                                            
 Example2.y[x] := havocValue;                                                                       
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && x_post == x;
 assume $recorded.state_post == 1; // H[p.f := _]                                                   
 _writeByU := WriteEval.Example2.y(u: Tid,x: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 assume leq(_readByT_Mover,_L);                                                                     
                                                                                                    
 assert isError(_writeByU_Mover);                                                                          // (14.2): Example2.y failed Read-Write Left-Mover Check
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.A.Example.flag.Example.flag(t: Tid, u: Tid, v: bool, w: bool, w0: bool, x: Example, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example.flag;                                                                             
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example.flag(u: Tid,y: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example.flag[x] := v;                                                                              
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _writeByUPost := WriteEval.Example.flag(u: Tid,y: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _E)) ==> ((_writeByU_Mover == _writeByUPost_Mover || _writeByU_Mover == _E));       // (5.2): Example.flag is not Write-Write Stable with respect to Example.flag (case A.1)
 assert (leq(_writeByT_Mover, _N) && !leq(_writeByUPost_Mover, _L)) ==> (!leq(_writeByU_Mover, _L));       // (5.2): Example.flag is not Write-Write Stable with respect to Example.flag (case A.2)
 assert (x != y && leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByUPost_Mover == _writeByUPost_Mover || _writeByUPost_Mover == _E));       // (5.2): Example.flag is not Write-Write Stable with respect to Example.flag (case A.3)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 procedure Stable.Check.C.Example.flag.Example.flag(t: Tid, u: Tid, v: bool, w: bool, w0: bool, x: Example, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example.flag;                                                                             
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var tmpV : bool;                                                                                   
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var x_mid: Example;                                                                                
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var Example.y_mid: [Example]int;                                                                   
 var w0_mid: bool;                                                                                  
 var y_mid: Example;                                                                                
 var v_mid: bool;                                                                                   
 var Example._state_mid: [Example]State;                                                            
 var w_mid: bool;                                                                                   
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 _writeByT := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 tmpV := Example.flag[x];                                                                           
 Example.flag[x] := v;                                                                              
                                                                                                    
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
 _writeByU := WriteEval.Example.flag(u: Tid,y: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 Example.flag[x] := tmpV;                                                                           
 Example.flag[y] := w;                                                                              
 _writeByTPost := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (5.2): Example.flag is not Write-Write Stable with respect to Example.flag (case C)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.DE.Example.flag.Example.flag(t: Tid, u: Tid, v: bool, w: bool, w0: bool, x: Example, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example.flag;                                                                             
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var tmpV : bool;                                                                                   
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var x_mid: Example;                                                                                
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var Example.y_mid: [Example]int;                                                                   
 var w0_mid: bool;                                                                                  
 var y_mid: Example;                                                                                
 var v_mid: bool;                                                                                   
 var Example._state_mid: [Example]State;                                                            
 var w_mid: bool;                                                                                   
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example.flag(u: Tid,y: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 tmpV := Example.flag[x];                                                                           
 Example.flag[x] := v;                                                                              
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
                                                                                                    
 _writeByUPost := WriteEval.Example.flag(u: Tid,y: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
 Example.flag[x] := tmpV;                                                                           
 Example.flag[y] := w;                                                                              
 _writeByTPost := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
                                                                                                    
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _N)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (5.2): Example.flag is not Write-Write Stable with respect to Example.flag (case D)
 assert (leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (5.2): Example.flag is not Write-Write Stable with respect to Example.flag (case R)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.FHI.Example.flag.Example.flag(t: Tid, u: Tid, v: bool, w: bool, w0: bool, x: Example, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example.flag;                                                                             
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _readByT : MoverPath;                                                                          
 var _readByT_Mover : Mover;                                                                        
 var _readByT_Path : int;                                                                           
 var _readByTPost : MoverPath;                                                                      
 var _readByTPost_Mover : Mover;                                                                    
 var _readByTPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _readByT := ReadEval.Example.flag(t: Tid,x: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByT_Mover := m#moverPath(_readByT);                                                           
 _readByT_Path := p#moverPath(_readByT);                                                            
 _writeByU := WriteEval.Example.flag(u: Tid,y: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example.flag[y] := w;                                                                              
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByTPost := ReadEval.Example.flag(t: Tid,x: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByTPost_Mover := m#moverPath(_readByTPost);                                                   
 _readByTPost_Path := p#moverPath(_readByTPost);                                                    
                                                                                                    
 assert (leq(_readByT_Mover, _R) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (5.2): Example.flag is not Read-Write Stable with respect to Example.flag (case F)
 assert (leq(_readByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (5.2): Example.flag is not Read-Write Stable with respect to Example.flag (case H)
 assert (x != y && leq(_readByT_Mover, _N) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (5.2): Example.flag is not Read-Write Stable with respect to Example.flag (case I)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.JKL.Example.flag.Example.flag(t: Tid, u: Tid, v: bool, w: bool, w0: bool, x: Example, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example.flag;                                                                             
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _readByU : MoverPath;                                                                          
 var _readByU_Mover : Mover;                                                                        
 var _readByU_Path : int;                                                                           
 var _readByUPost : MoverPath;                                                                      
 var _readByUPost_Mover : Mover;                                                                    
 var _readByUPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _readByU := ReadEval.Example.flag(u: Tid,y: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByU_Mover := m#moverPath(_readByU);                                                           
 _readByU_Path := p#moverPath(_readByU);                                                            
 _writeByT := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example.flag[x] := v;                                                                              
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByUPost := ReadEval.Example.flag(u: Tid,y: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByUPost_Mover := m#moverPath(_readByUPost);                                                   
 _readByUPost_Path := p#moverPath(_readByUPost);                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_readByUPost_Mover, _E)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (5.2): Example.flag is not Write-Read Stable with respect to Example.flag (case J)
 assert (leq(_writeByT_Mover, _N) && leq(_readByUPost_Mover, _L)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (5.2): Example.flag is not Write-Read Stable with respect to Example.flag (case K)
 assert (leq(_writeByT_Mover, _N) && !leq(_readByUPost_Mover, _L)) ==> (!leq(_readByU_Mover, _L));         // (5.2): Example.flag is not Write-Read Stable with respect to Example.flag (case L)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.A.Example.flag.Example.y(t: Tid, u: Tid, v: bool, w: int, w0: int, x: Example, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example.flag;                                                                             
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example.y(u: Tid,y: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example.flag[x] := v;                                                                              
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _writeByUPost := WriteEval.Example.y(u: Tid,y: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _E)) ==> ((_writeByU_Mover == _writeByUPost_Mover || _writeByU_Mover == _E));       // (6.2): Example.y is not Write-Write Stable with respect to Example.flag (case A.1)
 assert (leq(_writeByT_Mover, _N) && !leq(_writeByUPost_Mover, _L)) ==> (!leq(_writeByU_Mover, _L));       // (6.2): Example.y is not Write-Write Stable with respect to Example.flag (case A.2)
 assert (x != y && leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByUPost_Mover == _writeByUPost_Mover || _writeByUPost_Mover == _E));       // (6.2): Example.y is not Write-Write Stable with respect to Example.flag (case A.3)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 procedure Stable.Check.C.Example.flag.Example.y(t: Tid, u: Tid, v: bool, w: int, w0: int, x: Example, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example.flag;                                                                             
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var tmpV : bool;                                                                                   
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var x_mid: Example;                                                                                
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var w_mid: int;                                                                                    
 var Example.y_mid: [Example]int;                                                                   
 var y_mid: Example;                                                                                
 var v_mid: bool;                                                                                   
 var Example._state_mid: [Example]State;                                                            
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
 var w0_mid: int;                                                                                   
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 _writeByT := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 tmpV := Example.flag[x];                                                                           
 Example.flag[x] := v;                                                                              
                                                                                                    
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
 _writeByU := WriteEval.Example.y(u: Tid,y: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 Example.flag[x] := tmpV;                                                                           
 Example.y[y] := w;                                                                                 
 _writeByTPost := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (5.2): Example.flag is not Write-Write Stable with respect to Example.y (case C)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.DE.Example.flag.Example.y(t: Tid, u: Tid, v: bool, w: int, w0: int, x: Example, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example.flag;                                                                             
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var tmpV : bool;                                                                                   
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var x_mid: Example;                                                                                
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var w_mid: int;                                                                                    
 var Example.y_mid: [Example]int;                                                                   
 var y_mid: Example;                                                                                
 var v_mid: bool;                                                                                   
 var Example._state_mid: [Example]State;                                                            
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
 var w0_mid: int;                                                                                   
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example.y(u: Tid,y: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 tmpV := Example.flag[x];                                                                           
 Example.flag[x] := v;                                                                              
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
                                                                                                    
 _writeByUPost := WriteEval.Example.y(u: Tid,y: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
 Example.flag[x] := tmpV;                                                                           
 Example.y[y] := w;                                                                                 
 _writeByTPost := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
                                                                                                    
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _N)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (5.2): Example.flag is not Write-Write Stable with respect to Example.y (case D)
 assert (leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (5.2): Example.flag is not Write-Write Stable with respect to Example.y (case R)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.FHI.Example.flag.Example.y(t: Tid, u: Tid, v: bool, w: int, w0: int, x: Example, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example.flag;                                                                             
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _readByT : MoverPath;                                                                          
 var _readByT_Mover : Mover;                                                                        
 var _readByT_Path : int;                                                                           
 var _readByTPost : MoverPath;                                                                      
 var _readByTPost_Mover : Mover;                                                                    
 var _readByTPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _readByT := ReadEval.Example.flag(t: Tid,x: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByT_Mover := m#moverPath(_readByT);                                                           
 _readByT_Path := p#moverPath(_readByT);                                                            
 _writeByU := WriteEval.Example.y(u: Tid,y: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example.y[y] := w;                                                                                 
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByTPost := ReadEval.Example.flag(t: Tid,x: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByTPost_Mover := m#moverPath(_readByTPost);                                                   
 _readByTPost_Path := p#moverPath(_readByTPost);                                                    
                                                                                                    
 assert (leq(_readByT_Mover, _R) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (5.2): Example.flag is not Read-Write Stable with respect to Example.y (case F)
 assert (leq(_readByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (5.2): Example.flag is not Read-Write Stable with respect to Example.y (case H)
 assert (x != y && leq(_readByT_Mover, _N) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (5.2): Example.flag is not Read-Write Stable with respect to Example.y (case I)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.JKL.Example.flag.Example.y(t: Tid, u: Tid, v: bool, w: int, w0: int, x: Example, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example.flag;                                                                             
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _readByU : MoverPath;                                                                          
 var _readByU_Mover : Mover;                                                                        
 var _readByU_Path : int;                                                                           
 var _readByUPost : MoverPath;                                                                      
 var _readByUPost_Mover : Mover;                                                                    
 var _readByUPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _readByU := ReadEval.Example.y(u: Tid,y: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByU_Mover := m#moverPath(_readByU);                                                           
 _readByU_Path := p#moverPath(_readByU);                                                            
 _writeByT := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example.flag[x] := v;                                                                              
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByUPost := ReadEval.Example.y(u: Tid,y: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByUPost_Mover := m#moverPath(_readByUPost);                                                   
 _readByUPost_Path := p#moverPath(_readByUPost);                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_readByUPost_Mover, _E)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (6.2): Example.y is not Write-Read Stable with respect to Example.flag (case J)
 assert (leq(_writeByT_Mover, _N) && leq(_readByUPost_Mover, _L)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (6.2): Example.y is not Write-Read Stable with respect to Example.flag (case K)
 assert (leq(_writeByT_Mover, _N) && !leq(_readByUPost_Mover, _L)) ==> (!leq(_readByU_Mover, _L));         // (6.2): Example.y is not Write-Read Stable with respect to Example.flag (case L)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.A.Example.flag.Example2.flag(t: Tid, u: Tid, v: bool, w: bool, w0: bool, x: Example, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example.flag;                                                                             
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example2.flag(u: Tid,y: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example.flag[x] := v;                                                                              
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _writeByUPost := WriteEval.Example2.flag(u: Tid,y: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _E)) ==> ((_writeByU_Mover == _writeByUPost_Mover || _writeByU_Mover == _E));       // (13.2): Example2.flag is not Write-Write Stable with respect to Example.flag (case A.1)
 assert (leq(_writeByT_Mover, _N) && !leq(_writeByUPost_Mover, _L)) ==> (!leq(_writeByU_Mover, _L));       // (13.2): Example2.flag is not Write-Write Stable with respect to Example.flag (case A.2)
 assert (true && leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByUPost_Mover == _writeByUPost_Mover || _writeByUPost_Mover == _E));       // (13.2): Example2.flag is not Write-Write Stable with respect to Example.flag (case A.3)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 procedure Stable.Check.C.Example.flag.Example2.flag(t: Tid, u: Tid, v: bool, w: bool, w0: bool, x: Example, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example.flag;                                                                             
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var tmpV : bool;                                                                                   
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var x_mid: Example;                                                                                
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var Example.y_mid: [Example]int;                                                                   
 var w0_mid: bool;                                                                                  
 var v_mid: bool;                                                                                   
 var Example._state_mid: [Example]State;                                                            
 var y_mid: Example2;                                                                               
 var w_mid: bool;                                                                                   
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 _writeByT := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 tmpV := Example.flag[x];                                                                           
 Example.flag[x] := v;                                                                              
                                                                                                    
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
 _writeByU := WriteEval.Example2.flag(u: Tid,y: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 Example.flag[x] := tmpV;                                                                           
 Example2.flag[y] := w;                                                                             
 _writeByTPost := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (5.2): Example.flag is not Write-Write Stable with respect to Example2.flag (case C)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.DE.Example.flag.Example2.flag(t: Tid, u: Tid, v: bool, w: bool, w0: bool, x: Example, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example.flag;                                                                             
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var tmpV : bool;                                                                                   
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var x_mid: Example;                                                                                
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var Example.y_mid: [Example]int;                                                                   
 var w0_mid: bool;                                                                                  
 var v_mid: bool;                                                                                   
 var Example._state_mid: [Example]State;                                                            
 var y_mid: Example2;                                                                               
 var w_mid: bool;                                                                                   
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example2.flag(u: Tid,y: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 tmpV := Example.flag[x];                                                                           
 Example.flag[x] := v;                                                                              
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
                                                                                                    
 _writeByUPost := WriteEval.Example2.flag(u: Tid,y: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
 Example.flag[x] := tmpV;                                                                           
 Example2.flag[y] := w;                                                                             
 _writeByTPost := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
                                                                                                    
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _N)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (5.2): Example.flag is not Write-Write Stable with respect to Example2.flag (case D)
 assert (leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (5.2): Example.flag is not Write-Write Stable with respect to Example2.flag (case R)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.FHI.Example.flag.Example2.flag(t: Tid, u: Tid, v: bool, w: bool, w0: bool, x: Example, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example.flag;                                                                             
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _readByT : MoverPath;                                                                          
 var _readByT_Mover : Mover;                                                                        
 var _readByT_Path : int;                                                                           
 var _readByTPost : MoverPath;                                                                      
 var _readByTPost_Mover : Mover;                                                                    
 var _readByTPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _readByT := ReadEval.Example.flag(t: Tid,x: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByT_Mover := m#moverPath(_readByT);                                                           
 _readByT_Path := p#moverPath(_readByT);                                                            
 _writeByU := WriteEval.Example2.flag(u: Tid,y: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example2.flag[y] := w;                                                                             
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByTPost := ReadEval.Example.flag(t: Tid,x: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByTPost_Mover := m#moverPath(_readByTPost);                                                   
 _readByTPost_Path := p#moverPath(_readByTPost);                                                    
                                                                                                    
 assert (leq(_readByT_Mover, _R) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (5.2): Example.flag is not Read-Write Stable with respect to Example2.flag (case F)
 assert (leq(_readByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (5.2): Example.flag is not Read-Write Stable with respect to Example2.flag (case H)
 assert (true && leq(_readByT_Mover, _N) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (5.2): Example.flag is not Read-Write Stable with respect to Example2.flag (case I)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.JKL.Example.flag.Example2.flag(t: Tid, u: Tid, v: bool, w: bool, w0: bool, x: Example, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example.flag;                                                                             
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _readByU : MoverPath;                                                                          
 var _readByU_Mover : Mover;                                                                        
 var _readByU_Path : int;                                                                           
 var _readByUPost : MoverPath;                                                                      
 var _readByUPost_Mover : Mover;                                                                    
 var _readByUPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _readByU := ReadEval.Example2.flag(u: Tid,y: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByU_Mover := m#moverPath(_readByU);                                                           
 _readByU_Path := p#moverPath(_readByU);                                                            
 _writeByT := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example.flag[x] := v;                                                                              
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByUPost := ReadEval.Example2.flag(u: Tid,y: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByUPost_Mover := m#moverPath(_readByUPost);                                                   
 _readByUPost_Path := p#moverPath(_readByUPost);                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_readByUPost_Mover, _E)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (13.2): Example2.flag is not Write-Read Stable with respect to Example.flag (case J)
 assert (leq(_writeByT_Mover, _N) && leq(_readByUPost_Mover, _L)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (13.2): Example2.flag is not Write-Read Stable with respect to Example.flag (case K)
 assert (leq(_writeByT_Mover, _N) && !leq(_readByUPost_Mover, _L)) ==> (!leq(_readByU_Mover, _L));         // (13.2): Example2.flag is not Write-Read Stable with respect to Example.flag (case L)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.A.Example.flag.Example2.y(t: Tid, u: Tid, v: bool, w: int, w0: int, x: Example, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example.flag;                                                                             
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example2.y(u: Tid,y: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example.flag[x] := v;                                                                              
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _writeByUPost := WriteEval.Example2.y(u: Tid,y: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _E)) ==> ((_writeByU_Mover == _writeByUPost_Mover || _writeByU_Mover == _E));       // (14.2): Example2.y is not Write-Write Stable with respect to Example.flag (case A.1)
 assert (leq(_writeByT_Mover, _N) && !leq(_writeByUPost_Mover, _L)) ==> (!leq(_writeByU_Mover, _L));       // (14.2): Example2.y is not Write-Write Stable with respect to Example.flag (case A.2)
 assert (true && leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByUPost_Mover == _writeByUPost_Mover || _writeByUPost_Mover == _E));       // (14.2): Example2.y is not Write-Write Stable with respect to Example.flag (case A.3)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 procedure Stable.Check.C.Example.flag.Example2.y(t: Tid, u: Tid, v: bool, w: int, w0: int, x: Example, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example.flag;                                                                             
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var tmpV : bool;                                                                                   
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var x_mid: Example;                                                                                
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var w_mid: int;                                                                                    
 var Example.y_mid: [Example]int;                                                                   
 var v_mid: bool;                                                                                   
 var Example._state_mid: [Example]State;                                                            
 var y_mid: Example2;                                                                               
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
 var w0_mid: int;                                                                                   
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 _writeByT := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 tmpV := Example.flag[x];                                                                           
 Example.flag[x] := v;                                                                              
                                                                                                    
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
 _writeByU := WriteEval.Example2.y(u: Tid,y: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 Example.flag[x] := tmpV;                                                                           
 Example2.y[y] := w;                                                                                
 _writeByTPost := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (5.2): Example.flag is not Write-Write Stable with respect to Example2.y (case C)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.DE.Example.flag.Example2.y(t: Tid, u: Tid, v: bool, w: int, w0: int, x: Example, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example.flag;                                                                             
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var tmpV : bool;                                                                                   
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var x_mid: Example;                                                                                
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var w_mid: int;                                                                                    
 var Example.y_mid: [Example]int;                                                                   
 var v_mid: bool;                                                                                   
 var Example._state_mid: [Example]State;                                                            
 var y_mid: Example2;                                                                               
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
 var w0_mid: int;                                                                                   
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example2.y(u: Tid,y: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 tmpV := Example.flag[x];                                                                           
 Example.flag[x] := v;                                                                              
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
                                                                                                    
 _writeByUPost := WriteEval.Example2.y(u: Tid,y: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
 Example.flag[x] := tmpV;                                                                           
 Example2.y[y] := w;                                                                                
 _writeByTPost := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
                                                                                                    
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _N)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (5.2): Example.flag is not Write-Write Stable with respect to Example2.y (case D)
 assert (leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (5.2): Example.flag is not Write-Write Stable with respect to Example2.y (case R)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.FHI.Example.flag.Example2.y(t: Tid, u: Tid, v: bool, w: int, w0: int, x: Example, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example.flag;                                                                             
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _readByT : MoverPath;                                                                          
 var _readByT_Mover : Mover;                                                                        
 var _readByT_Path : int;                                                                           
 var _readByTPost : MoverPath;                                                                      
 var _readByTPost_Mover : Mover;                                                                    
 var _readByTPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _readByT := ReadEval.Example.flag(t: Tid,x: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByT_Mover := m#moverPath(_readByT);                                                           
 _readByT_Path := p#moverPath(_readByT);                                                            
 _writeByU := WriteEval.Example2.y(u: Tid,y: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example2.y[y] := w;                                                                                
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByTPost := ReadEval.Example.flag(t: Tid,x: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByTPost_Mover := m#moverPath(_readByTPost);                                                   
 _readByTPost_Path := p#moverPath(_readByTPost);                                                    
                                                                                                    
 assert (leq(_readByT_Mover, _R) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (5.2): Example.flag is not Read-Write Stable with respect to Example2.y (case F)
 assert (leq(_readByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (5.2): Example.flag is not Read-Write Stable with respect to Example2.y (case H)
 assert (true && leq(_readByT_Mover, _N) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (5.2): Example.flag is not Read-Write Stable with respect to Example2.y (case I)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.JKL.Example.flag.Example2.y(t: Tid, u: Tid, v: bool, w: int, w0: int, x: Example, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example.flag;                                                                             
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _readByU : MoverPath;                                                                          
 var _readByU_Mover : Mover;                                                                        
 var _readByU_Path : int;                                                                           
 var _readByUPost : MoverPath;                                                                      
 var _readByUPost_Mover : Mover;                                                                    
 var _readByUPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _readByU := ReadEval.Example2.y(u: Tid,y: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByU_Mover := m#moverPath(_readByU);                                                           
 _readByU_Path := p#moverPath(_readByU);                                                            
 _writeByT := WriteEval.Example.flag(t: Tid,x: Example,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example.flag[x] := v;                                                                              
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByUPost := ReadEval.Example2.y(u: Tid,y: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByUPost_Mover := m#moverPath(_readByUPost);                                                   
 _readByUPost_Path := p#moverPath(_readByUPost);                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_readByUPost_Mover, _E)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (14.2): Example2.y is not Write-Read Stable with respect to Example.flag (case J)
 assert (leq(_writeByT_Mover, _N) && leq(_readByUPost_Mover, _L)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (14.2): Example2.y is not Write-Read Stable with respect to Example.flag (case K)
 assert (leq(_writeByT_Mover, _N) && !leq(_readByUPost_Mover, _L)) ==> (!leq(_readByU_Mover, _L));         // (14.2): Example2.y is not Write-Read Stable with respect to Example.flag (case L)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.A.Example.y.Example.flag(t: Tid, u: Tid, v: int, w: bool, w0: bool, x: Example, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example.y;                                                                                
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example.flag(u: Tid,y: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example.y[x] := v;                                                                                 
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _writeByUPost := WriteEval.Example.flag(u: Tid,y: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _E)) ==> ((_writeByU_Mover == _writeByUPost_Mover || _writeByU_Mover == _E));       // (5.2): Example.flag is not Write-Write Stable with respect to Example.y (case A.1)
 assert (leq(_writeByT_Mover, _N) && !leq(_writeByUPost_Mover, _L)) ==> (!leq(_writeByU_Mover, _L));       // (5.2): Example.flag is not Write-Write Stable with respect to Example.y (case A.2)
 assert (x != y && leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByUPost_Mover == _writeByUPost_Mover || _writeByUPost_Mover == _E));       // (5.2): Example.flag is not Write-Write Stable with respect to Example.y (case A.3)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 procedure Stable.Check.C.Example.y.Example.flag(t: Tid, u: Tid, v: int, w: bool, w0: bool, x: Example, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example.y;                                                                                
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var tmpV : int;                                                                                    
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var x_mid: Example;                                                                                
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var Example.y_mid: [Example]int;                                                                   
 var w0_mid: bool;                                                                                  
 var y_mid: Example;                                                                                
 var Example._state_mid: [Example]State;                                                            
 var v_mid: int;                                                                                    
 var w_mid: bool;                                                                                   
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 _writeByT := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 tmpV := Example.y[x];                                                                              
 Example.y[x] := v;                                                                                 
                                                                                                    
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
 _writeByU := WriteEval.Example.flag(u: Tid,y: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 Example.y[x] := tmpV;                                                                              
 Example.flag[y] := w;                                                                              
 _writeByTPost := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (6.2): Example.y is not Write-Write Stable with respect to Example.flag (case C)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.DE.Example.y.Example.flag(t: Tid, u: Tid, v: int, w: bool, w0: bool, x: Example, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example.y;                                                                                
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var tmpV : int;                                                                                    
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var x_mid: Example;                                                                                
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var Example.y_mid: [Example]int;                                                                   
 var w0_mid: bool;                                                                                  
 var y_mid: Example;                                                                                
 var Example._state_mid: [Example]State;                                                            
 var v_mid: int;                                                                                    
 var w_mid: bool;                                                                                   
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example.flag(u: Tid,y: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 tmpV := Example.y[x];                                                                              
 Example.y[x] := v;                                                                                 
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
                                                                                                    
 _writeByUPost := WriteEval.Example.flag(u: Tid,y: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
 Example.y[x] := tmpV;                                                                              
 Example.flag[y] := w;                                                                              
 _writeByTPost := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
                                                                                                    
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _N)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (6.2): Example.y is not Write-Write Stable with respect to Example.flag (case D)
 assert (leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (6.2): Example.y is not Write-Write Stable with respect to Example.flag (case R)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.FHI.Example.y.Example.flag(t: Tid, u: Tid, v: int, w: bool, w0: bool, x: Example, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example.y;                                                                                
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _readByT : MoverPath;                                                                          
 var _readByT_Mover : Mover;                                                                        
 var _readByT_Path : int;                                                                           
 var _readByTPost : MoverPath;                                                                      
 var _readByTPost_Mover : Mover;                                                                    
 var _readByTPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _readByT := ReadEval.Example.y(t: Tid,x: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByT_Mover := m#moverPath(_readByT);                                                           
 _readByT_Path := p#moverPath(_readByT);                                                            
 _writeByU := WriteEval.Example.flag(u: Tid,y: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example.flag[y] := w;                                                                              
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByTPost := ReadEval.Example.y(t: Tid,x: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByTPost_Mover := m#moverPath(_readByTPost);                                                   
 _readByTPost_Path := p#moverPath(_readByTPost);                                                    
                                                                                                    
 assert (leq(_readByT_Mover, _R) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (6.2): Example.y is not Read-Write Stable with respect to Example.flag (case F)
 assert (leq(_readByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (6.2): Example.y is not Read-Write Stable with respect to Example.flag (case H)
 assert (x != y && leq(_readByT_Mover, _N) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (6.2): Example.y is not Read-Write Stable with respect to Example.flag (case I)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.JKL.Example.y.Example.flag(t: Tid, u: Tid, v: int, w: bool, w0: bool, x: Example, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example.y;                                                                                
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _readByU : MoverPath;                                                                          
 var _readByU_Mover : Mover;                                                                        
 var _readByU_Path : int;                                                                           
 var _readByUPost : MoverPath;                                                                      
 var _readByUPost_Mover : Mover;                                                                    
 var _readByUPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _readByU := ReadEval.Example.flag(u: Tid,y: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByU_Mover := m#moverPath(_readByU);                                                           
 _readByU_Path := p#moverPath(_readByU);                                                            
 _writeByT := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example.y[x] := v;                                                                                 
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByUPost := ReadEval.Example.flag(u: Tid,y: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByUPost_Mover := m#moverPath(_readByUPost);                                                   
 _readByUPost_Path := p#moverPath(_readByUPost);                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_readByUPost_Mover, _E)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (5.2): Example.flag is not Write-Read Stable with respect to Example.y (case J)
 assert (leq(_writeByT_Mover, _N) && leq(_readByUPost_Mover, _L)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (5.2): Example.flag is not Write-Read Stable with respect to Example.y (case K)
 assert (leq(_writeByT_Mover, _N) && !leq(_readByUPost_Mover, _L)) ==> (!leq(_readByU_Mover, _L));         // (5.2): Example.flag is not Write-Read Stable with respect to Example.y (case L)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.A.Example.y.Example.y(t: Tid, u: Tid, v: int, w: int, w0: int, x: Example, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example.y;                                                                                
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example.y(u: Tid,y: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example.y[x] := v;                                                                                 
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _writeByUPost := WriteEval.Example.y(u: Tid,y: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _E)) ==> ((_writeByU_Mover == _writeByUPost_Mover || _writeByU_Mover == _E));       // (6.2): Example.y is not Write-Write Stable with respect to Example.y (case A.1)
 assert (leq(_writeByT_Mover, _N) && !leq(_writeByUPost_Mover, _L)) ==> (!leq(_writeByU_Mover, _L));       // (6.2): Example.y is not Write-Write Stable with respect to Example.y (case A.2)
 assert (x != y && leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByUPost_Mover == _writeByUPost_Mover || _writeByUPost_Mover == _E));       // (6.2): Example.y is not Write-Write Stable with respect to Example.y (case A.3)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 procedure Stable.Check.C.Example.y.Example.y(t: Tid, u: Tid, v: int, w: int, w0: int, x: Example, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example.y;                                                                                
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var tmpV : int;                                                                                    
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var x_mid: Example;                                                                                
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var w_mid: int;                                                                                    
 var Example.y_mid: [Example]int;                                                                   
 var y_mid: Example;                                                                                
 var Example._state_mid: [Example]State;                                                            
 var v_mid: int;                                                                                    
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
 var w0_mid: int;                                                                                   
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 _writeByT := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 tmpV := Example.y[x];                                                                              
 Example.y[x] := v;                                                                                 
                                                                                                    
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
 _writeByU := WriteEval.Example.y(u: Tid,y: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 Example.y[x] := tmpV;                                                                              
 Example.y[y] := w;                                                                                 
 _writeByTPost := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (6.2): Example.y is not Write-Write Stable with respect to Example.y (case C)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.DE.Example.y.Example.y(t: Tid, u: Tid, v: int, w: int, w0: int, x: Example, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example.y;                                                                                
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var tmpV : int;                                                                                    
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var x_mid: Example;                                                                                
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var w_mid: int;                                                                                    
 var Example.y_mid: [Example]int;                                                                   
 var y_mid: Example;                                                                                
 var Example._state_mid: [Example]State;                                                            
 var v_mid: int;                                                                                    
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
 var w0_mid: int;                                                                                   
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example.y(u: Tid,y: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 tmpV := Example.y[x];                                                                              
 Example.y[x] := v;                                                                                 
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
                                                                                                    
 _writeByUPost := WriteEval.Example.y(u: Tid,y: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
 Example.y[x] := tmpV;                                                                              
 Example.y[y] := w;                                                                                 
 _writeByTPost := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
                                                                                                    
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _N)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (6.2): Example.y is not Write-Write Stable with respect to Example.y (case D)
 assert (leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (6.2): Example.y is not Write-Write Stable with respect to Example.y (case R)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.FHI.Example.y.Example.y(t: Tid, u: Tid, v: int, w: int, w0: int, x: Example, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example.y;                                                                                
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _readByT : MoverPath;                                                                          
 var _readByT_Mover : Mover;                                                                        
 var _readByT_Path : int;                                                                           
 var _readByTPost : MoverPath;                                                                      
 var _readByTPost_Mover : Mover;                                                                    
 var _readByTPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _readByT := ReadEval.Example.y(t: Tid,x: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByT_Mover := m#moverPath(_readByT);                                                           
 _readByT_Path := p#moverPath(_readByT);                                                            
 _writeByU := WriteEval.Example.y(u: Tid,y: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example.y[y] := w;                                                                                 
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByTPost := ReadEval.Example.y(t: Tid,x: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByTPost_Mover := m#moverPath(_readByTPost);                                                   
 _readByTPost_Path := p#moverPath(_readByTPost);                                                    
                                                                                                    
 assert (leq(_readByT_Mover, _R) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (6.2): Example.y is not Read-Write Stable with respect to Example.y (case F)
 assert (leq(_readByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (6.2): Example.y is not Read-Write Stable with respect to Example.y (case H)
 assert (x != y && leq(_readByT_Mover, _N) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (6.2): Example.y is not Read-Write Stable with respect to Example.y (case I)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.JKL.Example.y.Example.y(t: Tid, u: Tid, v: int, w: int, w0: int, x: Example, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example.y;                                                                                
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _readByU : MoverPath;                                                                          
 var _readByU_Mover : Mover;                                                                        
 var _readByU_Path : int;                                                                           
 var _readByUPost : MoverPath;                                                                      
 var _readByUPost_Mover : Mover;                                                                    
 var _readByUPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _readByU := ReadEval.Example.y(u: Tid,y: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByU_Mover := m#moverPath(_readByU);                                                           
 _readByU_Path := p#moverPath(_readByU);                                                            
 _writeByT := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example.y[x] := v;                                                                                 
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByUPost := ReadEval.Example.y(u: Tid,y: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByUPost_Mover := m#moverPath(_readByUPost);                                                   
 _readByUPost_Path := p#moverPath(_readByUPost);                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_readByUPost_Mover, _E)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (6.2): Example.y is not Write-Read Stable with respect to Example.y (case J)
 assert (leq(_writeByT_Mover, _N) && leq(_readByUPost_Mover, _L)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (6.2): Example.y is not Write-Read Stable with respect to Example.y (case K)
 assert (leq(_writeByT_Mover, _N) && !leq(_readByUPost_Mover, _L)) ==> (!leq(_readByU_Mover, _L));         // (6.2): Example.y is not Write-Read Stable with respect to Example.y (case L)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.A.Example.y.Example2.flag(t: Tid, u: Tid, v: int, w: bool, w0: bool, x: Example, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example.y;                                                                                
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example2.flag(u: Tid,y: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example.y[x] := v;                                                                                 
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _writeByUPost := WriteEval.Example2.flag(u: Tid,y: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _E)) ==> ((_writeByU_Mover == _writeByUPost_Mover || _writeByU_Mover == _E));       // (13.2): Example2.flag is not Write-Write Stable with respect to Example.y (case A.1)
 assert (leq(_writeByT_Mover, _N) && !leq(_writeByUPost_Mover, _L)) ==> (!leq(_writeByU_Mover, _L));       // (13.2): Example2.flag is not Write-Write Stable with respect to Example.y (case A.2)
 assert (true && leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByUPost_Mover == _writeByUPost_Mover || _writeByUPost_Mover == _E));       // (13.2): Example2.flag is not Write-Write Stable with respect to Example.y (case A.3)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 procedure Stable.Check.C.Example.y.Example2.flag(t: Tid, u: Tid, v: int, w: bool, w0: bool, x: Example, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example.y;                                                                                
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var tmpV : int;                                                                                    
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var x_mid: Example;                                                                                
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var Example.y_mid: [Example]int;                                                                   
 var w0_mid: bool;                                                                                  
 var Example._state_mid: [Example]State;                                                            
 var y_mid: Example2;                                                                               
 var v_mid: int;                                                                                    
 var w_mid: bool;                                                                                   
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 _writeByT := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 tmpV := Example.y[x];                                                                              
 Example.y[x] := v;                                                                                 
                                                                                                    
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
 _writeByU := WriteEval.Example2.flag(u: Tid,y: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 Example.y[x] := tmpV;                                                                              
 Example2.flag[y] := w;                                                                             
 _writeByTPost := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (6.2): Example.y is not Write-Write Stable with respect to Example2.flag (case C)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.DE.Example.y.Example2.flag(t: Tid, u: Tid, v: int, w: bool, w0: bool, x: Example, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example.y;                                                                                
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var tmpV : int;                                                                                    
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var x_mid: Example;                                                                                
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var Example.y_mid: [Example]int;                                                                   
 var w0_mid: bool;                                                                                  
 var Example._state_mid: [Example]State;                                                            
 var y_mid: Example2;                                                                               
 var v_mid: int;                                                                                    
 var w_mid: bool;                                                                                   
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example2.flag(u: Tid,y: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 tmpV := Example.y[x];                                                                              
 Example.y[x] := v;                                                                                 
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
                                                                                                    
 _writeByUPost := WriteEval.Example2.flag(u: Tid,y: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
 Example.y[x] := tmpV;                                                                              
 Example2.flag[y] := w;                                                                             
 _writeByTPost := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
                                                                                                    
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _N)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (6.2): Example.y is not Write-Write Stable with respect to Example2.flag (case D)
 assert (leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (6.2): Example.y is not Write-Write Stable with respect to Example2.flag (case R)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.FHI.Example.y.Example2.flag(t: Tid, u: Tid, v: int, w: bool, w0: bool, x: Example, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example.y;                                                                                
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _readByT : MoverPath;                                                                          
 var _readByT_Mover : Mover;                                                                        
 var _readByT_Path : int;                                                                           
 var _readByTPost : MoverPath;                                                                      
 var _readByTPost_Mover : Mover;                                                                    
 var _readByTPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _readByT := ReadEval.Example.y(t: Tid,x: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByT_Mover := m#moverPath(_readByT);                                                           
 _readByT_Path := p#moverPath(_readByT);                                                            
 _writeByU := WriteEval.Example2.flag(u: Tid,y: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example2.flag[y] := w;                                                                             
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByTPost := ReadEval.Example.y(t: Tid,x: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByTPost_Mover := m#moverPath(_readByTPost);                                                   
 _readByTPost_Path := p#moverPath(_readByTPost);                                                    
                                                                                                    
 assert (leq(_readByT_Mover, _R) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (6.2): Example.y is not Read-Write Stable with respect to Example2.flag (case F)
 assert (leq(_readByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (6.2): Example.y is not Read-Write Stable with respect to Example2.flag (case H)
 assert (true && leq(_readByT_Mover, _N) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (6.2): Example.y is not Read-Write Stable with respect to Example2.flag (case I)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.JKL.Example.y.Example2.flag(t: Tid, u: Tid, v: int, w: bool, w0: bool, x: Example, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example.y;                                                                                
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _readByU : MoverPath;                                                                          
 var _readByU_Mover : Mover;                                                                        
 var _readByU_Path : int;                                                                           
 var _readByUPost : MoverPath;                                                                      
 var _readByUPost_Mover : Mover;                                                                    
 var _readByUPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _readByU := ReadEval.Example2.flag(u: Tid,y: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByU_Mover := m#moverPath(_readByU);                                                           
 _readByU_Path := p#moverPath(_readByU);                                                            
 _writeByT := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example.y[x] := v;                                                                                 
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByUPost := ReadEval.Example2.flag(u: Tid,y: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByUPost_Mover := m#moverPath(_readByUPost);                                                   
 _readByUPost_Path := p#moverPath(_readByUPost);                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_readByUPost_Mover, _E)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (13.2): Example2.flag is not Write-Read Stable with respect to Example.y (case J)
 assert (leq(_writeByT_Mover, _N) && leq(_readByUPost_Mover, _L)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (13.2): Example2.flag is not Write-Read Stable with respect to Example.y (case K)
 assert (leq(_writeByT_Mover, _N) && !leq(_readByUPost_Mover, _L)) ==> (!leq(_readByU_Mover, _L));         // (13.2): Example2.flag is not Write-Read Stable with respect to Example.y (case L)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.A.Example.y.Example2.y(t: Tid, u: Tid, v: int, w: int, w0: int, x: Example, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example.y;                                                                                
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example2.y(u: Tid,y: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example.y[x] := v;                                                                                 
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _writeByUPost := WriteEval.Example2.y(u: Tid,y: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _E)) ==> ((_writeByU_Mover == _writeByUPost_Mover || _writeByU_Mover == _E));       // (14.2): Example2.y is not Write-Write Stable with respect to Example.y (case A.1)
 assert (leq(_writeByT_Mover, _N) && !leq(_writeByUPost_Mover, _L)) ==> (!leq(_writeByU_Mover, _L));       // (14.2): Example2.y is not Write-Write Stable with respect to Example.y (case A.2)
 assert (true && leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByUPost_Mover == _writeByUPost_Mover || _writeByUPost_Mover == _E));       // (14.2): Example2.y is not Write-Write Stable with respect to Example.y (case A.3)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 procedure Stable.Check.C.Example.y.Example2.y(t: Tid, u: Tid, v: int, w: int, w0: int, x: Example, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example.y;                                                                                
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var tmpV : int;                                                                                    
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var x_mid: Example;                                                                                
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var w_mid: int;                                                                                    
 var Example.y_mid: [Example]int;                                                                   
 var Example._state_mid: [Example]State;                                                            
 var y_mid: Example2;                                                                               
 var v_mid: int;                                                                                    
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
 var w0_mid: int;                                                                                   
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 _writeByT := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 tmpV := Example.y[x];                                                                              
 Example.y[x] := v;                                                                                 
                                                                                                    
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
 _writeByU := WriteEval.Example2.y(u: Tid,y: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 Example.y[x] := tmpV;                                                                              
 Example2.y[y] := w;                                                                                
 _writeByTPost := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (6.2): Example.y is not Write-Write Stable with respect to Example2.y (case C)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.DE.Example.y.Example2.y(t: Tid, u: Tid, v: int, w: int, w0: int, x: Example, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example.y;                                                                                
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var tmpV : int;                                                                                    
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var x_mid: Example;                                                                                
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var w_mid: int;                                                                                    
 var Example.y_mid: [Example]int;                                                                   
 var Example._state_mid: [Example]State;                                                            
 var y_mid: Example2;                                                                               
 var v_mid: int;                                                                                    
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
 var w0_mid: int;                                                                                   
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example2.y(u: Tid,y: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 tmpV := Example.y[x];                                                                              
 Example.y[x] := v;                                                                                 
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
                                                                                                    
 _writeByUPost := WriteEval.Example2.y(u: Tid,y: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
 Example.y[x] := tmpV;                                                                              
 Example2.y[y] := w;                                                                                
 _writeByTPost := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
                                                                                                    
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _N)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (6.2): Example.y is not Write-Write Stable with respect to Example2.y (case D)
 assert (leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (6.2): Example.y is not Write-Write Stable with respect to Example2.y (case R)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.FHI.Example.y.Example2.y(t: Tid, u: Tid, v: int, w: int, w0: int, x: Example, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example.y;                                                                                
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _readByT : MoverPath;                                                                          
 var _readByT_Mover : Mover;                                                                        
 var _readByT_Path : int;                                                                           
 var _readByTPost : MoverPath;                                                                      
 var _readByTPost_Mover : Mover;                                                                    
 var _readByTPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _readByT := ReadEval.Example.y(t: Tid,x: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByT_Mover := m#moverPath(_readByT);                                                           
 _readByT_Path := p#moverPath(_readByT);                                                            
 _writeByU := WriteEval.Example2.y(u: Tid,y: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example2.y[y] := w;                                                                                
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByTPost := ReadEval.Example.y(t: Tid,x: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByTPost_Mover := m#moverPath(_readByTPost);                                                   
 _readByTPost_Path := p#moverPath(_readByTPost);                                                    
                                                                                                    
 assert (leq(_readByT_Mover, _R) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (6.2): Example.y is not Read-Write Stable with respect to Example2.y (case F)
 assert (leq(_readByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (6.2): Example.y is not Read-Write Stable with respect to Example2.y (case H)
 assert (true && leq(_readByT_Mover, _N) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (6.2): Example.y is not Read-Write Stable with respect to Example2.y (case I)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.JKL.Example.y.Example2.y(t: Tid, u: Tid, v: int, w: int, w0: int, x: Example, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example._state[x], t);                                                       
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example.y;                                                                                
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _readByU : MoverPath;                                                                          
 var _readByU_Mover : Mover;                                                                        
 var _readByU_Path : int;                                                                           
 var _readByUPost : MoverPath;                                                                      
 var _readByUPost_Mover : Mover;                                                                    
 var _readByUPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var x_pre: Example;                                                                                
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var x_post: Example;                                                                               
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _readByU := ReadEval.Example2.y(u: Tid,y: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByU_Mover := m#moverPath(_readByU);                                                           
 _readByU_Path := p#moverPath(_readByU);                                                            
 _writeByT := WriteEval.Example.y(t: Tid,x: Example,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example.y[x] := v;                                                                                 
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByUPost := ReadEval.Example2.y(u: Tid,y: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByUPost_Mover := m#moverPath(_readByUPost);                                                   
 _readByUPost_Path := p#moverPath(_readByUPost);                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_readByUPost_Mover, _E)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (14.2): Example2.y is not Write-Read Stable with respect to Example.y (case J)
 assert (leq(_writeByT_Mover, _N) && leq(_readByUPost_Mover, _L)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (14.2): Example2.y is not Write-Read Stable with respect to Example.y (case K)
 assert (leq(_writeByT_Mover, _N) && !leq(_readByUPost_Mover, _L)) ==> (!leq(_readByU_Mover, _L));         // (14.2): Example2.y is not Write-Read Stable with respect to Example.y (case L)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.A.Example2.flag.Example.flag(t: Tid, u: Tid, v: bool, w: bool, w0: bool, x: Example2, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example2.flag;                                                                            
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example.flag(u: Tid,y: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example2.flag[x] := v;                                                                             
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _writeByUPost := WriteEval.Example.flag(u: Tid,y: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _E)) ==> ((_writeByU_Mover == _writeByUPost_Mover || _writeByU_Mover == _E));       // (5.2): Example.flag is not Write-Write Stable with respect to Example2.flag (case A.1)
 assert (leq(_writeByT_Mover, _N) && !leq(_writeByUPost_Mover, _L)) ==> (!leq(_writeByU_Mover, _L));       // (5.2): Example.flag is not Write-Write Stable with respect to Example2.flag (case A.2)
 assert (true && leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByUPost_Mover == _writeByUPost_Mover || _writeByUPost_Mover == _E));       // (5.2): Example.flag is not Write-Write Stable with respect to Example2.flag (case A.3)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 procedure Stable.Check.C.Example2.flag.Example.flag(t: Tid, u: Tid, v: bool, w: bool, w0: bool, x: Example2, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example2.flag;                                                                            
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var tmpV : bool;                                                                                   
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var x_mid: Example2;                                                                               
 var Example.y_mid: [Example]int;                                                                   
 var w0_mid: bool;                                                                                  
 var y_mid: Example;                                                                                
 var v_mid: bool;                                                                                   
 var Example._state_mid: [Example]State;                                                            
 var w_mid: bool;                                                                                   
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 _writeByT := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 tmpV := Example2.flag[x];                                                                          
 Example2.flag[x] := v;                                                                             
                                                                                                    
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
 _writeByU := WriteEval.Example.flag(u: Tid,y: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 Example2.flag[x] := tmpV;                                                                          
 Example.flag[y] := w;                                                                              
 _writeByTPost := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (13.2): Example2.flag is not Write-Write Stable with respect to Example.flag (case C)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.DE.Example2.flag.Example.flag(t: Tid, u: Tid, v: bool, w: bool, w0: bool, x: Example2, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example2.flag;                                                                            
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var tmpV : bool;                                                                                   
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var x_mid: Example2;                                                                               
 var Example.y_mid: [Example]int;                                                                   
 var w0_mid: bool;                                                                                  
 var y_mid: Example;                                                                                
 var v_mid: bool;                                                                                   
 var Example._state_mid: [Example]State;                                                            
 var w_mid: bool;                                                                                   
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example.flag(u: Tid,y: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 tmpV := Example2.flag[x];                                                                          
 Example2.flag[x] := v;                                                                             
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
                                                                                                    
 _writeByUPost := WriteEval.Example.flag(u: Tid,y: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
 Example2.flag[x] := tmpV;                                                                          
 Example.flag[y] := w;                                                                              
 _writeByTPost := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
                                                                                                    
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _N)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (13.2): Example2.flag is not Write-Write Stable with respect to Example.flag (case D)
 assert (leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (13.2): Example2.flag is not Write-Write Stable with respect to Example.flag (case R)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.FHI.Example2.flag.Example.flag(t: Tid, u: Tid, v: bool, w: bool, w0: bool, x: Example2, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example2.flag;                                                                            
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _readByT : MoverPath;                                                                          
 var _readByT_Mover : Mover;                                                                        
 var _readByT_Path : int;                                                                           
 var _readByTPost : MoverPath;                                                                      
 var _readByTPost_Mover : Mover;                                                                    
 var _readByTPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _readByT := ReadEval.Example2.flag(t: Tid,x: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByT_Mover := m#moverPath(_readByT);                                                           
 _readByT_Path := p#moverPath(_readByT);                                                            
 _writeByU := WriteEval.Example.flag(u: Tid,y: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example.flag[y] := w;                                                                              
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByTPost := ReadEval.Example2.flag(t: Tid,x: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByTPost_Mover := m#moverPath(_readByTPost);                                                   
 _readByTPost_Path := p#moverPath(_readByTPost);                                                    
                                                                                                    
 assert (leq(_readByT_Mover, _R) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (13.2): Example2.flag is not Read-Write Stable with respect to Example.flag (case F)
 assert (leq(_readByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (13.2): Example2.flag is not Read-Write Stable with respect to Example.flag (case H)
 assert (true && leq(_readByT_Mover, _N) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (13.2): Example2.flag is not Read-Write Stable with respect to Example.flag (case I)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.JKL.Example2.flag.Example.flag(t: Tid, u: Tid, v: bool, w: bool, w0: bool, x: Example2, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example2.flag;                                                                            
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _readByU : MoverPath;                                                                          
 var _readByU_Mover : Mover;                                                                        
 var _readByU_Path : int;                                                                           
 var _readByUPost : MoverPath;                                                                      
 var _readByUPost_Mover : Mover;                                                                    
 var _readByUPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _readByU := ReadEval.Example.flag(u: Tid,y: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByU_Mover := m#moverPath(_readByU);                                                           
 _readByU_Path := p#moverPath(_readByU);                                                            
 _writeByT := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example2.flag[x] := v;                                                                             
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByUPost := ReadEval.Example.flag(u: Tid,y: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByUPost_Mover := m#moverPath(_readByUPost);                                                   
 _readByUPost_Path := p#moverPath(_readByUPost);                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_readByUPost_Mover, _E)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (5.2): Example.flag is not Write-Read Stable with respect to Example2.flag (case J)
 assert (leq(_writeByT_Mover, _N) && leq(_readByUPost_Mover, _L)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (5.2): Example.flag is not Write-Read Stable with respect to Example2.flag (case K)
 assert (leq(_writeByT_Mover, _N) && !leq(_readByUPost_Mover, _L)) ==> (!leq(_readByU_Mover, _L));         // (5.2): Example.flag is not Write-Read Stable with respect to Example2.flag (case L)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.A.Example2.flag.Example.y(t: Tid, u: Tid, v: bool, w: int, w0: int, x: Example2, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example2.flag;                                                                            
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example.y(u: Tid,y: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example2.flag[x] := v;                                                                             
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _writeByUPost := WriteEval.Example.y(u: Tid,y: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _E)) ==> ((_writeByU_Mover == _writeByUPost_Mover || _writeByU_Mover == _E));       // (6.2): Example.y is not Write-Write Stable with respect to Example2.flag (case A.1)
 assert (leq(_writeByT_Mover, _N) && !leq(_writeByUPost_Mover, _L)) ==> (!leq(_writeByU_Mover, _L));       // (6.2): Example.y is not Write-Write Stable with respect to Example2.flag (case A.2)
 assert (true && leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByUPost_Mover == _writeByUPost_Mover || _writeByUPost_Mover == _E));       // (6.2): Example.y is not Write-Write Stable with respect to Example2.flag (case A.3)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 procedure Stable.Check.C.Example2.flag.Example.y(t: Tid, u: Tid, v: bool, w: int, w0: int, x: Example2, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example2.flag;                                                                            
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var tmpV : bool;                                                                                   
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var w_mid: int;                                                                                    
 var x_mid: Example2;                                                                               
 var Example.y_mid: [Example]int;                                                                   
 var y_mid: Example;                                                                                
 var v_mid: bool;                                                                                   
 var Example._state_mid: [Example]State;                                                            
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
 var w0_mid: int;                                                                                   
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 _writeByT := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 tmpV := Example2.flag[x];                                                                          
 Example2.flag[x] := v;                                                                             
                                                                                                    
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
 _writeByU := WriteEval.Example.y(u: Tid,y: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 Example2.flag[x] := tmpV;                                                                          
 Example.y[y] := w;                                                                                 
 _writeByTPost := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (13.2): Example2.flag is not Write-Write Stable with respect to Example.y (case C)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.DE.Example2.flag.Example.y(t: Tid, u: Tid, v: bool, w: int, w0: int, x: Example2, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example2.flag;                                                                            
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var tmpV : bool;                                                                                   
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var w_mid: int;                                                                                    
 var x_mid: Example2;                                                                               
 var Example.y_mid: [Example]int;                                                                   
 var y_mid: Example;                                                                                
 var v_mid: bool;                                                                                   
 var Example._state_mid: [Example]State;                                                            
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
 var w0_mid: int;                                                                                   
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example.y(u: Tid,y: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 tmpV := Example2.flag[x];                                                                          
 Example2.flag[x] := v;                                                                             
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
                                                                                                    
 _writeByUPost := WriteEval.Example.y(u: Tid,y: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
 Example2.flag[x] := tmpV;                                                                          
 Example.y[y] := w;                                                                                 
 _writeByTPost := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
                                                                                                    
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _N)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (13.2): Example2.flag is not Write-Write Stable with respect to Example.y (case D)
 assert (leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (13.2): Example2.flag is not Write-Write Stable with respect to Example.y (case R)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.FHI.Example2.flag.Example.y(t: Tid, u: Tid, v: bool, w: int, w0: int, x: Example2, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example2.flag;                                                                            
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _readByT : MoverPath;                                                                          
 var _readByT_Mover : Mover;                                                                        
 var _readByT_Path : int;                                                                           
 var _readByTPost : MoverPath;                                                                      
 var _readByTPost_Mover : Mover;                                                                    
 var _readByTPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _readByT := ReadEval.Example2.flag(t: Tid,x: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByT_Mover := m#moverPath(_readByT);                                                           
 _readByT_Path := p#moverPath(_readByT);                                                            
 _writeByU := WriteEval.Example.y(u: Tid,y: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example.y[y] := w;                                                                                 
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByTPost := ReadEval.Example2.flag(t: Tid,x: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByTPost_Mover := m#moverPath(_readByTPost);                                                   
 _readByTPost_Path := p#moverPath(_readByTPost);                                                    
                                                                                                    
 assert (leq(_readByT_Mover, _R) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (13.2): Example2.flag is not Read-Write Stable with respect to Example.y (case F)
 assert (leq(_readByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (13.2): Example2.flag is not Read-Write Stable with respect to Example.y (case H)
 assert (true && leq(_readByT_Mover, _N) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (13.2): Example2.flag is not Read-Write Stable with respect to Example.y (case I)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.JKL.Example2.flag.Example.y(t: Tid, u: Tid, v: bool, w: int, w0: int, x: Example2, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example2.flag;                                                                            
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _readByU : MoverPath;                                                                          
 var _readByU_Mover : Mover;                                                                        
 var _readByU_Path : int;                                                                           
 var _readByUPost : MoverPath;                                                                      
 var _readByUPost_Mover : Mover;                                                                    
 var _readByUPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _readByU := ReadEval.Example.y(u: Tid,y: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByU_Mover := m#moverPath(_readByU);                                                           
 _readByU_Path := p#moverPath(_readByU);                                                            
 _writeByT := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example2.flag[x] := v;                                                                             
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByUPost := ReadEval.Example.y(u: Tid,y: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByUPost_Mover := m#moverPath(_readByUPost);                                                   
 _readByUPost_Path := p#moverPath(_readByUPost);                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_readByUPost_Mover, _E)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (6.2): Example.y is not Write-Read Stable with respect to Example2.flag (case J)
 assert (leq(_writeByT_Mover, _N) && leq(_readByUPost_Mover, _L)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (6.2): Example.y is not Write-Read Stable with respect to Example2.flag (case K)
 assert (leq(_writeByT_Mover, _N) && !leq(_readByUPost_Mover, _L)) ==> (!leq(_readByU_Mover, _L));         // (6.2): Example.y is not Write-Read Stable with respect to Example2.flag (case L)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.A.Example2.flag.Example2.flag(t: Tid, u: Tid, v: bool, w: bool, w0: bool, x: Example2, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example2.flag;                                                                            
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example2.flag(u: Tid,y: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example2.flag[x] := v;                                                                             
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _writeByUPost := WriteEval.Example2.flag(u: Tid,y: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _E)) ==> ((_writeByU_Mover == _writeByUPost_Mover || _writeByU_Mover == _E));       // (13.2): Example2.flag is not Write-Write Stable with respect to Example2.flag (case A.1)
 assert (leq(_writeByT_Mover, _N) && !leq(_writeByUPost_Mover, _L)) ==> (!leq(_writeByU_Mover, _L));       // (13.2): Example2.flag is not Write-Write Stable with respect to Example2.flag (case A.2)
 assert (x != y && leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByUPost_Mover == _writeByUPost_Mover || _writeByUPost_Mover == _E));       // (13.2): Example2.flag is not Write-Write Stable with respect to Example2.flag (case A.3)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 procedure Stable.Check.C.Example2.flag.Example2.flag(t: Tid, u: Tid, v: bool, w: bool, w0: bool, x: Example2, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example2.flag;                                                                            
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var tmpV : bool;                                                                                   
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var x_mid: Example2;                                                                               
 var Example.y_mid: [Example]int;                                                                   
 var w0_mid: bool;                                                                                  
 var v_mid: bool;                                                                                   
 var Example._state_mid: [Example]State;                                                            
 var y_mid: Example2;                                                                               
 var w_mid: bool;                                                                                   
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 _writeByT := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 tmpV := Example2.flag[x];                                                                          
 Example2.flag[x] := v;                                                                             
                                                                                                    
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
 _writeByU := WriteEval.Example2.flag(u: Tid,y: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 Example2.flag[x] := tmpV;                                                                          
 Example2.flag[y] := w;                                                                             
 _writeByTPost := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (13.2): Example2.flag is not Write-Write Stable with respect to Example2.flag (case C)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.DE.Example2.flag.Example2.flag(t: Tid, u: Tid, v: bool, w: bool, w0: bool, x: Example2, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example2.flag;                                                                            
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var tmpV : bool;                                                                                   
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var x_mid: Example2;                                                                               
 var Example.y_mid: [Example]int;                                                                   
 var w0_mid: bool;                                                                                  
 var v_mid: bool;                                                                                   
 var Example._state_mid: [Example]State;                                                            
 var y_mid: Example2;                                                                               
 var w_mid: bool;                                                                                   
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example2.flag(u: Tid,y: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 tmpV := Example2.flag[x];                                                                          
 Example2.flag[x] := v;                                                                             
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
                                                                                                    
 _writeByUPost := WriteEval.Example2.flag(u: Tid,y: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
 Example2.flag[x] := tmpV;                                                                          
 Example2.flag[y] := w;                                                                             
 _writeByTPost := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
                                                                                                    
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _N)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (13.2): Example2.flag is not Write-Write Stable with respect to Example2.flag (case D)
 assert (leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (13.2): Example2.flag is not Write-Write Stable with respect to Example2.flag (case R)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.FHI.Example2.flag.Example2.flag(t: Tid, u: Tid, v: bool, w: bool, w0: bool, x: Example2, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example2.flag;                                                                            
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _readByT : MoverPath;                                                                          
 var _readByT_Mover : Mover;                                                                        
 var _readByT_Path : int;                                                                           
 var _readByTPost : MoverPath;                                                                      
 var _readByTPost_Mover : Mover;                                                                    
 var _readByTPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _readByT := ReadEval.Example2.flag(t: Tid,x: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByT_Mover := m#moverPath(_readByT);                                                           
 _readByT_Path := p#moverPath(_readByT);                                                            
 _writeByU := WriteEval.Example2.flag(u: Tid,y: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example2.flag[y] := w;                                                                             
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByTPost := ReadEval.Example2.flag(t: Tid,x: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByTPost_Mover := m#moverPath(_readByTPost);                                                   
 _readByTPost_Path := p#moverPath(_readByTPost);                                                    
                                                                                                    
 assert (leq(_readByT_Mover, _R) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (13.2): Example2.flag is not Read-Write Stable with respect to Example2.flag (case F)
 assert (leq(_readByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (13.2): Example2.flag is not Read-Write Stable with respect to Example2.flag (case H)
 assert (x != y && leq(_readByT_Mover, _N) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (13.2): Example2.flag is not Read-Write Stable with respect to Example2.flag (case I)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.JKL.Example2.flag.Example2.flag(t: Tid, u: Tid, v: bool, w: bool, w0: bool, x: Example2, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example2.flag;                                                                            
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _readByU : MoverPath;                                                                          
 var _readByU_Mover : Mover;                                                                        
 var _readByU_Path : int;                                                                           
 var _readByUPost : MoverPath;                                                                      
 var _readByUPost_Mover : Mover;                                                                    
 var _readByUPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _readByU := ReadEval.Example2.flag(u: Tid,y: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByU_Mover := m#moverPath(_readByU);                                                           
 _readByU_Path := p#moverPath(_readByU);                                                            
 _writeByT := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example2.flag[x] := v;                                                                             
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByUPost := ReadEval.Example2.flag(u: Tid,y: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByUPost_Mover := m#moverPath(_readByUPost);                                                   
 _readByUPost_Path := p#moverPath(_readByUPost);                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_readByUPost_Mover, _E)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (13.2): Example2.flag is not Write-Read Stable with respect to Example2.flag (case J)
 assert (leq(_writeByT_Mover, _N) && leq(_readByUPost_Mover, _L)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (13.2): Example2.flag is not Write-Read Stable with respect to Example2.flag (case K)
 assert (leq(_writeByT_Mover, _N) && !leq(_readByUPost_Mover, _L)) ==> (!leq(_readByU_Mover, _L));         // (13.2): Example2.flag is not Write-Read Stable with respect to Example2.flag (case L)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.A.Example2.flag.Example2.y(t: Tid, u: Tid, v: bool, w: int, w0: int, x: Example2, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example2.flag;                                                                            
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example2.y(u: Tid,y: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example2.flag[x] := v;                                                                             
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _writeByUPost := WriteEval.Example2.y(u: Tid,y: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _E)) ==> ((_writeByU_Mover == _writeByUPost_Mover || _writeByU_Mover == _E));       // (14.2): Example2.y is not Write-Write Stable with respect to Example2.flag (case A.1)
 assert (leq(_writeByT_Mover, _N) && !leq(_writeByUPost_Mover, _L)) ==> (!leq(_writeByU_Mover, _L));       // (14.2): Example2.y is not Write-Write Stable with respect to Example2.flag (case A.2)
 assert (x != y && leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByUPost_Mover == _writeByUPost_Mover || _writeByUPost_Mover == _E));       // (14.2): Example2.y is not Write-Write Stable with respect to Example2.flag (case A.3)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 procedure Stable.Check.C.Example2.flag.Example2.y(t: Tid, u: Tid, v: bool, w: int, w0: int, x: Example2, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example2.flag;                                                                            
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var tmpV : bool;                                                                                   
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var w_mid: int;                                                                                    
 var x_mid: Example2;                                                                               
 var Example.y_mid: [Example]int;                                                                   
 var v_mid: bool;                                                                                   
 var Example._state_mid: [Example]State;                                                            
 var y_mid: Example2;                                                                               
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
 var w0_mid: int;                                                                                   
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 _writeByT := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 tmpV := Example2.flag[x];                                                                          
 Example2.flag[x] := v;                                                                             
                                                                                                    
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
 _writeByU := WriteEval.Example2.y(u: Tid,y: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 Example2.flag[x] := tmpV;                                                                          
 Example2.y[y] := w;                                                                                
 _writeByTPost := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (13.2): Example2.flag is not Write-Write Stable with respect to Example2.y (case C)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.DE.Example2.flag.Example2.y(t: Tid, u: Tid, v: bool, w: int, w0: int, x: Example2, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example2.flag;                                                                            
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var tmpV : bool;                                                                                   
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var w_mid: int;                                                                                    
 var x_mid: Example2;                                                                               
 var Example.y_mid: [Example]int;                                                                   
 var v_mid: bool;                                                                                   
 var Example._state_mid: [Example]State;                                                            
 var y_mid: Example2;                                                                               
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
 var w0_mid: int;                                                                                   
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example2.y(u: Tid,y: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 tmpV := Example2.flag[x];                                                                          
 Example2.flag[x] := v;                                                                             
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
                                                                                                    
 _writeByUPost := WriteEval.Example2.y(u: Tid,y: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
 Example2.flag[x] := tmpV;                                                                          
 Example2.y[y] := w;                                                                                
 _writeByTPost := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
                                                                                                    
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _N)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (13.2): Example2.flag is not Write-Write Stable with respect to Example2.y (case D)
 assert (leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (13.2): Example2.flag is not Write-Write Stable with respect to Example2.y (case R)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.FHI.Example2.flag.Example2.y(t: Tid, u: Tid, v: bool, w: int, w0: int, x: Example2, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example2.flag;                                                                            
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _readByT : MoverPath;                                                                          
 var _readByT_Mover : Mover;                                                                        
 var _readByT_Path : int;                                                                           
 var _readByTPost : MoverPath;                                                                      
 var _readByTPost_Mover : Mover;                                                                    
 var _readByTPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _readByT := ReadEval.Example2.flag(t: Tid,x: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByT_Mover := m#moverPath(_readByT);                                                           
 _readByT_Path := p#moverPath(_readByT);                                                            
 _writeByU := WriteEval.Example2.y(u: Tid,y: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example2.y[y] := w;                                                                                
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByTPost := ReadEval.Example2.flag(t: Tid,x: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByTPost_Mover := m#moverPath(_readByTPost);                                                   
 _readByTPost_Path := p#moverPath(_readByTPost);                                                    
                                                                                                    
 assert (leq(_readByT_Mover, _R) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (13.2): Example2.flag is not Read-Write Stable with respect to Example2.y (case F)
 assert (leq(_readByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (13.2): Example2.flag is not Read-Write Stable with respect to Example2.y (case H)
 assert (x != y && leq(_readByT_Mover, _N) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (13.2): Example2.flag is not Read-Write Stable with respect to Example2.y (case I)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.JKL.Example2.flag.Example2.y(t: Tid, u: Tid, v: bool, w: int, w0: int, x: Example2, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example2.flag;                                                                            
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _readByU : MoverPath;                                                                          
 var _readByU_Mover : Mover;                                                                        
 var _readByU_Path : int;                                                                           
 var _readByUPost : MoverPath;                                                                      
 var _readByUPost_Mover : Mover;                                                                    
 var _readByUPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var v_pre: bool;                                                                                   
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var v_post: bool;                                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _readByU := ReadEval.Example2.y(u: Tid,y: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByU_Mover := m#moverPath(_readByU);                                                           
 _readByU_Path := p#moverPath(_readByU);                                                            
 _writeByT := WriteEval.Example2.flag(t: Tid,x: Example2,v: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example2.flag[x] := v;                                                                             
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByUPost := ReadEval.Example2.y(u: Tid,y: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByUPost_Mover := m#moverPath(_readByUPost);                                                   
 _readByUPost_Path := p#moverPath(_readByUPost);                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_readByUPost_Mover, _E)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (14.2): Example2.y is not Write-Read Stable with respect to Example2.flag (case J)
 assert (leq(_writeByT_Mover, _N) && leq(_readByUPost_Mover, _L)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (14.2): Example2.y is not Write-Read Stable with respect to Example2.flag (case K)
 assert (leq(_writeByT_Mover, _N) && !leq(_readByUPost_Mover, _L)) ==> (!leq(_readByU_Mover, _L));         // (14.2): Example2.y is not Write-Read Stable with respect to Example2.flag (case L)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.A.Example2.y.Example.flag(t: Tid, u: Tid, v: int, w: bool, w0: bool, x: Example2, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example2.y;                                                                               
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example.flag(u: Tid,y: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example2.y[x] := v;                                                                                
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _writeByUPost := WriteEval.Example.flag(u: Tid,y: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _E)) ==> ((_writeByU_Mover == _writeByUPost_Mover || _writeByU_Mover == _E));       // (5.2): Example.flag is not Write-Write Stable with respect to Example2.y (case A.1)
 assert (leq(_writeByT_Mover, _N) && !leq(_writeByUPost_Mover, _L)) ==> (!leq(_writeByU_Mover, _L));       // (5.2): Example.flag is not Write-Write Stable with respect to Example2.y (case A.2)
 assert (true && leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByUPost_Mover == _writeByUPost_Mover || _writeByUPost_Mover == _E));       // (5.2): Example.flag is not Write-Write Stable with respect to Example2.y (case A.3)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 procedure Stable.Check.C.Example2.y.Example.flag(t: Tid, u: Tid, v: int, w: bool, w0: bool, x: Example2, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example2.y;                                                                               
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var tmpV : int;                                                                                    
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var x_mid: Example2;                                                                               
 var Example.y_mid: [Example]int;                                                                   
 var w0_mid: bool;                                                                                  
 var y_mid: Example;                                                                                
 var Example._state_mid: [Example]State;                                                            
 var v_mid: int;                                                                                    
 var w_mid: bool;                                                                                   
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 _writeByT := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 tmpV := Example2.y[x];                                                                             
 Example2.y[x] := v;                                                                                
                                                                                                    
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
 _writeByU := WriteEval.Example.flag(u: Tid,y: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 Example2.y[x] := tmpV;                                                                             
 Example.flag[y] := w;                                                                              
 _writeByTPost := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (14.2): Example2.y is not Write-Write Stable with respect to Example.flag (case C)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.DE.Example2.y.Example.flag(t: Tid, u: Tid, v: int, w: bool, w0: bool, x: Example2, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example2.y;                                                                               
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var tmpV : int;                                                                                    
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var x_mid: Example2;                                                                               
 var Example.y_mid: [Example]int;                                                                   
 var w0_mid: bool;                                                                                  
 var y_mid: Example;                                                                                
 var Example._state_mid: [Example]State;                                                            
 var v_mid: int;                                                                                    
 var w_mid: bool;                                                                                   
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example.flag(u: Tid,y: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 tmpV := Example2.y[x];                                                                             
 Example2.y[x] := v;                                                                                
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
                                                                                                    
 _writeByUPost := WriteEval.Example.flag(u: Tid,y: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
 Example2.y[x] := tmpV;                                                                             
 Example.flag[y] := w;                                                                              
 _writeByTPost := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
                                                                                                    
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _N)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (14.2): Example2.y is not Write-Write Stable with respect to Example.flag (case D)
 assert (leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (14.2): Example2.y is not Write-Write Stable with respect to Example.flag (case R)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.FHI.Example2.y.Example.flag(t: Tid, u: Tid, v: int, w: bool, w0: bool, x: Example2, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example2.y;                                                                               
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _readByT : MoverPath;                                                                          
 var _readByT_Mover : Mover;                                                                        
 var _readByT_Path : int;                                                                           
 var _readByTPost : MoverPath;                                                                      
 var _readByTPost_Mover : Mover;                                                                    
 var _readByTPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _readByT := ReadEval.Example2.y(t: Tid,x: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByT_Mover := m#moverPath(_readByT);                                                           
 _readByT_Path := p#moverPath(_readByT);                                                            
 _writeByU := WriteEval.Example.flag(u: Tid,y: Example,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example.flag[y] := w;                                                                              
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByTPost := ReadEval.Example2.y(t: Tid,x: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByTPost_Mover := m#moverPath(_readByTPost);                                                   
 _readByTPost_Path := p#moverPath(_readByTPost);                                                    
                                                                                                    
 assert (leq(_readByT_Mover, _R) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (14.2): Example2.y is not Read-Write Stable with respect to Example.flag (case F)
 assert (leq(_readByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (14.2): Example2.y is not Read-Write Stable with respect to Example.flag (case H)
 assert (true && leq(_readByT_Mover, _N) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (14.2): Example2.y is not Read-Write Stable with respect to Example.flag (case I)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.JKL.Example2.y.Example.flag(t: Tid, u: Tid, v: int, w: bool, w0: bool, x: Example2, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example2.y;                                                                               
 modifies Example.flag;                                                                             
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _readByU : MoverPath;                                                                          
 var _readByU_Mover : Mover;                                                                        
 var _readByU_Path : int;                                                                           
 var _readByUPost : MoverPath;                                                                      
 var _readByUPost_Mover : Mover;                                                                    
 var _readByUPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _readByU := ReadEval.Example.flag(u: Tid,y: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByU_Mover := m#moverPath(_readByU);                                                           
 _readByU_Path := p#moverPath(_readByU);                                                            
 _writeByT := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example2.y[x] := v;                                                                                
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByUPost := ReadEval.Example.flag(u: Tid,y: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByUPost_Mover := m#moverPath(_readByUPost);                                                   
 _readByUPost_Path := p#moverPath(_readByUPost);                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_readByUPost_Mover, _E)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (5.2): Example.flag is not Write-Read Stable with respect to Example2.y (case J)
 assert (leq(_writeByT_Mover, _N) && leq(_readByUPost_Mover, _L)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (5.2): Example.flag is not Write-Read Stable with respect to Example2.y (case K)
 assert (leq(_writeByT_Mover, _N) && !leq(_readByUPost_Mover, _L)) ==> (!leq(_readByU_Mover, _L));         // (5.2): Example.flag is not Write-Read Stable with respect to Example2.y (case L)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.A.Example2.y.Example.y(t: Tid, u: Tid, v: int, w: int, w0: int, x: Example2, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example2.y;                                                                               
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example.y(u: Tid,y: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example2.y[x] := v;                                                                                
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _writeByUPost := WriteEval.Example.y(u: Tid,y: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _E)) ==> ((_writeByU_Mover == _writeByUPost_Mover || _writeByU_Mover == _E));       // (6.2): Example.y is not Write-Write Stable with respect to Example2.y (case A.1)
 assert (leq(_writeByT_Mover, _N) && !leq(_writeByUPost_Mover, _L)) ==> (!leq(_writeByU_Mover, _L));       // (6.2): Example.y is not Write-Write Stable with respect to Example2.y (case A.2)
 assert (true && leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByUPost_Mover == _writeByUPost_Mover || _writeByUPost_Mover == _E));       // (6.2): Example.y is not Write-Write Stable with respect to Example2.y (case A.3)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 procedure Stable.Check.C.Example2.y.Example.y(t: Tid, u: Tid, v: int, w: int, w0: int, x: Example2, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example2.y;                                                                               
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var tmpV : int;                                                                                    
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var w_mid: int;                                                                                    
 var x_mid: Example2;                                                                               
 var Example.y_mid: [Example]int;                                                                   
 var y_mid: Example;                                                                                
 var Example._state_mid: [Example]State;                                                            
 var v_mid: int;                                                                                    
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
 var w0_mid: int;                                                                                   
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 _writeByT := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 tmpV := Example2.y[x];                                                                             
 Example2.y[x] := v;                                                                                
                                                                                                    
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
 _writeByU := WriteEval.Example.y(u: Tid,y: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 Example2.y[x] := tmpV;                                                                             
 Example.y[y] := w;                                                                                 
 _writeByTPost := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (14.2): Example2.y is not Write-Write Stable with respect to Example.y (case C)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.DE.Example2.y.Example.y(t: Tid, u: Tid, v: int, w: int, w0: int, x: Example2, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example2.y;                                                                               
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var tmpV : int;                                                                                    
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var w_mid: int;                                                                                    
 var x_mid: Example2;                                                                               
 var Example.y_mid: [Example]int;                                                                   
 var y_mid: Example;                                                                                
 var Example._state_mid: [Example]State;                                                            
 var v_mid: int;                                                                                    
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
 var w0_mid: int;                                                                                   
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example.y(u: Tid,y: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 tmpV := Example2.y[x];                                                                             
 Example2.y[x] := v;                                                                                
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
                                                                                                    
 _writeByUPost := WriteEval.Example.y(u: Tid,y: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
 Example2.y[x] := tmpV;                                                                             
 Example.y[y] := w;                                                                                 
 _writeByTPost := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
                                                                                                    
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _N)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (14.2): Example2.y is not Write-Write Stable with respect to Example.y (case D)
 assert (leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (14.2): Example2.y is not Write-Write Stable with respect to Example.y (case R)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.FHI.Example2.y.Example.y(t: Tid, u: Tid, v: int, w: int, w0: int, x: Example2, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example2.y;                                                                               
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _readByT : MoverPath;                                                                          
 var _readByT_Mover : Mover;                                                                        
 var _readByT_Path : int;                                                                           
 var _readByTPost : MoverPath;                                                                      
 var _readByTPost_Mover : Mover;                                                                    
 var _readByTPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _readByT := ReadEval.Example2.y(t: Tid,x: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByT_Mover := m#moverPath(_readByT);                                                           
 _readByT_Path := p#moverPath(_readByT);                                                            
 _writeByU := WriteEval.Example.y(u: Tid,y: Example,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example.y[y] := w;                                                                                 
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByTPost := ReadEval.Example2.y(t: Tid,x: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByTPost_Mover := m#moverPath(_readByTPost);                                                   
 _readByTPost_Path := p#moverPath(_readByTPost);                                                    
                                                                                                    
 assert (leq(_readByT_Mover, _R) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (14.2): Example2.y is not Read-Write Stable with respect to Example.y (case F)
 assert (leq(_readByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (14.2): Example2.y is not Read-Write Stable with respect to Example.y (case H)
 assert (true && leq(_readByT_Mover, _N) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (14.2): Example2.y is not Read-Write Stable with respect to Example.y (case I)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.JKL.Example2.y.Example.y(t: Tid, u: Tid, v: int, w: int, w0: int, x: Example2, y: Example)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example._state[y], u);                                                       
 modifies Example2.y;                                                                               
 modifies Example.y;                                                                                
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _readByU : MoverPath;                                                                          
 var _readByU_Mover : Mover;                                                                        
 var _readByU_Path : int;                                                                           
 var _readByUPost : MoverPath;                                                                      
 var _readByUPost_Mover : Mover;                                                                    
 var _readByUPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var y_pre: Example;                                                                                
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var y_post: Example;                                                                               
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _readByU := ReadEval.Example.y(u: Tid,y: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByU_Mover := m#moverPath(_readByU);                                                           
 _readByU_Path := p#moverPath(_readByU);                                                            
 _writeByT := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example2.y[x] := v;                                                                                
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByUPost := ReadEval.Example.y(u: Tid,y: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByUPost_Mover := m#moverPath(_readByUPost);                                                   
 _readByUPost_Path := p#moverPath(_readByUPost);                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_readByUPost_Mover, _E)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (6.2): Example.y is not Write-Read Stable with respect to Example2.y (case J)
 assert (leq(_writeByT_Mover, _N) && leq(_readByUPost_Mover, _L)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (6.2): Example.y is not Write-Read Stable with respect to Example2.y (case K)
 assert (leq(_writeByT_Mover, _N) && !leq(_readByUPost_Mover, _L)) ==> (!leq(_readByU_Mover, _L));         // (6.2): Example.y is not Write-Read Stable with respect to Example2.y (case L)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.A.Example2.y.Example2.flag(t: Tid, u: Tid, v: int, w: bool, w0: bool, x: Example2, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example2.y;                                                                               
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example2.flag(u: Tid,y: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example2.y[x] := v;                                                                                
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _writeByUPost := WriteEval.Example2.flag(u: Tid,y: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _E)) ==> ((_writeByU_Mover == _writeByUPost_Mover || _writeByU_Mover == _E));       // (13.2): Example2.flag is not Write-Write Stable with respect to Example2.y (case A.1)
 assert (leq(_writeByT_Mover, _N) && !leq(_writeByUPost_Mover, _L)) ==> (!leq(_writeByU_Mover, _L));       // (13.2): Example2.flag is not Write-Write Stable with respect to Example2.y (case A.2)
 assert (x != y && leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByUPost_Mover == _writeByUPost_Mover || _writeByUPost_Mover == _E));       // (13.2): Example2.flag is not Write-Write Stable with respect to Example2.y (case A.3)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 procedure Stable.Check.C.Example2.y.Example2.flag(t: Tid, u: Tid, v: int, w: bool, w0: bool, x: Example2, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example2.y;                                                                               
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var tmpV : int;                                                                                    
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var x_mid: Example2;                                                                               
 var Example.y_mid: [Example]int;                                                                   
 var w0_mid: bool;                                                                                  
 var Example._state_mid: [Example]State;                                                            
 var y_mid: Example2;                                                                               
 var v_mid: int;                                                                                    
 var w_mid: bool;                                                                                   
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 _writeByT := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 tmpV := Example2.y[x];                                                                             
 Example2.y[x] := v;                                                                                
                                                                                                    
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
 _writeByU := WriteEval.Example2.flag(u: Tid,y: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 Example2.y[x] := tmpV;                                                                             
 Example2.flag[y] := w;                                                                             
 _writeByTPost := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (14.2): Example2.y is not Write-Write Stable with respect to Example2.flag (case C)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.DE.Example2.y.Example2.flag(t: Tid, u: Tid, v: int, w: bool, w0: bool, x: Example2, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example2.y;                                                                               
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var tmpV : int;                                                                                    
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var x_mid: Example2;                                                                               
 var Example.y_mid: [Example]int;                                                                   
 var w0_mid: bool;                                                                                  
 var Example._state_mid: [Example]State;                                                            
 var y_mid: Example2;                                                                               
 var v_mid: int;                                                                                    
 var w_mid: bool;                                                                                   
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example2.flag(u: Tid,y: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 tmpV := Example2.y[x];                                                                             
 Example2.y[x] := v;                                                                                
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
                                                                                                    
 _writeByUPost := WriteEval.Example2.flag(u: Tid,y: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
 Example2.y[x] := tmpV;                                                                             
 Example2.flag[y] := w;                                                                             
 _writeByTPost := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
                                                                                                    
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _N)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (14.2): Example2.y is not Write-Write Stable with respect to Example2.flag (case D)
 assert (leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (14.2): Example2.y is not Write-Write Stable with respect to Example2.flag (case R)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.FHI.Example2.y.Example2.flag(t: Tid, u: Tid, v: int, w: bool, w0: bool, x: Example2, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example2.y;                                                                               
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _readByT : MoverPath;                                                                          
 var _readByT_Mover : Mover;                                                                        
 var _readByT_Path : int;                                                                           
 var _readByTPost : MoverPath;                                                                      
 var _readByTPost_Mover : Mover;                                                                    
 var _readByTPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _readByT := ReadEval.Example2.y(t: Tid,x: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByT_Mover := m#moverPath(_readByT);                                                           
 _readByT_Path := p#moverPath(_readByT);                                                            
 _writeByU := WriteEval.Example2.flag(u: Tid,y: Example2,w: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example2.flag[y] := w;                                                                             
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByTPost := ReadEval.Example2.y(t: Tid,x: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByTPost_Mover := m#moverPath(_readByTPost);                                                   
 _readByTPost_Path := p#moverPath(_readByTPost);                                                    
                                                                                                    
 assert (leq(_readByT_Mover, _R) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (14.2): Example2.y is not Read-Write Stable with respect to Example2.flag (case F)
 assert (leq(_readByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (14.2): Example2.y is not Read-Write Stable with respect to Example2.flag (case H)
 assert (x != y && leq(_readByT_Mover, _N) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (14.2): Example2.y is not Read-Write Stable with respect to Example2.flag (case I)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.JKL.Example2.y.Example2.flag(t: Tid, u: Tid, v: int, w: bool, w0: bool, x: Example2, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example2.y;                                                                               
 modifies Example2.flag;                                                                            
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _readByU : MoverPath;                                                                          
 var _readByU_Mover : Mover;                                                                        
 var _readByU_Path : int;                                                                           
 var _readByUPost : MoverPath;                                                                      
 var _readByUPost_Mover : Mover;                                                                    
 var _readByUPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var w_pre: bool;                                                                                   
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var w0_pre: bool;                                                                                  
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var w_post: bool;                                                                                  
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
 var w0_post: bool;                                                                                 
                                                                                                    
                                                                                                    
 _readByU := ReadEval.Example2.flag(u: Tid,y: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByU_Mover := m#moverPath(_readByU);                                                           
 _readByU_Path := p#moverPath(_readByU);                                                            
 _writeByT := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example2.y[x] := v;                                                                                
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByUPost := ReadEval.Example2.flag(u: Tid,y: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByUPost_Mover := m#moverPath(_readByUPost);                                                   
 _readByUPost_Path := p#moverPath(_readByUPost);                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_readByUPost_Mover, _E)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (13.2): Example2.flag is not Write-Read Stable with respect to Example2.y (case J)
 assert (leq(_writeByT_Mover, _N) && leq(_readByUPost_Mover, _L)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (13.2): Example2.flag is not Write-Read Stable with respect to Example2.y (case K)
 assert (leq(_writeByT_Mover, _N) && !leq(_readByUPost_Mover, _L)) ==> (!leq(_readByU_Mover, _L));         // (13.2): Example2.flag is not Write-Read Stable with respect to Example2.y (case L)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.A.Example2.y.Example2.y(t: Tid, u: Tid, v: int, w: int, w0: int, x: Example2, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example2.y;                                                                               
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example2.y(u: Tid,y: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example2.y[x] := v;                                                                                
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _writeByUPost := WriteEval.Example2.y(u: Tid,y: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _E)) ==> ((_writeByU_Mover == _writeByUPost_Mover || _writeByU_Mover == _E));       // (14.2): Example2.y is not Write-Write Stable with respect to Example2.y (case A.1)
 assert (leq(_writeByT_Mover, _N) && !leq(_writeByUPost_Mover, _L)) ==> (!leq(_writeByU_Mover, _L));       // (14.2): Example2.y is not Write-Write Stable with respect to Example2.y (case A.2)
 assert (x != y && leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByUPost_Mover == _writeByUPost_Mover || _writeByUPost_Mover == _E));       // (14.2): Example2.y is not Write-Write Stable with respect to Example2.y (case A.3)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 procedure Stable.Check.C.Example2.y.Example2.y(t: Tid, u: Tid, v: int, w: int, w0: int, x: Example2, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example2.y;                                                                               
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var tmpV : int;                                                                                    
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var w_mid: int;                                                                                    
 var x_mid: Example2;                                                                               
 var Example.y_mid: [Example]int;                                                                   
 var Example._state_mid: [Example]State;                                                            
 var y_mid: Example2;                                                                               
 var v_mid: int;                                                                                    
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
 var w0_mid: int;                                                                                   
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 _writeByT := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 tmpV := Example2.y[x];                                                                             
 Example2.y[x] := v;                                                                                
                                                                                                    
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
 _writeByU := WriteEval.Example2.y(u: Tid,y: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 Example2.y[x] := tmpV;                                                                             
 Example2.y[y] := w;                                                                                
 _writeByTPost := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (14.2): Example2.y is not Write-Write Stable with respect to Example2.y (case C)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.DE.Example2.y.Example2.y(t: Tid, u: Tid, v: int, w: int, w0: int, x: Example2, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example2.y;                                                                               
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var tmpV : int;                                                                                    
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _writeByUPost : MoverPath;                                                                     
 var _writeByUPost_Mover : Mover;                                                                   
 var _writeByUPost_Path : int;                                                                      
 var _writeByTPost : MoverPath;                                                                     
 var _writeByTPost_Mover : Mover;                                                                   
 var _writeByTPost_Path : int;                                                                      
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var t_mid: Tid;                                                                                    
 var u_mid: Tid;                                                                                    
 var Example.flag_mid: [Example]bool;                                                               
 var Example2._state_mid: [Example2]State;                                                          
 var Example2.y_mid: [Example2]int;                                                                 
 var $recorded.state_mid: int;                                                                      
 var Example2.flag_mid: [Example2]bool;                                                             
 var Example._lock_mid: [Example]Tid;                                                               
 var w_mid: int;                                                                                    
 var x_mid: Example2;                                                                               
 var Example.y_mid: [Example]int;                                                                   
 var Example._state_mid: [Example]State;                                                            
 var y_mid: Example2;                                                                               
 var v_mid: int;                                                                                    
 var Example2._lock_mid: [Example2]Tid;                                                             
 var $pc_mid: Phase;                                                                                
 var w0_mid: int;                                                                                   
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _writeByU := WriteEval.Example2.y(u: Tid,y: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
 _writeByT := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 tmpV := Example2.y[x];                                                                             
 Example2.y[x] := v;                                                                                
 assume Example._state_mid == Example._state && Example.flag_mid == Example.flag && Example.y_mid == Example.y && Example._lock_mid == Example._lock && Example2._state_mid == Example2._state && Example2.flag_mid == Example2.flag && Example2.y_mid == Example2.y && Example2._lock_mid == Example2._lock && t_mid == t && u_mid == u && v_mid == v && w_mid == w && w0_mid == w0 && x_mid == x && y_mid == y;
 assume $recorded.state_mid == 1;                                                                   
                                                                                                    
 _writeByUPost := WriteEval.Example2.y(u: Tid,y: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByUPost_Mover := m#moverPath(_writeByUPost);                                                 
 _writeByUPost_Path := p#moverPath(_writeByUPost);                                                  
                                                                                                    
 Example2.y[x] := tmpV;                                                                             
 Example2.y[y] := w;                                                                                
 _writeByTPost := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByTPost_Mover := m#moverPath(_writeByTPost);                                                 
 _writeByTPost_Path := p#moverPath(_writeByTPost);                                                  
                                                                                                    
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_writeByUPost_Mover, _N)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (14.2): Example2.y is not Write-Write Stable with respect to Example2.y (case D)
 assert (leq(_writeByT_Mover, _N) && leq(_writeByUPost_Mover, _L)) ==> ((_writeByTPost_Mover == _writeByT_Mover || _writeByTPost_Mover == _E));       // (14.2): Example2.y is not Write-Write Stable with respect to Example2.y (case R)
                                                                                                    
 }                                                                                                  
                                                                                                    
                                                                                                    
 procedure Stable.Check.FHI.Example2.y.Example2.y(t: Tid, u: Tid, v: int, w: int, w0: int, x: Example2, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example2.y;                                                                               
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var _writeByU : MoverPath;                                                                         
 var _writeByU_Mover : Mover;                                                                       
 var _writeByU_Path : int;                                                                          
 var _readByT : MoverPath;                                                                          
 var _readByT_Mover : Mover;                                                                        
 var _readByT_Path : int;                                                                           
 var _readByTPost : MoverPath;                                                                      
 var _readByTPost_Mover : Mover;                                                                    
 var _readByTPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _readByT := ReadEval.Example2.y(t: Tid,x: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByT_Mover := m#moverPath(_readByT);                                                           
 _readByT_Path := p#moverPath(_readByT);                                                            
 _writeByU := WriteEval.Example2.y(u: Tid,y: Example2,w: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByU_Mover := m#moverPath(_writeByU);                                                         
 _writeByU_Path := p#moverPath(_writeByU);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example2.y[y] := w;                                                                                
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByTPost := ReadEval.Example2.y(t: Tid,x: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByTPost_Mover := m#moverPath(_readByTPost);                                                   
 _readByTPost_Path := p#moverPath(_readByTPost);                                                    
                                                                                                    
 assert (leq(_readByT_Mover, _R) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (14.2): Example2.y is not Read-Write Stable with respect to Example2.y (case F)
 assert (leq(_readByT_Mover, _E) && leq(_writeByU_Mover, _L)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (14.2): Example2.y is not Read-Write Stable with respect to Example2.y (case H)
 assert (x != y && leq(_readByT_Mover, _N) && leq(_writeByU_Mover, _N)) ==> ((_readByTPost_Mover == _readByT_Mover || _readByTPost_Mover == _E));       // (14.2): Example2.y is not Read-Write Stable with respect to Example2.y (case I)
                                                                                                    
 }                                                                                                  
                                                                                                    
 procedure Stable.Check.JKL.Example2.y.Example2.y(t: Tid, u: Tid, v: int, w: int, w0: int, x: Example2, y: Example2)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(t);                                                                              
 requires ValidTid(u);                                                                              
 requires t != u;                                                                                   
 requires isAccessible(Example2._state[x], t);                                                      
 requires isAccessible(Example2._state[y], u);                                                      
 modifies Example2.y;                                                                               
 modifies Example2.y;                                                                               
                                                                                                    
 {                                                                                                  
 var _writeByT : MoverPath;                                                                         
 var _writeByT_Mover : Mover;                                                                       
 var _writeByT_Path : int;                                                                          
 var _readByU : MoverPath;                                                                          
 var _readByU_Mover : Mover;                                                                        
 var _readByU_Path : int;                                                                           
 var _readByUPost : MoverPath;                                                                      
 var _readByUPost_Mover : Mover;                                                                    
 var _readByUPost_Path : int;                                                                       
 var Example._state_pre: [Example]State;                                                            
 var v_pre: int;                                                                                    
 var Example2._lock_pre: [Example2]Tid;                                                             
 var $recorded.state_pre: int;                                                                      
 var u_pre: Tid;                                                                                    
 var w0_pre: int;                                                                                   
 var Example._lock_pre: [Example]Tid;                                                               
 var y_pre: Example2;                                                                               
 var Example.flag_pre: [Example]bool;                                                               
 var w_pre: int;                                                                                    
 var Example.y_pre: [Example]int;                                                                   
 var Example2._state_pre: [Example2]State;                                                          
 var $pc_pre: Phase;                                                                                
 var Example2.flag_pre: [Example2]bool;                                                             
 var t_pre: Tid;                                                                                    
 var x_pre: Example2;                                                                               
 var Example2.y_pre: [Example2]int;                                                                 
                                                                                                    
 var $recorded.state_post: int;                                                                     
 var Example2._lock_post: [Example2]Tid;                                                            
 var w0_post: int;                                                                                  
 var t_post: Tid;                                                                                   
 var $pc_post: Phase;                                                                               
 var x_post: Example2;                                                                              
 var y_post: Example2;                                                                              
 var Example2._state_post: [Example2]State;                                                         
 var Example._lock_post: [Example]Tid;                                                              
 var w_post: int;                                                                                   
 var Example.y_post: [Example]int;                                                                  
 var Example2.y_post: [Example2]int;                                                                
 var v_post: int;                                                                                   
 var Example.flag_post: [Example]bool;                                                              
 var Example2.flag_post: [Example2]bool;                                                            
 var u_post: Tid;                                                                                   
 var Example._state_post: [Example]State;                                                           
                                                                                                    
                                                                                                    
 _readByU := ReadEval.Example2.y(u: Tid,y: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByU_Mover := m#moverPath(_readByU);                                                           
 _readByU_Path := p#moverPath(_readByU);                                                            
 _writeByT := WriteEval.Example2.y(t: Tid,x: Example2,v: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _writeByT_Mover := m#moverPath(_writeByT);                                                         
 _writeByT_Path := p#moverPath(_writeByT);                                                          
                                                                                                    
 assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && t_pre == t && u_pre == u && v_pre == v && w_pre == w && w0_pre == w0 && x_pre == x && y_pre == y;
 assume $recorded.state_pre == 1;                                                                   
 Example2.y[x] := v;                                                                                
 assume Example._state_post == Example._state && Example.flag_post == Example.flag && Example.y_post == Example.y && Example._lock_post == Example._lock && Example2._state_post == Example2._state && Example2.flag_post == Example2.flag && Example2.y_post == Example2.y && Example2._lock_post == Example2._lock && t_post == t && u_post == u && v_post == v && w_post == w && w0_post == w0 && x_post == x && y_post == y;
 assume $recorded.state_post == 1;                                                                  
                                                                                                    
 _readByUPost := ReadEval.Example2.y(u: Tid,y: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock);
 _readByUPost_Mover := m#moverPath(_readByUPost);                                                   
 _readByUPost_Path := p#moverPath(_readByUPost);                                                    
                                                                                                    
 assert (leq(_writeByT_Mover, _R) && leq(_readByUPost_Mover, _E)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (14.2): Example2.y is not Write-Read Stable with respect to Example2.y (case J)
 assert (leq(_writeByT_Mover, _N) && leq(_readByUPost_Mover, _L)) ==> ((_readByU_Mover == _readByUPost_Mover || _readByU_Mover == _E));       // (14.2): Example2.y is not Write-Read Stable with respect to Example2.y (case K)
 assert (leq(_writeByT_Mover, _N) && !leq(_readByUPost_Mover, _L)) ==> (!leq(_readByU_Mover, _L));         // (14.2): Example2.y is not Write-Read Stable with respect to Example2.y (case L)
                                                                                                    
 }                                                                                                  
                                                                                                    
procedure Yield(tid: Tid);                                                                          
requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
requires ValidTid(tid);                                                                             
modifies Example._state;                                                                            
modifies Example.flag;                                                                              
modifies Example.y;                                                                                 
modifies Example._lock;                                                                             
modifies Example2._state;                                                                           
modifies Example2.flag;                                                                             
modifies Example2.y;                                                                                
modifies Example2._lock;                                                                            
ensures StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
ensures Y(tid , old(Example._state), old(Example.flag), old(Example.y), old(Example._lock), old(Example2._state), old(Example2.flag), old(Example2.y), old(Example2._lock) , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
                                                                                                    
// Example.flag:                                                                                    
                                                                                                    
function {:inline} Y_Example.flag(tid : Tid, this: Example, newValue: bool , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid): bool
{                                                                                                   
 ((isAccessible(Example._state[this], tid) && leq(m#moverPath(ReadEval.Example.flag(tid: Tid,this: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock)), _R)) ==> (Example.flag[this] == newValue))
                                                                                                    
}                                                                                                   
                                                                                                    
function {:inline} Invariant.Y_Example.flag(tid : Tid, this: Example, newValue: bool , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid): bool
{                                                                                                   
 true                                                                                               
                                                                                                    
}                                                                                                   
                                                                                                    
procedure Y_Example.flag.Subsumes.W(tid : Tid, u : Tid, this: Example, newValue: bool , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(tid);                                                                            
 requires ValidTid(u) && u != tid;                                                                  
                                                                                                    
{                                                                                                   
var newValue_yield: bool;                                                                           
var Example2.flag_yield: [Example2]bool;                                                            
var Example2._state_yield: [Example2]State;                                                         
var tid_yield: Tid;                                                                                 
var $pc_yield: Phase;                                                                               
var Example._state_yield: [Example]State;                                                           
var Example2._lock_yield: [Example2]Tid;                                                            
var u_yield: Tid;                                                                                   
var Example2.y_yield: [Example2]int;                                                                
var Example.flag_yield: [Example]bool;                                                              
var this_yield: Example;                                                                            
var Example.y_yield: [Example]int;                                                                  
var $recorded.state_yield: int;                                                                     
var Example._lock_yield: [Example]Tid;                                                              
                                                                                                    
 assume isAccessible(Example._state[this], tid);                                                    
 assume isAccessible(Example._state[this], u);                                                      
 assume !isError(m#moverPath(WriteEval.Example.flag(u: Tid,this: Example,newValue: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock)));
                                                                                                    
assume Example._state_yield == Example._state && Example.flag_yield == Example.flag && Example.y_yield == Example.y && Example._lock_yield == Example._lock && Example2._state_yield == Example2._state && Example2.flag_yield == Example2.flag && Example2.y_yield == Example2.y && Example2._lock_yield == Example2._lock && u_yield == u && newValue_yield == newValue && this_yield == this && tid_yield == tid;
assume $recorded.state_yield == 1;                                                                  
 assert Y_Example.flag(tid, this, newValue , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
}                                                                                                   
                                                                                                    
procedure Y_Example.flag.Reflexive(tid : Tid, this: Example , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(tid);                                                                            
                                                                                                    
{                                                                                                   
var Example2.flag_yield: [Example2]bool;                                                            
var Example2._state_yield: [Example2]State;                                                         
var tid_yield: Tid;                                                                                 
var $pc_yield: Phase;                                                                               
var Example._state_yield: [Example]State;                                                           
var Example2._lock_yield: [Example2]Tid;                                                            
var Example2.y_yield: [Example2]int;                                                                
var Example.flag_yield: [Example]bool;                                                              
var this_yield: Example;                                                                            
var Example.y_yield: [Example]int;                                                                  
var $recorded.state_yield: int;                                                                     
var Example._lock_yield: [Example]Tid;                                                              
                                                                                                    
 assume isAccessible(Example._state[this], tid);                                                    
assume Example._state_yield == Example._state && Example.flag_yield == Example.flag && Example.y_yield == Example.y && Example._lock_yield == Example._lock && Example2._state_yield == Example2._state && Example2.flag_yield == Example2.flag && Example2.y_yield == Example2.y && Example2._lock_yield == Example2._lock && this_yield == this && tid_yield == tid;
assume $recorded.state_yield == 1;                                                                  
 assert Y_Example.flag(tid, this, Example.flag[this] , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
}                                                                                                   
                                                                                                    
procedure Y_Example.flag.Transitive(tid : Tid, this: Example, newValue : bool , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid , Example._state_p: [Example]State, Example.flag_p: [Example]bool, Example.y_p: [Example]int, Example._lock_p: [Example]Tid, Example2._state_p: [Example2]State, Example2.flag_p: [Example2]bool, Example2.y_p: [Example2]int, Example2._lock_p: [Example2]Tid)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires StateInvariant(Example._state_p, Example.flag_p, Example.y_p, Example._lock_p, Example2._state_p, Example2.flag_p, Example2.y_p, Example2._lock_p);
 requires ValidTid(tid);                                                                            
                                                                                                    
{                                                                                                   
var Example._state_pre: [Example]State;                                                             
var Example2._lock_pre: [Example2]Tid;                                                              
var newValue_pre: bool;                                                                             
var $recorded.state_pre: int;                                                                       
var Example._lock_pre: [Example]Tid;                                                                
var Example.flag_pre: [Example]bool;                                                                
var Example.y_pre: [Example]int;                                                                    
var Example2._state_pre: [Example2]State;                                                           
var tid_pre: Tid;                                                                                   
var $pc_pre: Phase;                                                                                 
var this_pre: Example;                                                                              
var Example2.flag_pre: [Example2]bool;                                                              
var Example2.y_pre: [Example2]int;                                                                  
                                                                                                    
var $recorded.state_post: int;                                                                      
var Example2._lock_post: [Example2]Tid;                                                             
var this_post: Example;                                                                             
var $pc_post: Phase;                                                                                
var Example2._state_post: [Example2]State;                                                          
var tid_post: Tid;                                                                                  
var Example._lock_post: [Example]Tid;                                                               
var Example.y_post: [Example]int;                                                                   
var Example2.y_post: [Example2]int;                                                                 
var newValue_post: bool;                                                                            
var Example.flag_post: [Example]bool;                                                               
var Example2.flag_post: [Example2]bool;                                                             
var Example._state_post: [Example]State;                                                            
                                                                                                    
assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && newValue_pre == newValue && this_pre == this && tid_pre == tid;
assume $recorded.state_pre == 1;                                                                    
 assume isAccessible(Example._state[this], tid);                                                    
 assume Y(tid , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock , Example._state_p, Example.flag_p, Example.y_p, Example._lock_p, Example2._state_p, Example2.flag_p, Example2.y_p, Example2._lock_p);
 assume Y_Example.flag(tid, this, newValue , Example._state_p, Example.flag_p, Example.y_p, Example._lock_p, Example2._state_p, Example2.flag_p, Example2.y_p, Example2._lock_p);
assume Example._state_post == Example._state_p && Example.flag_post == Example.flag_p && Example.y_post == Example.y_p && Example._lock_post == Example._lock_p && Example2._state_post == Example2._state_p && Example2.flag_post == Example2.flag_p && Example2.y_post == Example2.y_p && Example2._lock_post == Example2._lock_p && newValue_post == newValue && this_post == this && tid_post == tid;
assume $recorded.state_post == 1;                                                                   
 assert Y_Example.flag(tid, this, newValue , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
}                                                                                                   
// Example.y:                                                                                       
                                                                                                    
function {:inline} Y_Example.y(tid : Tid, this: Example, newValue: int , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid): bool
{                                                                                                   
 ((isAccessible(Example._state[this], tid) && leq(m#moverPath(ReadEval.Example.y(tid: Tid,this: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock)), _R)) ==> (Example.y[this] == newValue))
                                                                                                    
}                                                                                                   
                                                                                                    
function {:inline} Invariant.Y_Example.y(tid : Tid, this: Example, newValue: int , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid): bool
{                                                                                                   
 true                                                                                               
                                                                                                    
}                                                                                                   
                                                                                                    
procedure Y_Example.y.Subsumes.W(tid : Tid, u : Tid, this: Example, newValue: int , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(tid);                                                                            
 requires ValidTid(u) && u != tid;                                                                  
                                                                                                    
{                                                                                                   
var Example2.flag_yield: [Example2]bool;                                                            
var Example2._state_yield: [Example2]State;                                                         
var tid_yield: Tid;                                                                                 
var $pc_yield: Phase;                                                                               
var newValue_yield: int;                                                                            
var Example._state_yield: [Example]State;                                                           
var Example2._lock_yield: [Example2]Tid;                                                            
var u_yield: Tid;                                                                                   
var Example2.y_yield: [Example2]int;                                                                
var Example.flag_yield: [Example]bool;                                                              
var this_yield: Example;                                                                            
var Example.y_yield: [Example]int;                                                                  
var $recorded.state_yield: int;                                                                     
var Example._lock_yield: [Example]Tid;                                                              
                                                                                                    
 assume isAccessible(Example._state[this], tid);                                                    
 assume isAccessible(Example._state[this], u);                                                      
 assume !isError(m#moverPath(WriteEval.Example.y(u: Tid,this: Example,newValue: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock)));
                                                                                                    
assume Example._state_yield == Example._state && Example.flag_yield == Example.flag && Example.y_yield == Example.y && Example._lock_yield == Example._lock && Example2._state_yield == Example2._state && Example2.flag_yield == Example2.flag && Example2.y_yield == Example2.y && Example2._lock_yield == Example2._lock && u_yield == u && newValue_yield == newValue && this_yield == this && tid_yield == tid;
assume $recorded.state_yield == 1;                                                                  
 assert Y_Example.y(tid, this, newValue , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
}                                                                                                   
                                                                                                    
procedure Y_Example.y.Reflexive(tid : Tid, this: Example , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(tid);                                                                            
                                                                                                    
{                                                                                                   
var Example2.flag_yield: [Example2]bool;                                                            
var Example2._state_yield: [Example2]State;                                                         
var tid_yield: Tid;                                                                                 
var $pc_yield: Phase;                                                                               
var Example._state_yield: [Example]State;                                                           
var Example2._lock_yield: [Example2]Tid;                                                            
var Example2.y_yield: [Example2]int;                                                                
var Example.flag_yield: [Example]bool;                                                              
var this_yield: Example;                                                                            
var Example.y_yield: [Example]int;                                                                  
var $recorded.state_yield: int;                                                                     
var Example._lock_yield: [Example]Tid;                                                              
                                                                                                    
 assume isAccessible(Example._state[this], tid);                                                    
assume Example._state_yield == Example._state && Example.flag_yield == Example.flag && Example.y_yield == Example.y && Example._lock_yield == Example._lock && Example2._state_yield == Example2._state && Example2.flag_yield == Example2.flag && Example2.y_yield == Example2.y && Example2._lock_yield == Example2._lock && this_yield == this && tid_yield == tid;
assume $recorded.state_yield == 1;                                                                  
 assert Y_Example.y(tid, this, Example.y[this] , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
}                                                                                                   
                                                                                                    
procedure Y_Example.y.Transitive(tid : Tid, this: Example, newValue : int , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid , Example._state_p: [Example]State, Example.flag_p: [Example]bool, Example.y_p: [Example]int, Example._lock_p: [Example]Tid, Example2._state_p: [Example2]State, Example2.flag_p: [Example2]bool, Example2.y_p: [Example2]int, Example2._lock_p: [Example2]Tid)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires StateInvariant(Example._state_p, Example.flag_p, Example.y_p, Example._lock_p, Example2._state_p, Example2.flag_p, Example2.y_p, Example2._lock_p);
 requires ValidTid(tid);                                                                            
                                                                                                    
{                                                                                                   
var Example._state_pre: [Example]State;                                                             
var Example2._lock_pre: [Example2]Tid;                                                              
var $recorded.state_pre: int;                                                                       
var newValue_pre: int;                                                                              
var Example._lock_pre: [Example]Tid;                                                                
var Example.flag_pre: [Example]bool;                                                                
var Example.y_pre: [Example]int;                                                                    
var Example2._state_pre: [Example2]State;                                                           
var tid_pre: Tid;                                                                                   
var $pc_pre: Phase;                                                                                 
var this_pre: Example;                                                                              
var Example2.flag_pre: [Example2]bool;                                                              
var Example2.y_pre: [Example2]int;                                                                  
                                                                                                    
var $recorded.state_post: int;                                                                      
var Example2._lock_post: [Example2]Tid;                                                             
var newValue_post: int;                                                                             
var this_post: Example;                                                                             
var $pc_post: Phase;                                                                                
var Example2._state_post: [Example2]State;                                                          
var tid_post: Tid;                                                                                  
var Example._lock_post: [Example]Tid;                                                               
var Example.y_post: [Example]int;                                                                   
var Example2.y_post: [Example2]int;                                                                 
var Example.flag_post: [Example]bool;                                                               
var Example2.flag_post: [Example2]bool;                                                             
var Example._state_post: [Example]State;                                                            
                                                                                                    
assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && newValue_pre == newValue && this_pre == this && tid_pre == tid;
assume $recorded.state_pre == 1;                                                                    
 assume isAccessible(Example._state[this], tid);                                                    
 assume Y(tid , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock , Example._state_p, Example.flag_p, Example.y_p, Example._lock_p, Example2._state_p, Example2.flag_p, Example2.y_p, Example2._lock_p);
 assume Y_Example.y(tid, this, newValue , Example._state_p, Example.flag_p, Example.y_p, Example._lock_p, Example2._state_p, Example2.flag_p, Example2.y_p, Example2._lock_p);
assume Example._state_post == Example._state_p && Example.flag_post == Example.flag_p && Example.y_post == Example.y_p && Example._lock_post == Example._lock_p && Example2._state_post == Example2._state_p && Example2.flag_post == Example2.flag_p && Example2.y_post == Example2.y_p && Example2._lock_post == Example2._lock_p && newValue_post == newValue && this_post == this && tid_post == tid;
assume $recorded.state_post == 1;                                                                   
 assert Y_Example.y(tid, this, newValue , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
}                                                                                                   
// Example._lock:                                                                                   
                                                                                                    
function {:inline} Y_Example._lock(tid : Tid, this: Example, newValue: Tid , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid): bool
{                                                                                                   
 ((isAccessible(Example._state[this], tid) && leq(m#moverPath(ReadEval.Example._lock(tid: Tid,this: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock)), _R)) ==> (Example._lock[this] == newValue))
 &&(((Example._lock[this]==tid)==(newValue==tid)))                                                  
                                                                                                    
}                                                                                                   
                                                                                                    
function {:inline} Invariant.Y_Example._lock(tid : Tid, this: Example, newValue: Tid , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid): bool
{                                                                                                   
 true                                                                                               
                                                                                                    
}                                                                                                   
                                                                                                    
procedure Y_Example._lock.Subsumes.W(tid : Tid, u : Tid, this: Example, newValue: Tid , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(tid);                                                                            
 requires ValidTid(u) && u != tid;                                                                  
                                                                                                    
{                                                                                                   
var newValue_yield: Tid;                                                                            
var Example2.flag_yield: [Example2]bool;                                                            
var Example2._state_yield: [Example2]State;                                                         
var tid_yield: Tid;                                                                                 
var $pc_yield: Phase;                                                                               
var Example._state_yield: [Example]State;                                                           
var Example2._lock_yield: [Example2]Tid;                                                            
var u_yield: Tid;                                                                                   
var Example2.y_yield: [Example2]int;                                                                
var Example.flag_yield: [Example]bool;                                                              
var this_yield: Example;                                                                            
var Example.y_yield: [Example]int;                                                                  
var $recorded.state_yield: int;                                                                     
var Example._lock_yield: [Example]Tid;                                                              
                                                                                                    
 assume isAccessible(Example._state[this], tid);                                                    
 assume isAccessible(Example._state[this], u);                                                      
 assume !isError(m#moverPath(WriteEval.Example._lock(u: Tid,this: Example,newValue: Tid,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock)));
 assume leq(m#moverPath(ReadEval.Example._lock(tid: Tid,this: Example,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock)), _N);
assume Example._state_yield == Example._state && Example.flag_yield == Example.flag && Example.y_yield == Example.y && Example._lock_yield == Example._lock && Example2._state_yield == Example2._state && Example2.flag_yield == Example2.flag && Example2.y_yield == Example2.y && Example2._lock_yield == Example2._lock && u_yield == u && newValue_yield == newValue && this_yield == this && tid_yield == tid;
assume $recorded.state_yield == 1;                                                                  
 assert Y_Example._lock(tid, this, newValue , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
}                                                                                                   
                                                                                                    
procedure Y_Example._lock.Reflexive(tid : Tid, this: Example , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(tid);                                                                            
                                                                                                    
{                                                                                                   
var Example2.flag_yield: [Example2]bool;                                                            
var Example2._state_yield: [Example2]State;                                                         
var tid_yield: Tid;                                                                                 
var $pc_yield: Phase;                                                                               
var Example._state_yield: [Example]State;                                                           
var Example2._lock_yield: [Example2]Tid;                                                            
var Example2.y_yield: [Example2]int;                                                                
var Example.flag_yield: [Example]bool;                                                              
var this_yield: Example;                                                                            
var Example.y_yield: [Example]int;                                                                  
var $recorded.state_yield: int;                                                                     
var Example._lock_yield: [Example]Tid;                                                              
                                                                                                    
 assume isAccessible(Example._state[this], tid);                                                    
assume Example._state_yield == Example._state && Example.flag_yield == Example.flag && Example.y_yield == Example.y && Example._lock_yield == Example._lock && Example2._state_yield == Example2._state && Example2.flag_yield == Example2.flag && Example2.y_yield == Example2.y && Example2._lock_yield == Example2._lock && this_yield == this && tid_yield == tid;
assume $recorded.state_yield == 1;                                                                  
 assert Y_Example._lock(tid, this, Example._lock[this] , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
}                                                                                                   
                                                                                                    
procedure Y_Example._lock.Transitive(tid : Tid, this: Example, newValue : Tid , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid , Example._state_p: [Example]State, Example.flag_p: [Example]bool, Example.y_p: [Example]int, Example._lock_p: [Example]Tid, Example2._state_p: [Example2]State, Example2.flag_p: [Example2]bool, Example2.y_p: [Example2]int, Example2._lock_p: [Example2]Tid)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires StateInvariant(Example._state_p, Example.flag_p, Example.y_p, Example._lock_p, Example2._state_p, Example2.flag_p, Example2.y_p, Example2._lock_p);
 requires ValidTid(tid);                                                                            
                                                                                                    
{                                                                                                   
var Example._state_pre: [Example]State;                                                             
var Example2._lock_pre: [Example2]Tid;                                                              
var $recorded.state_pre: int;                                                                       
var Example._lock_pre: [Example]Tid;                                                                
var Example.flag_pre: [Example]bool;                                                                
var Example.y_pre: [Example]int;                                                                    
var Example2._state_pre: [Example2]State;                                                           
var tid_pre: Tid;                                                                                   
var $pc_pre: Phase;                                                                                 
var this_pre: Example;                                                                              
var Example2.flag_pre: [Example2]bool;                                                              
var newValue_pre: Tid;                                                                              
var Example2.y_pre: [Example2]int;                                                                  
                                                                                                    
var $recorded.state_post: int;                                                                      
var Example2._lock_post: [Example2]Tid;                                                             
var this_post: Example;                                                                             
var $pc_post: Phase;                                                                                
var Example2._state_post: [Example2]State;                                                          
var tid_post: Tid;                                                                                  
var Example._lock_post: [Example]Tid;                                                               
var Example.y_post: [Example]int;                                                                   
var Example2.y_post: [Example2]int;                                                                 
var Example.flag_post: [Example]bool;                                                               
var newValue_post: Tid;                                                                             
var Example2.flag_post: [Example2]bool;                                                             
var Example._state_post: [Example]State;                                                            
                                                                                                    
assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && newValue_pre == newValue && this_pre == this && tid_pre == tid;
assume $recorded.state_pre == 1;                                                                    
 assume isAccessible(Example._state[this], tid);                                                    
 assume Y(tid , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock , Example._state_p, Example.flag_p, Example.y_p, Example._lock_p, Example2._state_p, Example2.flag_p, Example2.y_p, Example2._lock_p);
 assume Y_Example._lock(tid, this, newValue , Example._state_p, Example.flag_p, Example.y_p, Example._lock_p, Example2._state_p, Example2.flag_p, Example2.y_p, Example2._lock_p);
assume Example._state_post == Example._state_p && Example.flag_post == Example.flag_p && Example.y_post == Example.y_p && Example._lock_post == Example._lock_p && Example2._state_post == Example2._state_p && Example2.flag_post == Example2.flag_p && Example2.y_post == Example2.y_p && Example2._lock_post == Example2._lock_p && newValue_post == newValue && this_post == this && tid_post == tid;
assume $recorded.state_post == 1;                                                                   
 assert Y_Example._lock(tid, this, newValue , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
}                                                                                                   
// Example2.flag:                                                                                   
                                                                                                    
function {:inline} Y_Example2.flag(tid : Tid, this: Example2, newValue: bool , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid): bool
{                                                                                                   
 ((isAccessible(Example2._state[this], tid) && leq(m#moverPath(ReadEval.Example2.flag(tid: Tid,this: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock)), _R)) ==> (Example2.flag[this] == newValue))
                                                                                                    
}                                                                                                   
                                                                                                    
function {:inline} Invariant.Y_Example2.flag(tid : Tid, this: Example2, newValue: bool , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid): bool
{                                                                                                   
 true                                                                                               
                                                                                                    
}                                                                                                   
                                                                                                    
procedure Y_Example2.flag.Subsumes.W(tid : Tid, u : Tid, this: Example2, newValue: bool , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(tid);                                                                            
 requires ValidTid(u) && u != tid;                                                                  
                                                                                                    
{                                                                                                   
var newValue_yield: bool;                                                                           
var this_yield: Example2;                                                                           
var Example2.flag_yield: [Example2]bool;                                                            
var Example2._state_yield: [Example2]State;                                                         
var tid_yield: Tid;                                                                                 
var $pc_yield: Phase;                                                                               
var Example._state_yield: [Example]State;                                                           
var Example2._lock_yield: [Example2]Tid;                                                            
var u_yield: Tid;                                                                                   
var Example2.y_yield: [Example2]int;                                                                
var Example.flag_yield: [Example]bool;                                                              
var Example.y_yield: [Example]int;                                                                  
var $recorded.state_yield: int;                                                                     
var Example._lock_yield: [Example]Tid;                                                              
                                                                                                    
 assume isAccessible(Example2._state[this], tid);                                                   
 assume isAccessible(Example2._state[this], u);                                                     
 assume !isError(m#moverPath(WriteEval.Example2.flag(u: Tid,this: Example2,newValue: bool,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock)));
                                                                                                    
assume Example._state_yield == Example._state && Example.flag_yield == Example.flag && Example.y_yield == Example.y && Example._lock_yield == Example._lock && Example2._state_yield == Example2._state && Example2.flag_yield == Example2.flag && Example2.y_yield == Example2.y && Example2._lock_yield == Example2._lock && u_yield == u && newValue_yield == newValue && this_yield == this && tid_yield == tid;
assume $recorded.state_yield == 1;                                                                  
 assert Y_Example2.flag(tid, this, newValue , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
}                                                                                                   
                                                                                                    
procedure Y_Example2.flag.Reflexive(tid : Tid, this: Example2 , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(tid);                                                                            
                                                                                                    
{                                                                                                   
var this_yield: Example2;                                                                           
var Example2.flag_yield: [Example2]bool;                                                            
var Example2._state_yield: [Example2]State;                                                         
var tid_yield: Tid;                                                                                 
var $pc_yield: Phase;                                                                               
var Example._state_yield: [Example]State;                                                           
var Example2._lock_yield: [Example2]Tid;                                                            
var Example2.y_yield: [Example2]int;                                                                
var Example.flag_yield: [Example]bool;                                                              
var Example.y_yield: [Example]int;                                                                  
var $recorded.state_yield: int;                                                                     
var Example._lock_yield: [Example]Tid;                                                              
                                                                                                    
 assume isAccessible(Example2._state[this], tid);                                                   
assume Example._state_yield == Example._state && Example.flag_yield == Example.flag && Example.y_yield == Example.y && Example._lock_yield == Example._lock && Example2._state_yield == Example2._state && Example2.flag_yield == Example2.flag && Example2.y_yield == Example2.y && Example2._lock_yield == Example2._lock && this_yield == this && tid_yield == tid;
assume $recorded.state_yield == 1;                                                                  
 assert Y_Example2.flag(tid, this, Example2.flag[this] , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
}                                                                                                   
                                                                                                    
procedure Y_Example2.flag.Transitive(tid : Tid, this: Example2, newValue : bool , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid , Example._state_p: [Example]State, Example.flag_p: [Example]bool, Example.y_p: [Example]int, Example._lock_p: [Example]Tid, Example2._state_p: [Example2]State, Example2.flag_p: [Example2]bool, Example2.y_p: [Example2]int, Example2._lock_p: [Example2]Tid)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires StateInvariant(Example._state_p, Example.flag_p, Example.y_p, Example._lock_p, Example2._state_p, Example2.flag_p, Example2.y_p, Example2._lock_p);
 requires ValidTid(tid);                                                                            
                                                                                                    
{                                                                                                   
var Example._state_pre: [Example]State;                                                             
var Example2._lock_pre: [Example2]Tid;                                                              
var this_pre: Example2;                                                                             
var newValue_pre: bool;                                                                             
var $recorded.state_pre: int;                                                                       
var Example._lock_pre: [Example]Tid;                                                                
var Example.flag_pre: [Example]bool;                                                                
var Example.y_pre: [Example]int;                                                                    
var Example2._state_pre: [Example2]State;                                                           
var tid_pre: Tid;                                                                                   
var $pc_pre: Phase;                                                                                 
var Example2.flag_pre: [Example2]bool;                                                              
var Example2.y_pre: [Example2]int;                                                                  
                                                                                                    
var $recorded.state_post: int;                                                                      
var Example2._lock_post: [Example2]Tid;                                                             
var $pc_post: Phase;                                                                                
var Example2._state_post: [Example2]State;                                                          
var tid_post: Tid;                                                                                  
var Example._lock_post: [Example]Tid;                                                               
var Example.y_post: [Example]int;                                                                   
var Example2.y_post: [Example2]int;                                                                 
var this_post: Example2;                                                                            
var newValue_post: bool;                                                                            
var Example.flag_post: [Example]bool;                                                               
var Example2.flag_post: [Example2]bool;                                                             
var Example._state_post: [Example]State;                                                            
                                                                                                    
assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && newValue_pre == newValue && this_pre == this && tid_pre == tid;
assume $recorded.state_pre == 1;                                                                    
 assume isAccessible(Example2._state[this], tid);                                                   
 assume Y(tid , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock , Example._state_p, Example.flag_p, Example.y_p, Example._lock_p, Example2._state_p, Example2.flag_p, Example2.y_p, Example2._lock_p);
 assume Y_Example2.flag(tid, this, newValue , Example._state_p, Example.flag_p, Example.y_p, Example._lock_p, Example2._state_p, Example2.flag_p, Example2.y_p, Example2._lock_p);
assume Example._state_post == Example._state_p && Example.flag_post == Example.flag_p && Example.y_post == Example.y_p && Example._lock_post == Example._lock_p && Example2._state_post == Example2._state_p && Example2.flag_post == Example2.flag_p && Example2.y_post == Example2.y_p && Example2._lock_post == Example2._lock_p && newValue_post == newValue && this_post == this && tid_post == tid;
assume $recorded.state_post == 1;                                                                   
 assert Y_Example2.flag(tid, this, newValue , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
}                                                                                                   
// Example2.y:                                                                                      
                                                                                                    
function {:inline} Y_Example2.y(tid : Tid, this: Example2, newValue: int , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid): bool
{                                                                                                   
 ((isAccessible(Example2._state[this], tid) && leq(m#moverPath(ReadEval.Example2.y(tid: Tid,this: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock)), _R)) ==> (Example2.y[this] == newValue))
                                                                                                    
}                                                                                                   
                                                                                                    
function {:inline} Invariant.Y_Example2.y(tid : Tid, this: Example2, newValue: int , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid): bool
{                                                                                                   
 true                                                                                               
                                                                                                    
}                                                                                                   
                                                                                                    
procedure Y_Example2.y.Subsumes.W(tid : Tid, u : Tid, this: Example2, newValue: int , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(tid);                                                                            
 requires ValidTid(u) && u != tid;                                                                  
                                                                                                    
{                                                                                                   
var this_yield: Example2;                                                                           
var Example2.flag_yield: [Example2]bool;                                                            
var Example2._state_yield: [Example2]State;                                                         
var tid_yield: Tid;                                                                                 
var $pc_yield: Phase;                                                                               
var newValue_yield: int;                                                                            
var Example._state_yield: [Example]State;                                                           
var Example2._lock_yield: [Example2]Tid;                                                            
var u_yield: Tid;                                                                                   
var Example2.y_yield: [Example2]int;                                                                
var Example.flag_yield: [Example]bool;                                                              
var Example.y_yield: [Example]int;                                                                  
var $recorded.state_yield: int;                                                                     
var Example._lock_yield: [Example]Tid;                                                              
                                                                                                    
 assume isAccessible(Example2._state[this], tid);                                                   
 assume isAccessible(Example2._state[this], u);                                                     
 assume !isError(m#moverPath(WriteEval.Example2.y(u: Tid,this: Example2,newValue: int,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock)));
                                                                                                    
assume Example._state_yield == Example._state && Example.flag_yield == Example.flag && Example.y_yield == Example.y && Example._lock_yield == Example._lock && Example2._state_yield == Example2._state && Example2.flag_yield == Example2.flag && Example2.y_yield == Example2.y && Example2._lock_yield == Example2._lock && u_yield == u && newValue_yield == newValue && this_yield == this && tid_yield == tid;
assume $recorded.state_yield == 1;                                                                  
 assert Y_Example2.y(tid, this, newValue , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
}                                                                                                   
                                                                                                    
procedure Y_Example2.y.Reflexive(tid : Tid, this: Example2 , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(tid);                                                                            
                                                                                                    
{                                                                                                   
var this_yield: Example2;                                                                           
var Example2.flag_yield: [Example2]bool;                                                            
var Example2._state_yield: [Example2]State;                                                         
var tid_yield: Tid;                                                                                 
var $pc_yield: Phase;                                                                               
var Example._state_yield: [Example]State;                                                           
var Example2._lock_yield: [Example2]Tid;                                                            
var Example2.y_yield: [Example2]int;                                                                
var Example.flag_yield: [Example]bool;                                                              
var Example.y_yield: [Example]int;                                                                  
var $recorded.state_yield: int;                                                                     
var Example._lock_yield: [Example]Tid;                                                              
                                                                                                    
 assume isAccessible(Example2._state[this], tid);                                                   
assume Example._state_yield == Example._state && Example.flag_yield == Example.flag && Example.y_yield == Example.y && Example._lock_yield == Example._lock && Example2._state_yield == Example2._state && Example2.flag_yield == Example2.flag && Example2.y_yield == Example2.y && Example2._lock_yield == Example2._lock && this_yield == this && tid_yield == tid;
assume $recorded.state_yield == 1;                                                                  
 assert Y_Example2.y(tid, this, Example2.y[this] , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
}                                                                                                   
                                                                                                    
procedure Y_Example2.y.Transitive(tid : Tid, this: Example2, newValue : int , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid , Example._state_p: [Example]State, Example.flag_p: [Example]bool, Example.y_p: [Example]int, Example._lock_p: [Example]Tid, Example2._state_p: [Example2]State, Example2.flag_p: [Example2]bool, Example2.y_p: [Example2]int, Example2._lock_p: [Example2]Tid)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires StateInvariant(Example._state_p, Example.flag_p, Example.y_p, Example._lock_p, Example2._state_p, Example2.flag_p, Example2.y_p, Example2._lock_p);
 requires ValidTid(tid);                                                                            
                                                                                                    
{                                                                                                   
var Example._state_pre: [Example]State;                                                             
var Example2._lock_pre: [Example2]Tid;                                                              
var this_pre: Example2;                                                                             
var $recorded.state_pre: int;                                                                       
var newValue_pre: int;                                                                              
var Example._lock_pre: [Example]Tid;                                                                
var Example.flag_pre: [Example]bool;                                                                
var Example.y_pre: [Example]int;                                                                    
var Example2._state_pre: [Example2]State;                                                           
var tid_pre: Tid;                                                                                   
var $pc_pre: Phase;                                                                                 
var Example2.flag_pre: [Example2]bool;                                                              
var Example2.y_pre: [Example2]int;                                                                  
                                                                                                    
var $recorded.state_post: int;                                                                      
var Example2._lock_post: [Example2]Tid;                                                             
var newValue_post: int;                                                                             
var $pc_post: Phase;                                                                                
var Example2._state_post: [Example2]State;                                                          
var tid_post: Tid;                                                                                  
var Example._lock_post: [Example]Tid;                                                               
var Example.y_post: [Example]int;                                                                   
var Example2.y_post: [Example2]int;                                                                 
var this_post: Example2;                                                                            
var Example.flag_post: [Example]bool;                                                               
var Example2.flag_post: [Example2]bool;                                                             
var Example._state_post: [Example]State;                                                            
                                                                                                    
assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && newValue_pre == newValue && this_pre == this && tid_pre == tid;
assume $recorded.state_pre == 1;                                                                    
 assume isAccessible(Example2._state[this], tid);                                                   
 assume Y(tid , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock , Example._state_p, Example.flag_p, Example.y_p, Example._lock_p, Example2._state_p, Example2.flag_p, Example2.y_p, Example2._lock_p);
 assume Y_Example2.y(tid, this, newValue , Example._state_p, Example.flag_p, Example.y_p, Example._lock_p, Example2._state_p, Example2.flag_p, Example2.y_p, Example2._lock_p);
assume Example._state_post == Example._state_p && Example.flag_post == Example.flag_p && Example.y_post == Example.y_p && Example._lock_post == Example._lock_p && Example2._state_post == Example2._state_p && Example2.flag_post == Example2.flag_p && Example2.y_post == Example2.y_p && Example2._lock_post == Example2._lock_p && newValue_post == newValue && this_post == this && tid_post == tid;
assume $recorded.state_post == 1;                                                                   
 assert Y_Example2.y(tid, this, newValue , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
}                                                                                                   
// Example2._lock:                                                                                  
                                                                                                    
function {:inline} Y_Example2._lock(tid : Tid, this: Example2, newValue: Tid , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid): bool
{                                                                                                   
 ((isAccessible(Example2._state[this], tid) && leq(m#moverPath(ReadEval.Example2._lock(tid: Tid,this: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock)), _R)) ==> (Example2._lock[this] == newValue))
 &&(((Example2._lock[this]==tid)==(newValue==tid)))                                                 
                                                                                                    
}                                                                                                   
                                                                                                    
function {:inline} Invariant.Y_Example2._lock(tid : Tid, this: Example2, newValue: Tid , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid): bool
{                                                                                                   
 true                                                                                               
                                                                                                    
}                                                                                                   
                                                                                                    
procedure Y_Example2._lock.Subsumes.W(tid : Tid, u : Tid, this: Example2, newValue: Tid , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(tid);                                                                            
 requires ValidTid(u) && u != tid;                                                                  
                                                                                                    
{                                                                                                   
var this_yield: Example2;                                                                           
var newValue_yield: Tid;                                                                            
var Example2.flag_yield: [Example2]bool;                                                            
var Example2._state_yield: [Example2]State;                                                         
var tid_yield: Tid;                                                                                 
var $pc_yield: Phase;                                                                               
var Example._state_yield: [Example]State;                                                           
var Example2._lock_yield: [Example2]Tid;                                                            
var u_yield: Tid;                                                                                   
var Example2.y_yield: [Example2]int;                                                                
var Example.flag_yield: [Example]bool;                                                              
var Example.y_yield: [Example]int;                                                                  
var $recorded.state_yield: int;                                                                     
var Example._lock_yield: [Example]Tid;                                                              
                                                                                                    
 assume isAccessible(Example2._state[this], tid);                                                   
 assume isAccessible(Example2._state[this], u);                                                     
 assume !isError(m#moverPath(WriteEval.Example2._lock(u: Tid,this: Example2,newValue: Tid,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock)));
 assume leq(m#moverPath(ReadEval.Example2._lock(tid: Tid,this: Example2,Example._state,Example.flag,Example.y,Example._lock,Example2._state,Example2.flag,Example2.y,Example2._lock)), _N);
assume Example._state_yield == Example._state && Example.flag_yield == Example.flag && Example.y_yield == Example.y && Example._lock_yield == Example._lock && Example2._state_yield == Example2._state && Example2.flag_yield == Example2.flag && Example2.y_yield == Example2.y && Example2._lock_yield == Example2._lock && u_yield == u && newValue_yield == newValue && this_yield == this && tid_yield == tid;
assume $recorded.state_yield == 1;                                                                  
 assert Y_Example2._lock(tid, this, newValue , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
}                                                                                                   
                                                                                                    
procedure Y_Example2._lock.Reflexive(tid : Tid, this: Example2 , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires ValidTid(tid);                                                                            
                                                                                                    
{                                                                                                   
var this_yield: Example2;                                                                           
var Example2.flag_yield: [Example2]bool;                                                            
var Example2._state_yield: [Example2]State;                                                         
var tid_yield: Tid;                                                                                 
var $pc_yield: Phase;                                                                               
var Example._state_yield: [Example]State;                                                           
var Example2._lock_yield: [Example2]Tid;                                                            
var Example2.y_yield: [Example2]int;                                                                
var Example.flag_yield: [Example]bool;                                                              
var Example.y_yield: [Example]int;                                                                  
var $recorded.state_yield: int;                                                                     
var Example._lock_yield: [Example]Tid;                                                              
                                                                                                    
 assume isAccessible(Example2._state[this], tid);                                                   
assume Example._state_yield == Example._state && Example.flag_yield == Example.flag && Example.y_yield == Example.y && Example._lock_yield == Example._lock && Example2._state_yield == Example2._state && Example2.flag_yield == Example2.flag && Example2.y_yield == Example2.y && Example2._lock_yield == Example2._lock && this_yield == this && tid_yield == tid;
assume $recorded.state_yield == 1;                                                                  
 assert Y_Example2._lock(tid, this, Example2._lock[this] , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
}                                                                                                   
                                                                                                    
procedure Y_Example2._lock.Transitive(tid : Tid, this: Example2, newValue : Tid , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid , Example._state_p: [Example]State, Example.flag_p: [Example]bool, Example.y_p: [Example]int, Example._lock_p: [Example]Tid, Example2._state_p: [Example2]State, Example2.flag_p: [Example2]bool, Example2.y_p: [Example2]int, Example2._lock_p: [Example2]Tid)
 requires StateInvariant(Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
 requires StateInvariant(Example._state_p, Example.flag_p, Example.y_p, Example._lock_p, Example2._state_p, Example2.flag_p, Example2.y_p, Example2._lock_p);
 requires ValidTid(tid);                                                                            
                                                                                                    
{                                                                                                   
var Example._state_pre: [Example]State;                                                             
var Example2._lock_pre: [Example2]Tid;                                                              
var this_pre: Example2;                                                                             
var $recorded.state_pre: int;                                                                       
var Example._lock_pre: [Example]Tid;                                                                
var Example.flag_pre: [Example]bool;                                                                
var Example.y_pre: [Example]int;                                                                    
var Example2._state_pre: [Example2]State;                                                           
var tid_pre: Tid;                                                                                   
var $pc_pre: Phase;                                                                                 
var Example2.flag_pre: [Example2]bool;                                                              
var newValue_pre: Tid;                                                                              
var Example2.y_pre: [Example2]int;                                                                  
                                                                                                    
var $recorded.state_post: int;                                                                      
var Example2._lock_post: [Example2]Tid;                                                             
var $pc_post: Phase;                                                                                
var Example2._state_post: [Example2]State;                                                          
var tid_post: Tid;                                                                                  
var Example._lock_post: [Example]Tid;                                                               
var Example.y_post: [Example]int;                                                                   
var Example2.y_post: [Example2]int;                                                                 
var this_post: Example2;                                                                            
var Example.flag_post: [Example]bool;                                                               
var newValue_post: Tid;                                                                             
var Example2.flag_post: [Example2]bool;                                                             
var Example._state_post: [Example]State;                                                            
                                                                                                    
assume Example._state_pre == Example._state && Example.flag_pre == Example.flag && Example.y_pre == Example.y && Example._lock_pre == Example._lock && Example2._state_pre == Example2._state && Example2.flag_pre == Example2.flag && Example2.y_pre == Example2.y && Example2._lock_pre == Example2._lock && newValue_pre == newValue && this_pre == this && tid_pre == tid;
assume $recorded.state_pre == 1;                                                                    
 assume isAccessible(Example2._state[this], tid);                                                   
 assume Y(tid , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock , Example._state_p, Example.flag_p, Example.y_p, Example._lock_p, Example2._state_p, Example2.flag_p, Example2.y_p, Example2._lock_p);
 assume Y_Example2._lock(tid, this, newValue , Example._state_p, Example.flag_p, Example.y_p, Example._lock_p, Example2._state_p, Example2.flag_p, Example2.y_p, Example2._lock_p);
assume Example._state_post == Example._state_p && Example.flag_post == Example.flag_p && Example.y_post == Example.y_p && Example._lock_post == Example._lock_p && Example2._state_post == Example2._state_p && Example2.flag_post == Example2.flag_p && Example2.y_post == Example2.y_p && Example2._lock_post == Example2._lock_p && newValue_post == newValue && this_post == this && tid_post == tid;
assume $recorded.state_post == 1;                                                                   
 assert Y_Example2._lock(tid, this, newValue , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock);
}                                                                                                   
                                                                                                    
                                                                                                    
function {:inline} Y(tid : Tid , Example._state: [Example]State, Example.flag: [Example]bool, Example.y: [Example]int, Example._lock: [Example]Tid, Example2._state: [Example2]State, Example2.flag: [Example2]bool, Example2.y: [Example2]int, Example2._lock: [Example2]Tid , Example._state_p: [Example]State, Example.flag_p: [Example]bool, Example.y_p: [Example]int, Example._lock_p: [Example]Tid, Example2._state_p: [Example2]State, Example2.flag_p: [Example2]bool, Example2.y_p: [Example2]int, Example2._lock_p: [Example2]Tid): bool
{                                                                                                   
 (forall this: Example :: Y_Example.flag(tid : Tid, this, Example.flag_p[this] , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock))
 && (forall this: Example :: Y_Example.y(tid : Tid, this, Example.y_p[this] , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock))
 && (forall this: Example :: Y_Example._lock(tid : Tid, this, Example._lock_p[this] , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock))
 && (forall this: Example2 :: Y_Example2.flag(tid : Tid, this, Example2.flag_p[this] , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock))
 && (forall this: Example2 :: Y_Example2.y(tid : Tid, this, Example2.y_p[this] , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock))
 && (forall this: Example2 :: Y_Example2._lock(tid : Tid, this, Example2._lock_p[this] , Example._state, Example.flag, Example.y, Example._lock, Example2._state, Example2.flag, Example2.y, Example2._lock))
 && (forall _i : Example :: isShared(Example._state[_i]) ==> isShared(Example._state_p[_i]))        
 && (forall _i : Example :: isLocal(Example._state[_i], tid) <==> isLocal(Example._state_p[_i], tid))
 && (forall _i : Example2 :: isShared(Example2._state[_i]) ==> isShared(Example2._state_p[_i]))     
 && (forall _i : Example2 :: isLocal(Example2._state[_i], tid) <==> isLocal(Example2._state_p[_i], tid))
                                                                                                    
}                                                                                                   
                                                                                                    
                                                                                                    
// 661.1-661.34: (5.2): Example.flag failed Write-Write Right-Mover Check
// 728.1-728.30: (5.2): Example.flag failed Write-Read Right-Mover Check
// 799.1-799.34: (5.2): Example.flag failed Write-Write Left-Mover Check
// 867.1-867.30: (5.2): Example.flag failed Write-Read Left-Mover Check
// 932.1-932.34: (5.2): Example.flag failed Read-Write Right-Mover Check
// 1000.1-1000.34: (5.2): Example.flag failed Read-Write Left-Mover Check
// 1067.1-1067.34: (6.2): Example.y failed Write-Write Right-Mover Check
// 1134.1-1134.30: (6.2): Example.y failed Write-Read Right-Mover Check
// 1205.1-1205.34: (6.2): Example.y failed Write-Write Left-Mover Check
// 1273.1-1273.30: (6.2): Example.y failed Write-Read Left-Mover Check
// 1338.1-1338.34: (6.2): Example.y failed Read-Write Right-Mover Check
// 1406.1-1406.34: (6.2): Example.y failed Read-Write Left-Mover Check
// 1473.1-1473.34: (13.2): Example2.flag failed Write-Write Right-Mover Check
// 1540.1-1540.30: (13.2): Example2.flag failed Write-Read Right-Mover Check
// 1611.1-1611.34: (13.2): Example2.flag failed Write-Write Left-Mover Check
// 1679.1-1679.30: (13.2): Example2.flag failed Write-Read Left-Mover Check
// 1744.1-1744.34: (13.2): Example2.flag failed Read-Write Right-Mover Check
// 1812.1-1812.34: (13.2): Example2.flag failed Read-Write Left-Mover Check
// 1879.1-1879.34: (14.2): Example2.y failed Write-Write Right-Mover Check
// 1946.1-1946.30: (14.2): Example2.y failed Write-Read Right-Mover Check
// 2017.1-2017.34: (14.2): Example2.y failed Write-Write Left-Mover Check
// 2085.1-2085.30: (14.2): Example2.y failed Write-Read Left-Mover Check
// 2150.1-2150.34: (14.2): Example2.y failed Read-Write Right-Mover Check
// 2218.1-2218.34: (14.2): Example2.y failed Read-Write Left-Mover Check
// 2297.1-2297.140: (5.2): Example.flag is not Write-Write Stable with respect to Example.flag (case A.1)
// 2298.1-2298.101: (5.2): Example.flag is not Write-Write Stable with respect to Example.flag (case A.2)
// 2299.1-2299.158: (5.2): Example.flag is not Write-Write Stable with respect to Example.flag (case A.3)
// 2407.1-2407.140: (5.2): Example.flag is not Write-Write Stable with respect to Example.flag (case C)
// 2520.1-2520.144: (5.2): Example.flag is not Write-Write Stable with respect to Example.flag (case D)
// 2521.1-2521.144: (5.2): Example.flag is not Write-Write Stable with respect to Example.flag (case R)
// 2600.1-2600.136: (5.2): Example.flag is not Read-Write Stable with respect to Example.flag (case F)
// 2601.1-2601.136: (5.2): Example.flag is not Read-Write Stable with respect to Example.flag (case H)
// 2602.1-2602.146: (5.2): Example.flag is not Read-Write Stable with respect to Example.flag (case I)
// 2680.1-2680.136: (5.2): Example.flag is not Write-Read Stable with respect to Example.flag (case J)
// 2681.1-2681.136: (5.2): Example.flag is not Write-Read Stable with respect to Example.flag (case K)
// 2682.1-2682.99: (5.2): Example.flag is not Write-Read Stable with respect to Example.flag (case L)
// 2762.1-2762.140: (6.2): Example.y is not Write-Write Stable with respect to Example.flag (case A.1)
// 2763.1-2763.101: (6.2): Example.y is not Write-Write Stable with respect to Example.flag (case A.2)
// 2764.1-2764.158: (6.2): Example.y is not Write-Write Stable with respect to Example.flag (case A.3)
// 2872.1-2872.140: (5.2): Example.flag is not Write-Write Stable with respect to Example.y (case C)
// 2985.1-2985.144: (5.2): Example.flag is not Write-Write Stable with respect to Example.y (case D)
// 2986.1-2986.144: (5.2): Example.flag is not Write-Write Stable with respect to Example.y (case R)
// 3065.1-3065.136: (5.2): Example.flag is not Read-Write Stable with respect to Example.y (case F)
// 3066.1-3066.136: (5.2): Example.flag is not Read-Write Stable with respect to Example.y (case H)
// 3067.1-3067.146: (5.2): Example.flag is not Read-Write Stable with respect to Example.y (case I)
// 3145.1-3145.136: (6.2): Example.y is not Write-Read Stable with respect to Example.flag (case J)
// 3146.1-3146.136: (6.2): Example.y is not Write-Read Stable with respect to Example.flag (case K)
// 3147.1-3147.99: (6.2): Example.y is not Write-Read Stable with respect to Example.flag (case L)
// 3227.1-3227.140: (13.2): Example2.flag is not Write-Write Stable with respect to Example.flag (case A.1)
// 3228.1-3228.101: (13.2): Example2.flag is not Write-Write Stable with respect to Example.flag (case A.2)
// 3229.1-3229.156: (13.2): Example2.flag is not Write-Write Stable with respect to Example.flag (case A.3)
// 3337.1-3337.140: (5.2): Example.flag is not Write-Write Stable with respect to Example2.flag (case C)
// 3450.1-3450.144: (5.2): Example.flag is not Write-Write Stable with respect to Example2.flag (case D)
// 3451.1-3451.144: (5.2): Example.flag is not Write-Write Stable with respect to Example2.flag (case R)
// 3530.1-3530.136: (5.2): Example.flag is not Read-Write Stable with respect to Example2.flag (case F)
// 3531.1-3531.136: (5.2): Example.flag is not Read-Write Stable with respect to Example2.flag (case H)
// 3532.1-3532.144: (5.2): Example.flag is not Read-Write Stable with respect to Example2.flag (case I)
// 3610.1-3610.136: (13.2): Example2.flag is not Write-Read Stable with respect to Example.flag (case J)
// 3611.1-3611.136: (13.2): Example2.flag is not Write-Read Stable with respect to Example.flag (case K)
// 3612.1-3612.99: (13.2): Example2.flag is not Write-Read Stable with respect to Example.flag (case L)
// 3692.1-3692.140: (14.2): Example2.y is not Write-Write Stable with respect to Example.flag (case A.1)
// 3693.1-3693.101: (14.2): Example2.y is not Write-Write Stable with respect to Example.flag (case A.2)
// 3694.1-3694.156: (14.2): Example2.y is not Write-Write Stable with respect to Example.flag (case A.3)
// 3802.1-3802.140: (5.2): Example.flag is not Write-Write Stable with respect to Example2.y (case C)
// 3915.1-3915.144: (5.2): Example.flag is not Write-Write Stable with respect to Example2.y (case D)
// 3916.1-3916.144: (5.2): Example.flag is not Write-Write Stable with respect to Example2.y (case R)
// 3995.1-3995.136: (5.2): Example.flag is not Read-Write Stable with respect to Example2.y (case F)
// 3996.1-3996.136: (5.2): Example.flag is not Read-Write Stable with respect to Example2.y (case H)
// 3997.1-3997.144: (5.2): Example.flag is not Read-Write Stable with respect to Example2.y (case I)
// 4075.1-4075.136: (14.2): Example2.y is not Write-Read Stable with respect to Example.flag (case J)
// 4076.1-4076.136: (14.2): Example2.y is not Write-Read Stable with respect to Example.flag (case K)
// 4077.1-4077.99: (14.2): Example2.y is not Write-Read Stable with respect to Example.flag (case L)
// 4157.1-4157.140: (5.2): Example.flag is not Write-Write Stable with respect to Example.y (case A.1)
// 4158.1-4158.101: (5.2): Example.flag is not Write-Write Stable with respect to Example.y (case A.2)
// 4159.1-4159.158: (5.2): Example.flag is not Write-Write Stable with respect to Example.y (case A.3)
// 4267.1-4267.140: (6.2): Example.y is not Write-Write Stable with respect to Example.flag (case C)
// 4380.1-4380.144: (6.2): Example.y is not Write-Write Stable with respect to Example.flag (case D)
// 4381.1-4381.144: (6.2): Example.y is not Write-Write Stable with respect to Example.flag (case R)
// 4460.1-4460.136: (6.2): Example.y is not Read-Write Stable with respect to Example.flag (case F)
// 4461.1-4461.136: (6.2): Example.y is not Read-Write Stable with respect to Example.flag (case H)
// 4462.1-4462.146: (6.2): Example.y is not Read-Write Stable with respect to Example.flag (case I)
// 4540.1-4540.136: (5.2): Example.flag is not Write-Read Stable with respect to Example.y (case J)
// 4541.1-4541.136: (5.2): Example.flag is not Write-Read Stable with respect to Example.y (case K)
// 4542.1-4542.99: (5.2): Example.flag is not Write-Read Stable with respect to Example.y (case L)
// 4622.1-4622.140: (6.2): Example.y is not Write-Write Stable with respect to Example.y (case A.1)
// 4623.1-4623.101: (6.2): Example.y is not Write-Write Stable with respect to Example.y (case A.2)
// 4624.1-4624.158: (6.2): Example.y is not Write-Write Stable with respect to Example.y (case A.3)
// 4732.1-4732.140: (6.2): Example.y is not Write-Write Stable with respect to Example.y (case C)
// 4845.1-4845.144: (6.2): Example.y is not Write-Write Stable with respect to Example.y (case D)
// 4846.1-4846.144: (6.2): Example.y is not Write-Write Stable with respect to Example.y (case R)
// 4925.1-4925.136: (6.2): Example.y is not Read-Write Stable with respect to Example.y (case F)
// 4926.1-4926.136: (6.2): Example.y is not Read-Write Stable with respect to Example.y (case H)
// 4927.1-4927.146: (6.2): Example.y is not Read-Write Stable with respect to Example.y (case I)
// 5005.1-5005.136: (6.2): Example.y is not Write-Read Stable with respect to Example.y (case J)
// 5006.1-5006.136: (6.2): Example.y is not Write-Read Stable with respect to Example.y (case K)
// 5007.1-5007.99: (6.2): Example.y is not Write-Read Stable with respect to Example.y (case L)
// 5087.1-5087.140: (13.2): Example2.flag is not Write-Write Stable with respect to Example.y (case A.1)
// 5088.1-5088.101: (13.2): Example2.flag is not Write-Write Stable with respect to Example.y (case A.2)
// 5089.1-5089.156: (13.2): Example2.flag is not Write-Write Stable with respect to Example.y (case A.3)
// 5197.1-5197.140: (6.2): Example.y is not Write-Write Stable with respect to Example2.flag (case C)
// 5310.1-5310.144: (6.2): Example.y is not Write-Write Stable with respect to Example2.flag (case D)
// 5311.1-5311.144: (6.2): Example.y is not Write-Write Stable with respect to Example2.flag (case R)
// 5390.1-5390.136: (6.2): Example.y is not Read-Write Stable with respect to Example2.flag (case F)
// 5391.1-5391.136: (6.2): Example.y is not Read-Write Stable with respect to Example2.flag (case H)
// 5392.1-5392.144: (6.2): Example.y is not Read-Write Stable with respect to Example2.flag (case I)
// 5470.1-5470.136: (13.2): Example2.flag is not Write-Read Stable with respect to Example.y (case J)
// 5471.1-5471.136: (13.2): Example2.flag is not Write-Read Stable with respect to Example.y (case K)
// 5472.1-5472.99: (13.2): Example2.flag is not Write-Read Stable with respect to Example.y (case L)
// 5552.1-5552.140: (14.2): Example2.y is not Write-Write Stable with respect to Example.y (case A.1)
// 5553.1-5553.101: (14.2): Example2.y is not Write-Write Stable with respect to Example.y (case A.2)
// 5554.1-5554.156: (14.2): Example2.y is not Write-Write Stable with respect to Example.y (case A.3)
// 5662.1-5662.140: (6.2): Example.y is not Write-Write Stable with respect to Example2.y (case C)
// 5775.1-5775.144: (6.2): Example.y is not Write-Write Stable with respect to Example2.y (case D)
// 5776.1-5776.144: (6.2): Example.y is not Write-Write Stable with respect to Example2.y (case R)
// 5855.1-5855.136: (6.2): Example.y is not Read-Write Stable with respect to Example2.y (case F)
// 5856.1-5856.136: (6.2): Example.y is not Read-Write Stable with respect to Example2.y (case H)
// 5857.1-5857.144: (6.2): Example.y is not Read-Write Stable with respect to Example2.y (case I)
// 5935.1-5935.136: (14.2): Example2.y is not Write-Read Stable with respect to Example.y (case J)
// 5936.1-5936.136: (14.2): Example2.y is not Write-Read Stable with respect to Example.y (case K)
// 5937.1-5937.99: (14.2): Example2.y is not Write-Read Stable with respect to Example.y (case L)
// 6017.1-6017.140: (5.2): Example.flag is not Write-Write Stable with respect to Example2.flag (case A.1)
// 6018.1-6018.101: (5.2): Example.flag is not Write-Write Stable with respect to Example2.flag (case A.2)
// 6019.1-6019.156: (5.2): Example.flag is not Write-Write Stable with respect to Example2.flag (case A.3)
// 6127.1-6127.140: (13.2): Example2.flag is not Write-Write Stable with respect to Example.flag (case C)
// 6240.1-6240.144: (13.2): Example2.flag is not Write-Write Stable with respect to Example.flag (case D)
// 6241.1-6241.144: (13.2): Example2.flag is not Write-Write Stable with respect to Example.flag (case R)
// 6320.1-6320.136: (13.2): Example2.flag is not Read-Write Stable with respect to Example.flag (case F)
// 6321.1-6321.136: (13.2): Example2.flag is not Read-Write Stable with respect to Example.flag (case H)
// 6322.1-6322.144: (13.2): Example2.flag is not Read-Write Stable with respect to Example.flag (case I)
// 6400.1-6400.136: (5.2): Example.flag is not Write-Read Stable with respect to Example2.flag (case J)
// 6401.1-6401.136: (5.2): Example.flag is not Write-Read Stable with respect to Example2.flag (case K)
// 6402.1-6402.99: (5.2): Example.flag is not Write-Read Stable with respect to Example2.flag (case L)
// 6482.1-6482.140: (6.2): Example.y is not Write-Write Stable with respect to Example2.flag (case A.1)
// 6483.1-6483.101: (6.2): Example.y is not Write-Write Stable with respect to Example2.flag (case A.2)
// 6484.1-6484.156: (6.2): Example.y is not Write-Write Stable with respect to Example2.flag (case A.3)
// 6592.1-6592.140: (13.2): Example2.flag is not Write-Write Stable with respect to Example.y (case C)
// 6705.1-6705.144: (13.2): Example2.flag is not Write-Write Stable with respect to Example.y (case D)
// 6706.1-6706.144: (13.2): Example2.flag is not Write-Write Stable with respect to Example.y (case R)
// 6785.1-6785.136: (13.2): Example2.flag is not Read-Write Stable with respect to Example.y (case F)
// 6786.1-6786.136: (13.2): Example2.flag is not Read-Write Stable with respect to Example.y (case H)
// 6787.1-6787.144: (13.2): Example2.flag is not Read-Write Stable with respect to Example.y (case I)
// 6865.1-6865.136: (6.2): Example.y is not Write-Read Stable with respect to Example2.flag (case J)
// 6866.1-6866.136: (6.2): Example.y is not Write-Read Stable with respect to Example2.flag (case K)
// 6867.1-6867.99: (6.2): Example.y is not Write-Read Stable with respect to Example2.flag (case L)
// 6947.1-6947.140: (13.2): Example2.flag is not Write-Write Stable with respect to Example2.flag (case A.1)
// 6948.1-6948.101: (13.2): Example2.flag is not Write-Write Stable with respect to Example2.flag (case A.2)
// 6949.1-6949.158: (13.2): Example2.flag is not Write-Write Stable with respect to Example2.flag (case A.3)
// 7057.1-7057.140: (13.2): Example2.flag is not Write-Write Stable with respect to Example2.flag (case C)
// 7170.1-7170.144: (13.2): Example2.flag is not Write-Write Stable with respect to Example2.flag (case D)
// 7171.1-7171.144: (13.2): Example2.flag is not Write-Write Stable with respect to Example2.flag (case R)
// 7250.1-7250.136: (13.2): Example2.flag is not Read-Write Stable with respect to Example2.flag (case F)
// 7251.1-7251.136: (13.2): Example2.flag is not Read-Write Stable with respect to Example2.flag (case H)
// 7252.1-7252.146: (13.2): Example2.flag is not Read-Write Stable with respect to Example2.flag (case I)
// 7330.1-7330.136: (13.2): Example2.flag is not Write-Read Stable with respect to Example2.flag (case J)
// 7331.1-7331.136: (13.2): Example2.flag is not Write-Read Stable with respect to Example2.flag (case K)
// 7332.1-7332.99: (13.2): Example2.flag is not Write-Read Stable with respect to Example2.flag (case L)
// 7412.1-7412.140: (14.2): Example2.y is not Write-Write Stable with respect to Example2.flag (case A.1)
// 7413.1-7413.101: (14.2): Example2.y is not Write-Write Stable with respect to Example2.flag (case A.2)
// 7414.1-7414.158: (14.2): Example2.y is not Write-Write Stable with respect to Example2.flag (case A.3)
// 7522.1-7522.140: (13.2): Example2.flag is not Write-Write Stable with respect to Example2.y (case C)
// 7635.1-7635.144: (13.2): Example2.flag is not Write-Write Stable with respect to Example2.y (case D)
// 7636.1-7636.144: (13.2): Example2.flag is not Write-Write Stable with respect to Example2.y (case R)
// 7715.1-7715.136: (13.2): Example2.flag is not Read-Write Stable with respect to Example2.y (case F)
// 7716.1-7716.136: (13.2): Example2.flag is not Read-Write Stable with respect to Example2.y (case H)
// 7717.1-7717.146: (13.2): Example2.flag is not Read-Write Stable with respect to Example2.y (case I)
// 7795.1-7795.136: (14.2): Example2.y is not Write-Read Stable with respect to Example2.flag (case J)
// 7796.1-7796.136: (14.2): Example2.y is not Write-Read Stable with respect to Example2.flag (case K)
// 7797.1-7797.99: (14.2): Example2.y is not Write-Read Stable with respect to Example2.flag (case L)
// 7877.1-7877.140: (5.2): Example.flag is not Write-Write Stable with respect to Example2.y (case A.1)
// 7878.1-7878.101: (5.2): Example.flag is not Write-Write Stable with respect to Example2.y (case A.2)
// 7879.1-7879.156: (5.2): Example.flag is not Write-Write Stable with respect to Example2.y (case A.3)
// 7987.1-7987.140: (14.2): Example2.y is not Write-Write Stable with respect to Example.flag (case C)
// 8100.1-8100.144: (14.2): Example2.y is not Write-Write Stable with respect to Example.flag (case D)
// 8101.1-8101.144: (14.2): Example2.y is not Write-Write Stable with respect to Example.flag (case R)
// 8180.1-8180.136: (14.2): Example2.y is not Read-Write Stable with respect to Example.flag (case F)
// 8181.1-8181.136: (14.2): Example2.y is not Read-Write Stable with respect to Example.flag (case H)
// 8182.1-8182.144: (14.2): Example2.y is not Read-Write Stable with respect to Example.flag (case I)
// 8260.1-8260.136: (5.2): Example.flag is not Write-Read Stable with respect to Example2.y (case J)
// 8261.1-8261.136: (5.2): Example.flag is not Write-Read Stable with respect to Example2.y (case K)
// 8262.1-8262.99: (5.2): Example.flag is not Write-Read Stable with respect to Example2.y (case L)
// 8342.1-8342.140: (6.2): Example.y is not Write-Write Stable with respect to Example2.y (case A.1)
// 8343.1-8343.101: (6.2): Example.y is not Write-Write Stable with respect to Example2.y (case A.2)
// 8344.1-8344.156: (6.2): Example.y is not Write-Write Stable with respect to Example2.y (case A.3)
// 8452.1-8452.140: (14.2): Example2.y is not Write-Write Stable with respect to Example.y (case C)
// 8565.1-8565.144: (14.2): Example2.y is not Write-Write Stable with respect to Example.y (case D)
// 8566.1-8566.144: (14.2): Example2.y is not Write-Write Stable with respect to Example.y (case R)
// 8645.1-8645.136: (14.2): Example2.y is not Read-Write Stable with respect to Example.y (case F)
// 8646.1-8646.136: (14.2): Example2.y is not Read-Write Stable with respect to Example.y (case H)
// 8647.1-8647.144: (14.2): Example2.y is not Read-Write Stable with respect to Example.y (case I)
// 8725.1-8725.136: (6.2): Example.y is not Write-Read Stable with respect to Example2.y (case J)
// 8726.1-8726.136: (6.2): Example.y is not Write-Read Stable with respect to Example2.y (case K)
// 8727.1-8727.99: (6.2): Example.y is not Write-Read Stable with respect to Example2.y (case L)
// 8807.1-8807.140: (13.2): Example2.flag is not Write-Write Stable with respect to Example2.y (case A.1)
// 8808.1-8808.101: (13.2): Example2.flag is not Write-Write Stable with respect to Example2.y (case A.2)
// 8809.1-8809.158: (13.2): Example2.flag is not Write-Write Stable with respect to Example2.y (case A.3)
// 8917.1-8917.140: (14.2): Example2.y is not Write-Write Stable with respect to Example2.flag (case C)
// 9030.1-9030.144: (14.2): Example2.y is not Write-Write Stable with respect to Example2.flag (case D)
// 9031.1-9031.144: (14.2): Example2.y is not Write-Write Stable with respect to Example2.flag (case R)
// 9110.1-9110.136: (14.2): Example2.y is not Read-Write Stable with respect to Example2.flag (case F)
// 9111.1-9111.136: (14.2): Example2.y is not Read-Write Stable with respect to Example2.flag (case H)
// 9112.1-9112.146: (14.2): Example2.y is not Read-Write Stable with respect to Example2.flag (case I)
// 9190.1-9190.136: (13.2): Example2.flag is not Write-Read Stable with respect to Example2.y (case J)
// 9191.1-9191.136: (13.2): Example2.flag is not Write-Read Stable with respect to Example2.y (case K)
// 9192.1-9192.99: (13.2): Example2.flag is not Write-Read Stable with respect to Example2.y (case L)
// 9272.1-9272.140: (14.2): Example2.y is not Write-Write Stable with respect to Example2.y (case A.1)
// 9273.1-9273.101: (14.2): Example2.y is not Write-Write Stable with respect to Example2.y (case A.2)
// 9274.1-9274.158: (14.2): Example2.y is not Write-Write Stable with respect to Example2.y (case A.3)
// 9382.1-9382.140: (14.2): Example2.y is not Write-Write Stable with respect to Example2.y (case C)
// 9495.1-9495.144: (14.2): Example2.y is not Write-Write Stable with respect to Example2.y (case D)
// 9496.1-9496.144: (14.2): Example2.y is not Write-Write Stable with respect to Example2.y (case R)
// 9575.1-9575.136: (14.2): Example2.y is not Read-Write Stable with respect to Example2.y (case F)
// 9576.1-9576.136: (14.2): Example2.y is not Read-Write Stable with respect to Example2.y (case H)
// 9577.1-9577.146: (14.2): Example2.y is not Read-Write Stable with respect to Example2.y (case I)
// 9655.1-9655.136: (14.2): Example2.y is not Write-Read Stable with respect to Example2.y (case J)
// 9656.1-9656.136: (14.2): Example2.y is not Write-Read Stable with respect to Example2.y (case K)
// 9657.1-9657.99: (14.2): Example2.y is not Write-Read Stable with respect to Example2.y (case L)
// 9693.1-9717.2: (5.2): yields_as clause for Example.flag is not valid
// 9722.1-9741.2: (5.2): yields_as clause for Example.flag is not reflexive
// 9747.1-9785.2: (5.2): yields_as clause for Example.flag is not transitive
// 9804.1-9828.2: (6.2): yields_as clause for Example.y is not valid
// 9833.1-9852.2: (6.2): yields_as clause for Example.y is not reflexive
// 9858.1-9896.2: (6.2): yields_as clause for Example.y is not transitive
// 9916.1-9940.2: (7.32): yields_as clause for Example._lock is not valid
// 9945.1-9964.2: (7.32): yields_as clause for Example._lock is not reflexive
// 9970.1-10008.2: (7.32): yields_as clause for Example._lock is not transitive
// 10027.1-10051.2: (13.2): yields_as clause for Example2.flag is not valid
// 10056.1-10075.2: (13.2): yields_as clause for Example2.flag is not reflexive
// 10081.1-10119.2: (13.2): yields_as clause for Example2.flag is not transitive
// 10138.1-10162.2: (14.2): yields_as clause for Example2.y is not valid
// 10167.1-10186.2: (14.2): yields_as clause for Example2.y is not reflexive
// 10192.1-10230.2: (14.2): yields_as clause for Example2.y is not transitive
// 10250.1-10274.2: (7.32): yields_as clause for Example2._lock is not valid
// 10279.1-10298.2: (7.32): yields_as clause for Example2._lock is not reflexive
// 10304.1-10342.2: (7.32): yields_as clause for Example2._lock is not transitive
